{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/7155532-15ee04aa5b6e6ad4.webp","path":"images/7155532-15ee04aa5b6e6ad4.webp","modified":0,"renderable":0},{"_id":"source/images/7155532-22227abebcbe552a.webp","path":"images/7155532-22227abebcbe552a.webp","modified":0,"renderable":0},{"_id":"source/images/7155532-c0fbf87fba32551c.webp","path":"images/7155532-c0fbf87fba32551c.webp","modified":0,"renderable":0},{"_id":"source/images/1.png","path":"images/1.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/affix.js","path":"js/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/exturl.js","path":"js/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/js.cookie.js","path":"js/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/post-details.js","path":"js/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scroll-cookie.js","path":"js/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scrollspy.js","path":"js/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/LICENSE","path":"lib/reading_progress/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/README.md","path":"lib/reading_progress/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/package.json","path":"lib/reading_progress/package.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/reading_progress.js","path":"lib/reading_progress/reading_progress.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/reading_progress.min.js","path":"lib/reading_progress/reading_progress.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/renovate.json","path":"lib/reading_progress/renovate.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/alipay.jpeg","path":"images/alipay.jpeg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.all-contributorsrc","hash":"a5a536579490546f2275da03765738ceabe45584","modified":1566233933231},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1566233933231},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1566233933231},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1566233933231},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1566233933231},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1566233933231},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1566233933231},{"_id":"themes/next/README.md","hash":"2fcc7621e898732ef7976b89ca2511f84c577c35","modified":1566233933231},{"_id":"themes/next/_config.yml","hash":"bc9ff81fdc35cfcd9c105e9b07e642feedaf7c75","modified":1566233933231},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1566233933231},{"_id":"themes/next/gulpfile.coffee","hash":"2ba4aeddc257a74a209edf5218137010662cd5fb","modified":1566233933235},{"_id":"themes/next/package.json","hash":"170e67ca35a7c1ddc7dae50a90f6d4270143331f","modified":1566233933239},{"_id":"source/_posts/code spliting的两种方式.md","hash":"1bc903ade472fcea11c9a3a338f603c7c66995fe","modified":1566233933223},{"_id":"source/_posts/css sticky footer.md","hash":"c82f22d17e16841a16d7dad1acc95ac10f59f73c","modified":1566233933223},{"_id":"source/_posts/flex实现左边固定右边自适应布局.md","hash":"7c0bdcac51b10a4103eaceea7415fd9dbfc27293","modified":1566233933223},{"_id":"source/_posts/js深拷贝和浅拷贝.md","hash":"97b0d5307bde1d24b0336f610ae6140e15d1b92c","modified":1566233933223},{"_id":"source/_posts/webpack 、manifest 、runtime 、缓存与CommonsChunkPlugin.md","hash":"96ce53be7a1cc8776318fa25f60b898c6ad0c08c","modified":1566233933223},{"_id":"source/_posts/webpack搭配babel-polyfill编译es6新api.md","hash":"30495fdcd868c4d43537668449c16ce6ee3e27ec","modified":1566233933223},{"_id":"source/_posts/webpack搭配babel-runtime-transform编译es6新api.md","hash":"15e6913d9a42524cf2d08ebe765663841b6c6e21","modified":1566233933223},{"_id":"source/_posts/webpack编译es6配置.md","hash":"d6e58a065fb78ba71cb81a684bdd2462e0f53e3c","modified":1566233933223},{"_id":"source/_posts/webpack编译typescript.md","hash":"dacede95d15fbc07aec1ea2394b56b97ea654b3e","modified":1566233933223},{"_id":"source/_posts/webpack编译typescript之声明文件.md","hash":"d15f8f51b4d804c34761f6990f357cbc9427d178","modified":1566233933223},{"_id":"source/_posts/多Git账户生成多个id_rsa私钥保存路径冲突问题解决办法.md","hash":"bb83efc74123ef5c8fc5b5227e7f030eb2b5255a","modified":1566233933223},{"_id":"source/_posts/多行文本的垂直居中.md","hash":"4fb89099840feb5fe1d88903e8c619944cbb2368","modified":1566233933223},{"_id":"source/_posts/数据绑定.md","hash":"f07ce977175fd87e1945f5e74941c08d6e9cb67c","modified":1566233933223},{"_id":"source/_posts/移动端1物理像素.md","hash":"c13f680304cb80cec2c940109dbdfa47f4a922d0","modified":1566233933223},{"_id":"source/_posts/行内元素的对齐.md","hash":"95381d9aea7876742a40e2e8c083da1ff9c81bd0","modified":1566233933223},{"_id":"source/_posts/谷歌浏览器开发调试工具之 Coverage.md","hash":"f7d4d59a3ebcca885e335ac68164ad80052c1d31","modified":1566233933223},{"_id":"source/about/index.md","hash":"4791bd96c8c9f77e4b803f068d2560014383408f","modified":1566233933223},{"_id":"source/categories/index.md","hash":"2d6eb90eefc18887a645dd94129f3fe3a281e884","modified":1566233933223},{"_id":"source/images/7155532-15ee04aa5b6e6ad4.webp","hash":"cba39834a3554cff11d5a3d42fa30f444ee58a18","modified":1566233933223},{"_id":"source/images/7155532-22227abebcbe552a.webp","hash":"ecfb1b5344dcac6e845ee624b2a564f4799d1170","modified":1566233933223},{"_id":"source/images/7155532-c0fbf87fba32551c.webp","hash":"e11fbfab08977bc80f09104ad5d51ffc0bca22db","modified":1566233933223},{"_id":"source/tags/index.md","hash":"f4a2274e05864c3fc84c7cae4f2a73c81cf27813","modified":1566233933223},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1566233933231},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"d91296a4c9facf6e2dc15815820b6444262f575c","modified":1566233933231},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1566233933231},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"3239625bb2573e61f7bcce27a74882a9ff7021e9","modified":1566233933231},{"_id":"themes/next/.github/auto_assign.yml","hash":"cb68a1dca1c4623448c2ca899614a9f21df1b036","modified":1566233933231},{"_id":"themes/next/.github/config.yml","hash":"8a5cbf5aa9529390fe0a782758aca9c3a02f9dcf","modified":1566233933231},{"_id":"themes/next/.github/eslint-disable-bot.yml","hash":"16541fb7b80f5ab90135db96285badb63c4d7d3e","modified":1566233933231},{"_id":"themes/next/.github/lock.yml","hash":"585d2c471047be320aa62f2b74dad797bf09c530","modified":1566233933231},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1566233933231},{"_id":"themes/next/.github/release-drafter.yml","hash":"fbd6210c4454c2db6cad1960dd03c89488d68c87","modified":1566233933231},{"_id":"themes/next/.github/stale.yml","hash":"41bf97ee86b8940a0b2e754499ec77fd2b44b717","modified":1566233933231},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1566233933231},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1566233933231},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"4094dab82cbdfdd0de117e94b508bbd5ceb3d363","modified":1566233933235},{"_id":"themes/next/docs/AUTHORS.md","hash":"9b6dea4c6ad89b1cf588251e0886c028d8f427e2","modified":1566233933235},{"_id":"themes/next/docs/DATA-FILES.md","hash":"290237970f023ad1345dcb8825fe3004de69900c","modified":1566233933235},{"_id":"themes/next/docs/INSTALLATION.md","hash":"5385246ab4756e3e26ec9fe1f6a6759812177cc4","modified":1566233933235},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"1fb2c852fad03b73882069f1ec0659db2e1f2da0","modified":1566233933235},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1566233933235},{"_id":"themes/next/docs/MATH.md","hash":"026d2cff73c22a30ea39c50783557ff4913aceac","modified":1566233933235},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"a07ca23c38f6e4dddd4b74016b30e88cd3796f75","modified":1566233933235},{"_id":"themes/next/languages/de.yml","hash":"88dcfa3e53cef1b7f858f98ca9f980179169ae4c","modified":1566233933235},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1566233933235},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1566233933235},{"_id":"themes/next/languages/es.yml","hash":"a5203c7bbae70bc40f2ee526f9e8105ca9be851e","modified":1566233933235},{"_id":"themes/next/languages/fa.yml","hash":"cc1f3a13e020e2cc666ddc57aaebc4c1ebd669d0","modified":1566233933235},{"_id":"themes/next/languages/fr.yml","hash":"c1e2e892c678920854e1f3df409118398523849e","modified":1566233933235},{"_id":"themes/next/languages/hu.yml","hash":"3b4c10c86a228da70dc4b1a1784a6f942e186032","modified":1566233933235},{"_id":"themes/next/languages/id.yml","hash":"3a9f4485e6801e0e6fae749133a52e3797760795","modified":1566233933235},{"_id":"themes/next/languages/it.yml","hash":"28ff9197a3d21e838e33bb026d8adb544320cb1a","modified":1566233933235},{"_id":"themes/next/languages/ja.yml","hash":"8f85a6500716191159f16c7f484ba61ddd16eeb6","modified":1566233933235},{"_id":"themes/next/languages/ko.yml","hash":"1df31bf037bcb6868a4bd60c49ff55eec5b8167f","modified":1566233933235},{"_id":"themes/next/languages/nl.yml","hash":"6f4a339ecc67a140f3f9c7bec369cbda6b45afd7","modified":1566233933235},{"_id":"themes/next/languages/pt-BR.yml","hash":"301a0535df5de7b585c7c9752053c41c6ef26f9b","modified":1566233933235},{"_id":"themes/next/languages/pt.yml","hash":"6d87701443e33a13574049e613f064f1eb250c95","modified":1566233933235},{"_id":"themes/next/languages/ru.yml","hash":"93872ac01074159566ee3e1738eea6e9216bab8e","modified":1566233933235},{"_id":"themes/next/languages/tr.yml","hash":"5489606e6c40c0b226a3414c8e5037aac965211d","modified":1566233933235},{"_id":"themes/next/languages/uk.yml","hash":"765ba405778f07d7ec3713606568852b04e1a862","modified":1566233933235},{"_id":"themes/next/languages/vi.yml","hash":"6a812db8606498980cd64f001e9ef2f50e124809","modified":1566233933235},{"_id":"themes/next/languages/zh-CN.yml","hash":"f311ad2cc2edba144764c36c0035b6ed0d356a53","modified":1566233933235},{"_id":"themes/next/languages/zh-HK.yml","hash":"7a5e47f561d4b6e132f7f3b09676afbf8520264e","modified":1566233933235},{"_id":"themes/next/languages/zh-TW.yml","hash":"3f3674cac8f47a9a509a7557ea1557bbfbd027e8","modified":1566233933235},{"_id":"themes/next/layout/_layout.swig","hash":"cb2e72663fb9666f5ac3c6bb3200d2e4e9731988","modified":1566233933235},{"_id":"themes/next/layout/archive.swig","hash":"014ea0b7bfbfd9bd35b0d45ee3cc04aec41bb445","modified":1566233933239},{"_id":"themes/next/layout/category.swig","hash":"fec1c414902fb40887054f0cd93f924bb3969e63","modified":1566233933239},{"_id":"themes/next/layout/index.swig","hash":"8cf3451dd2d5727920b351a8f5eefdddb5bf3638","modified":1566233933239},{"_id":"themes/next/layout/page.swig","hash":"1b63e55834ac09fc49e92072d308e4b5028e07fd","modified":1566233933239},{"_id":"themes/next/layout/post.swig","hash":"4291b34b17fc6f1c06eb69852c894913e889a774","modified":1566233933239},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1566233933239},{"_id":"themes/next/layout/tag.swig","hash":"2e72753be05d6b19795885f31831528366015399","modified":1566233933239},{"_id":"source/images/1.png","hash":"2e0a1f9711b0712b703920c195499ba10bd08b48","modified":1566233933223},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c37a60580c901c79ccb22564b228a46e06207445","modified":1566233933231},{"_id":"themes/next/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"57e1e06e845193e80c7df4a4454af28352526f7a","modified":1566233933231},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"07c423cce4157b8e2dbf60907ccbf3f18c4cf98a","modified":1566233933231},{"_id":"themes/next/.github/ISSUE_TEMPLATE/non-english.md","hash":"0b0727ff4d5180ae67f930fb4f8e9488e33eda9f","modified":1566233933231},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"67d04e3e29a2675d1a9f87d1ae6ea0769e963ff1","modified":1566233933235},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1566233933235},{"_id":"themes/next/docs/ru/README.md","hash":"932d3965d8b1a1ff653c07a0cafcdbf5892d6945","modified":1566233933235},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1566233933235},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"caa624092175d44e3d3a8c6ca23922718da2354c","modified":1566233933235},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"0dfb458370a0ffbbe37c00f53c15e3aa3e79b125","modified":1566233933235},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"2949ccf2cba5238f01a1386a9e91e646c7a22260","modified":1566233933235},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"c46f3f7496fc422207cc5954e10a2bc972b650aa","modified":1566233933235},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"c13546dd70a99a7d2d409cddf5d59f2f4d4d44a4","modified":1566233933235},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"e568a1b3c532e0ecf33cc237e1425b2579bd006d","modified":1566233933235},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"83feca62190abcca0332915ffe0eefe582573085","modified":1566233933235},{"_id":"themes/next/docs/zh-CN/README.md","hash":"79a73361b24e7fb7022992702961faacd6a2f9fe","modified":1566233933235},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"ba918bbd8faf32c28335693f03ff37c6acaff7f3","modified":1566233933235},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"78f4f989346763b799397f4a3ff398b69ffc48fc","modified":1566233933235},{"_id":"themes/next/layout/_macro/post.swig","hash":"78f1fb065bcccec7ea42616013a6ae33c2971eb2","modified":1566233933235},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"20f881a8ee2a73ebbc8ef7ef25a188e3ce2cc6ec","modified":1566233933235},{"_id":"themes/next/layout/_partials/comments.swig","hash":"f83bf66ca79aa6a9d450de8ab5c3f19ff1f94e54","modified":1566233933235},{"_id":"themes/next/layout/_partials/footer.swig","hash":"748fcb5687c2340285e5a8a82bf3f361d55ee925","modified":1566233933235},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"40e940c3213b74933e529cd64f64c1f6f512b5ca","modified":1566233933235},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"769a983fe2f77908bfc8590ff37a0d8958b47598","modified":1566233933235},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"4b0c972c44bfa7ab07604280563deb9cc3974657","modified":1566233933235},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"e3c54ae7eca24a85148ec3bfb6712abf07c418c9","modified":1566233933239},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"571115ef5f06e5d937c2d3c7cb26727f43c7feed","modified":1566233933239},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"283e78eb795f52236026434dab6a0667f14d3c08","modified":1566233933239},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1566233933239},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"20aa27fff30f703baea578e08b18d16d59ebf27e","modified":1566233933239},{"_id":"themes/next/layout/_scripts/three.swig","hash":"216849ad2503f578839c500ede529744a3abaf03","modified":1566233933239},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"b7a906521afd8cca1d425066192ef68e544be728","modified":1566233933239},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"5284f8db105f22732a6e3637a6a779d43d069935","modified":1566233933239},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"df96a541f092eb195b103cb28fbe8881b9c2f73c","modified":1566233933239},{"_id":"themes/next/layout/_third-party/facebook-sdk.swig","hash":"e7103dc133c8a6109e2a2e086c8e65ac80dbf6bb","modified":1566233933239},{"_id":"themes/next/layout/_third-party/index.swig","hash":"ede1e5947d2bace914bf42cf8623ab7cf5168eb0","modified":1566233933239},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"ccef9c8ef5406a33af56fe5493492ee8ac2bb965","modified":1566233933239},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"731018cc1ed976904770d515c48ae90e07a4219f","modified":1566233933239},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"3fc2b29c4df9213b686b5bd2584cf5d2de22b7f8","modified":1566233933239},{"_id":"themes/next/layout/_third-party/vkontakte-api.swig","hash":"adb0d6e0e4c0480b2c1249d0f5963d0de64c6721","modified":1566233933239},{"_id":"themes/next/scripts/events/core.js","hash":"a25690d8b03779f7e318108c8eace9baf6d4283a","modified":1566233933239},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"834599d2b83f06e90f8cf618cddc106fe900ba5c","modified":1566233933239},{"_id":"themes/next/scripts/filters/exturl.js","hash":"9c32675f64121ffbe454189b8e418b408f79d9c2","modified":1566233933239},{"_id":"themes/next/scripts/filters/lazyload.js","hash":"51672320fff6b39f56fe6a2881c611afe4e79b8e","modified":1566233933239},{"_id":"themes/next/scripts/filters/minify.js","hash":"727f49b825ddd4c8727f5fc6de146beecc083b87","modified":1566233933239},{"_id":"themes/next/scripts/helpers/engine.js","hash":"66fa36afd168fa43be848012e2e2aad03aa45306","modified":1566233933239},{"_id":"themes/next/scripts/helpers/font.js","hash":"53169e2d04f0c21e68beb07c212be0a6c2a9aaea","modified":1566233933239},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1566233933239},{"_id":"themes/next/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1566233933239},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"20e392b8583ba6ae5037449c2c7e191d3927641b","modified":1566233933239},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1566233933239},{"_id":"themes/next/scripts/tags/full-image.js","hash":"9003387663059d982acbe6d565c46b19e15a9586","modified":1566233933239},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"8fc05f22b88553bc1d96e0c925799cd97920fc6a","modified":1566233933239},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"60f880c1e11a7df1aee4f2e01d65451fecc0372c","modified":1566233933239},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1566233933239},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1566233933239},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1566233933239},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1566233933239},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1566233933239},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1566233933239},{"_id":"themes/next/source/css/main.styl","hash":"68c3377b643162aeaae2b60c196486fdb3b509c3","modified":1566233933243},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1566233933243},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1566233933247},{"_id":"themes/next/source/images/avatar.gif","hash":"ea3b46f2fa7daf0c5cebd98132d4327d047f87a0","modified":1566233933247},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1566233933247},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1566233933247},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1566233933247},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1566233933247},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1566233933247},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1566233933247},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1566233933247},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1566233933247},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1566233933247},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1566233933247},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1566233933247},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1566233933247},{"_id":"themes/next/source/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1566233933247},{"_id":"themes/next/source/js/algolia-search.js","hash":"c980038cbf83b89bad9051a29737bebc5dc27129","modified":1566233933247},{"_id":"themes/next/source/js/exturl.js","hash":"7934e9b62fac92731bc450c8a9847e17b77324ab","modified":1566233933247},{"_id":"themes/next/source/js/js.cookie.js","hash":"7919f3a96e156ca52e59b61266468f9f2a2eb97e","modified":1566233933247},{"_id":"themes/next/source/js/local-search.js","hash":"dc5c2f370c1dd4900e6fb45d1fa266cd1cf21976","modified":1566233933247},{"_id":"themes/next/source/js/motion.js","hash":"ca2965da47ba9fc5b0dde0a825c29e0817b965b9","modified":1566233933247},{"_id":"themes/next/source/js/next-boot.js","hash":"0f5eeabac85b693be73b6af74fd7493b6e493b91","modified":1566233933247},{"_id":"themes/next/source/js/post-details.js","hash":"a614a3830f7dfcd4df303c1255d558a135b3854e","modified":1566233933247},{"_id":"themes/next/source/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1566233933247},{"_id":"themes/next/source/js/scrollspy.js","hash":"e630d9b05ab6bcc9ebab92435587d5a554eb0e3b","modified":1566233933247},{"_id":"themes/next/source/js/utils.js","hash":"d0d40de8026b5b11c097e1939050bfbcae286418","modified":1566233933247},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1566233933243},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1566233933243},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1566233933243},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"9e959646899a1dd381c0bea870408cd392c93c70","modified":1566233933235},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"e6471f546ffa30c25a6186678ba04f4393764343","modified":1566233933235},{"_id":"themes/next/layout/_partials/analytics/busuanzi-counter.swig","hash":"6bb2a2262a6c703345343c7b200c52a8ef798c30","modified":1566233933235},{"_id":"themes/next/layout/_partials/analytics/cnzz-analytics.swig","hash":"847664d2dea3d51ac87b3e3d504b4e4d94cbd177","modified":1566233933235},{"_id":"themes/next/layout/_partials/analytics/index.swig","hash":"2925f6353934b1b2adc2808059e64dd7d220edd7","modified":1566233933235},{"_id":"themes/next/layout/_partials/analytics/tencent-analytics.swig","hash":"050ff8113af88e498f49a623799b526736852d6e","modified":1566233933235},{"_id":"themes/next/layout/_partials/analytics/tencent-mta.swig","hash":"e94186ff2085fc96c34f51a920c5bbc3e0dec659","modified":1566233933235},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"f7cf6bebca5f9513af9429c14bd3180fd398a1a9","modified":1566233933235},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"2fdad48d5b37c4473f94ea83efb6bbe2ba601618","modified":1566233933235},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"8dd7ac5ccc52848b3d0fb0f102874c1a8c1c45b6","modified":1566233933235},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"c5b7c0b919ab5be3093ae9d5921e2eb2c2bd320f","modified":1566233933235},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"e8d143e21a3de1eb7ee7735d79da1b1f119dd0d5","modified":1566233933235},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"a72e33e11df9d3639cdebab4f480e397c70deacb","modified":1566233933235},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"883ea1d024a8262eb8d3213de71c8ccb30daf095","modified":1566233933235},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"d3c25d70f0fd76121e4cacb9f8af4ccbe2a3c74d","modified":1566233933235},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"5730f4b891f1363cf281a07aedfad06268166a73","modified":1566233933235},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"e2549106ea26ac48019aa3f8023b8fdc78c0f6db","modified":1566233933235},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"40483139657cde24356c6a4033a6386b909327a9","modified":1566233933235},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"2edfaf1579ea58e15cb5583fb7962dfee9af2257","modified":1566233933235},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"d9fe715fee716f78c7976c4e8838da71439ee0e0","modified":1566233933235},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"7bce91d429216724db5e337ec64cf7f05b022c97","modified":1566233933235},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1566233933235},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1566233933239},{"_id":"themes/next/layout/_partials/share/index.swig","hash":"0817ccb248ed9aae64f30db792681af688e01795","modified":1566233933239},{"_id":"themes/next/layout/_partials/share/likely.swig","hash":"e106248f72abc5e9ade3554eaff2f7f69bdb8f6d","modified":1566233933239},{"_id":"themes/next/layout/_partials/share/needsharebutton.swig","hash":"09ae1250c1e142d251cc0e979097f1dd95e277bb","modified":1566233933239},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"84a4201867c034afbf25862b63af4a582f7086b1","modified":1566233933239},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"5b05f165547391bf231e52f56f3d925efc09bc44","modified":1566233933239},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1566233933239},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1566233933239},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"f2ff7799baac49eb9779f66e0cd083fac70b87a2","modified":1566233933239},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"509621f1a68e7ab41193a14a2c50a21aff976f9e","modified":1566233933239},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-jquery.swig","hash":"b485797073495e24bf2f0b85880d513257bfed72","modified":1566233933239},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"5dda65656900e8006173fda95faa134fd331ec95","modified":1566233933239},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"ac4f229b1d7a56c31c1fbb4fbf9e59dde5e9d4f5","modified":1566233933239},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"21d413d2b11e8f7dd86e68ad3d53672899a69527","modified":1566233933239},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"1618f1a5b02934d7f376633e39d9a58f43928168","modified":1566233933239},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"dd896587305d0f9c4eba5fdc31e72f56e1e4359e","modified":1566233933239},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"20fcbed44aede1b908bd17d7a0279b03639068b1","modified":1566233933239},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"6c9eb8b9c670f9693a8155d960f851603b30190c","modified":1566233933239},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"fdcf006e1ba2e53eab65e901b6c63159538307ef","modified":1566233933239},{"_id":"themes/next/layout/_third-party/chat/index.swig","hash":"5ab4a8b4306c837d2f8c211a9d7fdaed76fa254d","modified":1566233933239},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1566233933239},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"21cbb62243061da62e037b6307e1915f78aeda37","modified":1566233933239},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"2926cf518758895973cd60fd3b878651d04950dc","modified":1566233933239},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"d82cc93d3270dff02fb111d7a3607b26e877f740","modified":1566233933239},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d1e1e2c5d1418d0874911912078392d7c10390cc","modified":1566233933239},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"a6f6c778d1aff774e8de8b1884ae88e711ea6676","modified":1566233933239},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"3c2d2cf3388dc8bd1450303645b8cd907baee98d","modified":1566233933239},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"4514e5e83cdfe28275dfa2aaf14b51d993065f9c","modified":1566233933239},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"079910669dcc9b0606dde15c66bfdcf1c97b8119","modified":1566233933239},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b173d1e72ee6a8885da1f97239a10a048bc94d6","modified":1566233933239},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"157abdff4c5fddceae5af2631b5fff202abc0e5e","modified":1566233933239},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"b2fd17688f0433571b37704bc8df798e175e7811","modified":1566233933239},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"353da7ea00400897ae920a085aa4bee2224da50d","modified":1566233933239},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1566233933239},{"_id":"themes/next/layout/_third-party/tags/index.swig","hash":"83d0a8f71878c6b96a04ba08567b9064de6cce83","modified":1566233933239},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"5d013ed1f311540155c5e8f92465a8ef409ad561","modified":1566233933239},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"2a847dd60a509d9e20c22c2a8cbb51a74a023bb4","modified":1566233933239},{"_id":"themes/next/scripts/events/lib/config.js","hash":"2a16ee73eb04a6dd7f4527172756d8fa76c6d461","modified":1566233933239},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1566233933239},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"251dcc22ed213da9b6135e1b958010e3352408d4","modified":1566233933239},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"991cac9ba7b958c8fe30b9a15ef65d1b57b8b1c4","modified":1566233933239},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"f9f1091e99bdd5524f502796f200201c58fef9e3","modified":1566233933239},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"eb58951de242c3f4b66346c88a8b19aaf80681e5","modified":1566233933239},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"a9ebe8e80edb5e19ec4b845090d260ae9de1566a","modified":1566233933239},{"_id":"themes/next/scripts/filters/comment/facebook-comments-plugin.js","hash":"4ca1ed5ee5321cb37b35f3ffeea61439e1be33b1","modified":1566233933239},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"4505867a0598b83583f9740ecba3e4f053d18ebe","modified":1566233933239},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"71ee48847a1e54962640a4b64298ecc3e76565f8","modified":1566233933239},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"de228547847c876b8537b03619465731544252db","modified":1566233933239},{"_id":"themes/next/scripts/filters/comment/vkontakte.js","hash":"12cc4297e419d80653059129490fbf40df8ead9d","modified":1566233933239},{"_id":"themes/next/scripts/filters/comment/warn.js","hash":"a79072dfc3c0614c417ddd52127c7abd7a66455f","modified":1566233933239},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1566233933243},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2bb4c78b5da482751085beb73ab01ecd2dcbccda","modified":1566233933243},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"2198dc4554720ae09ca4929fb8dcb01be4f31bb0","modified":1566233933243},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"451f1f904df8b39015ccff5ce804c047f132b1f4","modified":1566233933243},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"4c101c21b4f2712e47dba869ccc116b245fb0909","modified":1566233933243},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"db52bce619bb848189e83b7bfabd1b2a06fd5578","modified":1566233933243},{"_id":"themes/next/source/css/_variables/base.styl","hash":"ea5adf4e5a9ba6dd07a74613f4b62f726fc639b7","modified":1566233933243},{"_id":"themes/next/source/js/schemes/muse.js","hash":"718dae82e96269848d06d3a1de64d2ef3301139f","modified":1566233933247},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"aa699718261b87e380b1425b069df4b657d94739","modified":1566233933247},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1566233933247},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1566233933247},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1566233933247},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1566233933247},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1566233933247},{"_id":"themes/next/source/lib/reading_progress/.editorconfig","hash":"7d47ecd70ca58d26af4f69ff1b23034edcf4475e","modified":1566233933251},{"_id":"themes/next/source/lib/reading_progress/.gitignore","hash":"67c4efc6e80e1a7318129226959f02701baf5f3a","modified":1566233933251},{"_id":"themes/next/source/lib/reading_progress/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1566233933251},{"_id":"themes/next/source/lib/reading_progress/README.md","hash":"9b00c4ce1a739c825df4e51977f7525d2c9f6b81","modified":1566233933251},{"_id":"themes/next/source/lib/reading_progress/package.json","hash":"b48a3293b45d8cab41e0ab61a64104a854f6dc94","modified":1566233933251},{"_id":"themes/next/source/lib/reading_progress/reading_progress.js","hash":"ec68a79421cfba022ac53f46813d013dd48617c0","modified":1566233933251},{"_id":"themes/next/source/lib/reading_progress/reading_progress.min.js","hash":"b768dc009e6d37dd952632c317f6c33e6e2d89ad","modified":1566233933251},{"_id":"themes/next/source/lib/reading_progress/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1566233933251},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1566233933251},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1566233933251},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1566233933251},{"_id":"themes/next/source/images/alipay.jpeg","hash":"fe895748b4c4e8594f6434351a1c5d0af2979649","modified":1566233933247},{"_id":"themes/next/source/lib/jquery/index.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1566233933251},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"1c178041435de8076a1ce31304184007a837fcbb","modified":1566233933239},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"58a80925a845d590d4a9736ae92a6b03dc7c575f","modified":1566233933239},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"2b14d2a3f814c9dbd92c00835878925f9f10ca28","modified":1566233933239},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ed26575eb5fa3e1a33ce246c4e117f817caae79c","modified":1566233933239},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"1960299fe99163f44f1cd90210eea1ef4b2cb723","modified":1566233933239},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"390993b47942a47d23ed8904c92e0186b6e9af29","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"4bec027d48ebb95acd5f5786456ee1eb19a23ee4","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"202ee1f1f8e64d8292df16f40ee176ff4e5d7e71","modified":1566233933243},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"bdf464ee7972a007949acbe555d82e57621b3714","modified":1566233933243},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"442f7598991b92ec8bc3ce5343e18730da92e4fb","modified":1566233933243},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1238932450efc3f4c2e25c704794437ac78e6164","modified":1566233933243},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"4c4986b704c3cc3167c3c2a69c454446cf152528","modified":1566233933243},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"4f7140cc0db08b47a25c4c7aad71047d433051a1","modified":1566233933243},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"e9e3bcef3f9a3541a11e5f3edfed2a3d13d22b80","modified":1566233933243},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"173fe462331ba12d612f7ade8f18c0f9e259fa5d","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"9b3a1e0342f261f642d510e0f0cbe06fe2370e79","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"71d75fa309cf5b96d876da536f57c047e57afcff","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"87d19a45db10689aae9a09736efd1eb896a35b3d","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"3462ffd270f3e218e0a8362262466e79d731f975","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f87b7a7d30e9111f7af269dcf7bd8c1893343fe8","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"d46c61153bdba976ea785431d5d4b2c2a47c39b2","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"49c6c656ed6e7348f967c01f8302fe1f6a5e3cd9","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"54c5e23ec3dcbbc77848ededba76e861cf0f4719","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"bdc0ada1eec3c1d625bfe2c148cdfc1b3460fa32","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"0138165021be463f19e092f8972ac41aea3fb68a","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"45f03b3bb80e32fd5648ce723055d7552b87d97c","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"2fa573d7c04b8fa4717fc50265d7e4273f4325ea","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"cbeb23488b707418a60b59ef8d6abc4f0d671959","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"2e0681fa265a55f0259969109a3b9e3788bf516c","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ce3820f199b54d09f7216a5df14d4492736c4520","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"4b976940b728a78428e88f40acf9a801223af88a","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"10b4794ba62726fc052c74d786d962ed79d0780b","modified":1566233933243},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1566233933247},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1566233933247},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1566233933247},{"_id":"themes/next/source/lib/reading_progress/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1566233933251},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1566233933251},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1566233933251},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"0442cccb1111eec0d38357fba810319d781b7ef9","modified":1566233933239},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"172a83db23cb3f8a95e7cd6046befbc841caa869","modified":1566233933239},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"4c7140804d1ca65396959a3e8f8b79b9c4d3233f","modified":1566233933239},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1566233933239},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"cf37dc0ef20a8423a28b056458e1fa609875789a","modified":1566233933239},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"dada73ae88f01fab2ab4d2c83eddfc558de2110a","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"080f22922d89ca714a2463d6eaedfd4cb68e8aef","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/highlight/copy-code.styl","hash":"d42c19193bd6d398cd1196a2848659c2b63b17d7","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"d3592aeb40f0db28003aa9db51b0e9d8c6f5de22","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"e0a3ac2cfecc60736d4a97af743deeb67b10ef00","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"a67dc85f6d158dac20e951ab55988ff7e9e1739b","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"64f224aa8a57cb9c0788ef8ac99058b05ce84868","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"1f217159862b12a89350e11b5097a8f3031af28f","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"621dc55fe935afe68a19f67b7447524292bc7e56","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"0291a43444531f112d156b9ed4d039c3c7d40a77","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"7cee1dc30f323e9f46e1fd4cf61c1a3d4cebb8b0","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"f96b241dea210e494b9173be76cce65faee7157a","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"bb892e5934a3b525afd1e578db991b747ea4c1eb","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"8b0dde1df553a5a2f5e0765e4e4ce48e9ab2c90e","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"42ed5e8c6c50f68278de24fe3caeea38919deb55","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2e2a09dddd2a394a635bcefb6207b6cddcb784c7","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"c898a67edb271c26f81e98acab93299a99fe3b95","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"fdebe803d61e781883453d6301b7e2bcf5a8ec05","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"70d13702896e03013f694f89d5a68adbf0fff4af","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"81516d03154bf423667384e74b9ac2940e52ff64","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"6d379b38cab56666e24463a7a4d52006e232a8b1","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"dcf801bd2478e125dffc0e23c0e720d048cf580f","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"863906b9bbb54365feb798db4d44be4ee926b6a2","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2ef546b4cfa5038ebb050c592c5135bbeb51af41","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"9b3ff4aa24069eab0e9771437013f45e450d4217","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"cd7ab38366a73edf3e7576d2629339660080b6f6","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"1d9f17a59b030dd05732ccdc5b187705f0353130","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"8fc3facb9e9d4dae2578d0a271648d997a7f9bf3","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"c09f780d6900354a647f26fa9da78b46c108ddee","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"b2eca1259b9df8df81c5768bbb9b7ef65826e360","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"bfa93a958115ddd562cd10f74b2eb887b6d3f187","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"92381084e1aaf6798f058668aacef15bf1721739","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"02e5a998748a67fa885fb06fae242bcf3f2786fb","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"0527bc64708a9446dc7bbb2c7e39ab3a61251c26","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"067f4e24628b69c9ba63d9ac5b60652b0021f90a","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"5d63f7479ee0f645e7538c60e827036fad74766d","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"78d309e22206a4addda3c393282518dae02250ed","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"278c31ed96474cd8a2ba465ed4131327e9d598bd","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"108ca96248f07205b5d98d9b82fe29e1ac94eff5","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"605dd6cc489fae4c45ba9b6782355691ec0d3245","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"90edaf377646093a07ea4e26accb861be9ebbb2b","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"438f3f7209fa6b8ab092a6f200a8c8c009565291","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"c2fc1a5105d6691d680f7b77b9301db416ebac8b","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"85b8606763f4177d2f9a11c1909a21ab1ae2011c","modified":1566233933243},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"d048206fad5ace7f8df16cbc0b074b46ade16f81","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"dd55feb43312489b5ec5692cc9d83ad150d7b389","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/_sidebar.styl","hash":"1c3371551dadb86a4bf662c1adaa0dc2d2654ff7","modified":1566233933243},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"a29de6af7503a854e962eca8a3b8b911525ef2e5","modified":1566233933243},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1566233933251},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1566233933251},{"_id":"public/archives/2016/index.html","hash":"4811e0b6c977fece173edb4bd33b351108ab4383","modified":1566459093412},{"_id":"public/archives/index.html","hash":"0917f6de1805206f884a5f58966a6b810b4f2633","modified":1566459093412},{"_id":"public/about/index.html","hash":"78ab5ecc2d6dd5165ca29331dad30344334dbb0d","modified":1566459095194},{"_id":"public/categories/index.html","hash":"7ef6b5b1bd3aaa0c8cc707b8c092f14a205a22e3","modified":1566459095195},{"_id":"public/tags/index.html","hash":"5b4a8cf4f82ceb1380b892c4eb88329d7e3bcfe0","modified":1566459095199},{"_id":"public/archives/page/2/index.html","hash":"d4483b5badbea983bfc1bfe27cd05335f26fb474","modified":1566459095199},{"_id":"public/archives/2016/10/index.html","hash":"0f4a3d3a21dced1a777cc92b49cc5ff0bd61a2cb","modified":1566459095199},{"_id":"public/archives/2016/11/index.html","hash":"19cb17b623bf8bb12d3855178b0c6b7fcf4dbf9d","modified":1566459095199},{"_id":"public/archives/2016/05/index.html","hash":"4b1f252956745a0136c40e00d04d795d3f848fa1","modified":1566459095199},{"_id":"public/archives/2017/index.html","hash":"29fd6417353b00edb1465e6f23dcf5166ea0fd15","modified":1566459095199},{"_id":"public/archives/2017/07/index.html","hash":"04de5ee0d89d8c06a22e6620f1c4c52ac7ec0f43","modified":1566459095199},{"_id":"public/tags/js/index.html","hash":"9af2db7862002082b2b29b6258d1f28cbc86dedd","modified":1566459095200},{"_id":"public/categories/javascript/index.html","hash":"f2c2999797f5369870c504639ac0851f33823ecb","modified":1566459095200},{"_id":"public/2019/08/19/code spliting的两种方式/index.html","hash":"aa23120dcaf7b301c66fe15105d4c271218ebd59","modified":1566459095200},{"_id":"public/2019/02/21/webpack编译typescript之声明文件/index.html","hash":"9546790df063bcb6a6cb2a928a8fb29315f25df9","modified":1566459095200},{"_id":"public/2019/02/21/webpack编译typescript/index.html","hash":"3891a91dcc31fcf259389fab8c49a15cd42eecb7","modified":1566459095201},{"_id":"public/2018/08/11/webpack搭配babel-runtime-transform编译es6新api/index.html","hash":"1998b6d9bf00d137be93a4fa8254d19a88443b9c","modified":1566459095201},{"_id":"public/2018/08/11/webpack 、manifest 、runtime 、缓存与CommonsChunkPlugin/index.html","hash":"63f748e12f0a6f5f164ebbf5165ce8fa21ec53a7","modified":1566459095201},{"_id":"public/2018/08/11/webpack搭配babel-polyfill编译es6新api/index.html","hash":"7a135ac9a8d6227f67014db0e7f9613ddc081dee","modified":1566459095202},{"_id":"public/2018/08/10/webpack编译es6配置/index.html","hash":"18807d81672dd7b7595f8810245a5bc141e20c66","modified":1566459095202},{"_id":"public/2018/06/10/谷歌浏览器开发调试工具之 Coverage/index.html","hash":"ee1609682f975d29757ef3577efc95dad163c455","modified":1566459095202},{"_id":"public/2018/05/10/移动端1物理像素/index.html","hash":"8c142e9057c6e54a11a02bed18c89682ffaa24f3","modified":1566459095202},{"_id":"public/2018/01/10/行内元素的对齐/index.html","hash":"f00884817e3f7aa53fbfaeec48941d75b25c3804","modified":1566459095202},{"_id":"public/2016/11/12/多行文本的垂直居中/index.html","hash":"cd36c812f44cdfb8fc5e54abb6d2b8251be2004c","modified":1566459095202},{"_id":"public/2016/10/11/css sticky footer/index.html","hash":"315905d833e42167c43561b37fa788fb9bb5e9cb","modified":1566459095202},{"_id":"public/2017/12/01/多Git账户生成多个id_rsa私钥保存路径冲突问题解决办法/index.html","hash":"822d19499582d625e900550fdd2f56cf64fce6ee","modified":1566459095202},{"_id":"public/2016/11/12/flex实现左边固定右边自适应布局/index.html","hash":"3c3eb8ce98e2e8065650e8735109537748ec3480","modified":1566459095202},{"_id":"public/2016/05/01/js深拷贝和浅拷贝/index.html","hash":"c09a1004b49e7a0e58cb09aceefb998a17f0d513","modified":1566459095202},{"_id":"public/2017/07/31/数据绑定/index.html","hash":"f1edfb7173fac898f9b8763b7622e14904e0bd1a","modified":1566459095203},{"_id":"public/index.html","hash":"05356a0d4a13a6002b0ed61dcd33c7db91f11dd0","modified":1566459095203},{"_id":"public/archives/2017/12/index.html","hash":"8a299fa50fa49a600680bb1e514adb6165e7b3a3","modified":1566459095209},{"_id":"public/archives/2018/01/index.html","hash":"e58bf26d498a5e39e49a0ac521ed99002ea25307","modified":1566459095209},{"_id":"public/archives/2018/05/index.html","hash":"ba4c8679418d0499f45d3646f9f9d9f958589ca5","modified":1566459095209},{"_id":"public/archives/2018/06/index.html","hash":"41cd94fcf5ce0e96c688a1c64a39d5cbcb1b49a8","modified":1566459095209},{"_id":"public/archives/2018/08/index.html","hash":"922b88e8c278bf17a4cb23cd856d8611332a6124","modified":1566459095209},{"_id":"public/archives/2019/index.html","hash":"6ae4463364717775be6ca04d6e799b834e7b7233","modified":1566459095209},{"_id":"public/archives/2019/02/index.html","hash":"96c208b5fffbdd1be8c1c433b1d430ed442477cb","modified":1566459095209},{"_id":"public/archives/2019/08/index.html","hash":"44e4f1e02ab2fa458208232d5ec5158d1c4c9950","modified":1566459095210},{"_id":"public/categories/webpack/index.html","hash":"2cbd3c0633031cb6b03c8c45252363be12683de5","modified":1566459095210},{"_id":"public/categories/css/index.html","hash":"8c2c039c804e5b458b6f2f8ee3f960d894b4c910","modified":1566459095210},{"_id":"public/categories/typescript/index.html","hash":"5dd4e01b8eca22bf33dc857628e93ac13987f00b","modified":1566459095210},{"_id":"public/categories/版本控制/index.html","hash":"74e37be8b66a260040d0091041ad8e2b9d24d30c","modified":1566459095210},{"_id":"public/categories/性能优化/index.html","hash":"2290908c21e15212582a0461b4da485a92c537d4","modified":1566459095210},{"_id":"public/tags/打包/index.html","hash":"2cc74983aca8a1eee0b426bb94abe9435a228905","modified":1566459095210},{"_id":"public/tags/构建/index.html","hash":"c24ee760e4c61ca5ab973ad2275cd51d2093f83b","modified":1566459095211},{"_id":"public/tags/代码分离/index.html","hash":"b6bdd3229e41928830a2a9578fdc2c64b6927752","modified":1566459095211},{"_id":"public/tags/css/index.html","hash":"a9eafc762c5c4614c9d00127932310413a9f883a","modified":1566459095211},{"_id":"public/tags/布局/index.html","hash":"740cdfee24be6b54f5ea1072aa710d1e4cbd0c16","modified":1566459095211},{"_id":"public/tags/flex/index.html","hash":"11104e2104d7548086e53357108a726ea87df74d","modified":1566459095211},{"_id":"public/tags/babel/index.html","hash":"ed458cdb085cd786ace91b38159386e8672ccf0a","modified":1566459095211},{"_id":"public/tags/ts声明文件/index.html","hash":"3d039d67cc075e5ee9f85e45016afc1e16466ae4","modified":1566459095211},{"_id":"public/tags/git/index.html","hash":"36c6085cd037269fb1f3b7712d32f076c3a72948","modified":1566459095211},{"_id":"public/tags/github/index.html","hash":"18792662686f594ec3fcb1c61e1995bf2d81bde8","modified":1566459095211},{"_id":"public/tags/table/index.html","hash":"bd31bd13f31663de1f04d722e1a6a43be60d2668","modified":1566459095211},{"_id":"public/tags/移动端/index.html","hash":"ae7d60f31b6d3965756b74e9cbf5b71e098bbd56","modified":1566459095211},{"_id":"public/tags/1物理像素/index.html","hash":"e00aa76fa247eb91d012a3d31e48f3a3275f18f9","modified":1566459095212},{"_id":"public/tags/对齐/index.html","hash":"41979517f672c3f1fa828fc798b49b3c625e2dc3","modified":1566459095212},{"_id":"public/tags/inline-block/index.html","hash":"bdb867b3c479959271ace2eba32ce8b5c4c49aa5","modified":1566459095212},{"_id":"public/tags/chrome/index.html","hash":"cc735bd42a6380baa3f6450df2eaac79f621271e","modified":1566459095212},{"_id":"public/tags/调试/index.html","hash":"9d30c1a17843c556b7f5a2f6d3057dd2e410bbaa","modified":1566459095212},{"_id":"public/tags/性能优化/index.html","hash":"124c9a9b060dbe757887cfbc9b5312bcc58e6773","modified":1566459095212},{"_id":"public/tags/vue/index.html","hash":"38e9876b131ea4487cedcae3a954869cb63d8812","modified":1566459095212},{"_id":"public/archives/2018/index.html","hash":"8d7864fc4592ce762f46ce58483031b9aabcd36d","modified":1566459095212},{"_id":"public/page/2/index.html","hash":"beb5f49ee7176a66109036453d12da9777ff4dd5","modified":1566459095212},{"_id":"public/images/7155532-22227abebcbe552a.webp","hash":"ecfb1b5344dcac6e845ee624b2a564f4799d1170","modified":1566459095212},{"_id":"public/images/7155532-15ee04aa5b6e6ad4.webp","hash":"cba39834a3554cff11d5a3d42fa30f444ee58a18","modified":1566459095213},{"_id":"public/images/7155532-c0fbf87fba32551c.webp","hash":"e11fbfab08977bc80f09104ad5d51ffc0bca22db","modified":1566459095216},{"_id":"public/images/alipay.jpeg","hash":"fe895748b4c4e8594f6434351a1c5d0af2979649","modified":1566459095221},{"_id":"public/images/1.png","hash":"2e0a1f9711b0712b703920c195499ba10bd08b48","modified":1566459095225}],"Category":[{"name":"webpack","_id":"cjzji1sc000040umw8ozcl8e4"},{"name":"css","_id":"cjzji1sc9000a0umwxrz1f3kf"},{"name":"javascript","_id":"cjzji1scq000m0umw0its7ddv"},{"name":"typescript","_id":"cjzji1sct000u0umwzqww24ai"},{"name":"版本控制","_id":"cjzji1sd0001a0umwfn7yut1p"},{"name":"性能优化","_id":"cjzji1sd1001f0umwdt7veqku"}],"Data":[],"Page":[{"title":"关于","date":"2019-08-03T02:32:28.000Z","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2019-08-03 02:32:28\ntype: \"about\"\n---\n","updated":"2019-08-19T16:58:53.223Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjzji1sbt00010umwpnvtngz2","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2019-08-03T01:50:39.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-08-03 01:50:39\ntype: \"categories\"\n---\n","updated":"2019-08-19T16:58:53.223Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjzji1sbx00030umwvcujcw60","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2019-08-03T02:11:17.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-08-03 02:11:17\ntype: \"tags\"\n---\n","updated":"2019-08-19T16:58:53.223Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjzji1sc400070umwwg7ezisq","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Code Splitting的两种方法","_content":"\n##### 一.使用 SplitChunksPlugin 去重和分离 chunk。\n\nwebpack.config.js\n```js\nconst path = require('path');\n\n  module.exports = {\n    mode: 'development',\n    entry: {\n      index: './src/index.js',\n    },\n    output: {\n      filename: '[name].bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    },\n    optimization: {\n      splitChunks: {\n        chunks: 'all'\n      }\n    }\n  };\n\n```\nindex.js\n\n```js\nimport _ from 'lodash'\n\nconsole.log(_.join(['hello','world']))\n\n```\n\n\n##### 二.使用符合 ECMAScript 提案 的 import() 语法 来实现动态导入。\n\n1.安装依赖\n    \n    npm install --save-dev @babel/plugin-syntax-dynamic-import\n2.配置.babelrc\n```json\n{\n  \"plugins\": [\"@babel/plugin-syntax-dynamic-import\"]\n}\n```\n3.webpack.config.js\n```js\nconst path = require('path');\n\n  module.exports = {\n    mode: 'development',\n    entry: {\n     index: './src/index.js'\n    },\n    output: {\n      filename: '[name].bundle.js',\n      chunkFilename: '[name].bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    },\n\n  };\n```\n\n4.src/index.js\n\n```js\nfunction getComponent() {\n  return import('lodash').then(({ default: _ }) => {\n    var element = document.createElement('div');\n\n    element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n\n    return element;\n  })\n}\n\ngetComponent().then(comp=>{\n  document.body.appendChild(comp);\n})\n```\n\n5.打包\n    npx webpack\n","source":"_posts/code spliting的两种方式.md","raw":"---\ntitle: Code Splitting的两种方法\ntags: \n  - 打包\n  - 构建\n  - 代码分离\ncategories: webpack\n---\n\n##### 一.使用 SplitChunksPlugin 去重和分离 chunk。\n\nwebpack.config.js\n```js\nconst path = require('path');\n\n  module.exports = {\n    mode: 'development',\n    entry: {\n      index: './src/index.js',\n    },\n    output: {\n      filename: '[name].bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    },\n    optimization: {\n      splitChunks: {\n        chunks: 'all'\n      }\n    }\n  };\n\n```\nindex.js\n\n```js\nimport _ from 'lodash'\n\nconsole.log(_.join(['hello','world']))\n\n```\n\n\n##### 二.使用符合 ECMAScript 提案 的 import() 语法 来实现动态导入。\n\n1.安装依赖\n    \n    npm install --save-dev @babel/plugin-syntax-dynamic-import\n2.配置.babelrc\n```json\n{\n  \"plugins\": [\"@babel/plugin-syntax-dynamic-import\"]\n}\n```\n3.webpack.config.js\n```js\nconst path = require('path');\n\n  module.exports = {\n    mode: 'development',\n    entry: {\n     index: './src/index.js'\n    },\n    output: {\n      filename: '[name].bundle.js',\n      chunkFilename: '[name].bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    },\n\n  };\n```\n\n4.src/index.js\n\n```js\nfunction getComponent() {\n  return import('lodash').then(({ default: _ }) => {\n    var element = document.createElement('div');\n\n    element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n\n    return element;\n  })\n}\n\ngetComponent().then(comp=>{\n  document.body.appendChild(comp);\n})\n```\n\n5.打包\n    npx webpack\n","slug":"code spliting的两种方式","published":1,"date":"2019-08-19T16:58:53.223Z","updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1sbm00000umwn5vbor0h","content":"<h5 id=\"一-使用-SplitChunksPlugin-去重和分离-chunk。\"><a href=\"#一-使用-SplitChunksPlugin-去重和分离-chunk。\" class=\"headerlink\" title=\"一.使用 SplitChunksPlugin 去重和分离 chunk。\"></a>一.使用 SplitChunksPlugin 去重和分离 chunk。</h5><p>webpack.config.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    mode: <span class=\"string\">'development'</span>,</span><br><span class=\"line\">    entry: &#123;</span><br><span class=\"line\">      index: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    output: &#123;</span><br><span class=\"line\">      filename: <span class=\"string\">'[name].bundle.js'</span>,</span><br><span class=\"line\">      path: path.resolve(__dirname, <span class=\"string\">'dist'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    optimization: &#123;</span><br><span class=\"line\">      splitChunks: &#123;</span><br><span class=\"line\">        chunks: <span class=\"string\">'all'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'lodash'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(_.join([<span class=\"string\">'hello'</span>,<span class=\"string\">'world'</span>]))</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"二-使用符合-ECMAScript-提案-的-import-语法-来实现动态导入。\"><a href=\"#二-使用符合-ECMAScript-提案-的-import-语法-来实现动态导入。\" class=\"headerlink\" title=\"二.使用符合 ECMAScript 提案 的 import() 语法 来实现动态导入。\"></a>二.使用符合 ECMAScript 提案 的 import() 语法 来实现动态导入。</h5><p>1.安装依赖</p>\n<pre><code>npm install --save-dev @babel/plugin-syntax-dynamic-import</code></pre><p>2.配置.babelrc</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"plugins\"</span>: [<span class=\"string\">\"@babel/plugin-syntax-dynamic-import\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3.webpack.config.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    mode: <span class=\"string\">'development'</span>,</span><br><span class=\"line\">    entry: &#123;</span><br><span class=\"line\">     index: <span class=\"string\">'./src/index.js'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    output: &#123;</span><br><span class=\"line\">      filename: <span class=\"string\">'[name].bundle.js'</span>,</span><br><span class=\"line\">      chunkFilename: <span class=\"string\">'[name].bundle.js'</span>,</span><br><span class=\"line\">      path: path.resolve(__dirname, <span class=\"string\">'dist'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>4.src/index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getComponent</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">import</span>(<span class=\"string\">'lodash'</span>).then(<span class=\"function\">(<span class=\"params\">&#123; <span class=\"keyword\">default</span>: _ &#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> element = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    element.innerHTML = _.join([<span class=\"string\">'Hello'</span>, <span class=\"string\">'webpack'</span>], <span class=\"string\">' '</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> element;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getComponent().then(<span class=\"function\"><span class=\"params\">comp</span>=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.appendChild(comp);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>5.打包<br>    npx webpack</p>\n","site":{"data":{}},"excerpt":"","more":"<h5 id=\"一-使用-SplitChunksPlugin-去重和分离-chunk。\"><a href=\"#一-使用-SplitChunksPlugin-去重和分离-chunk。\" class=\"headerlink\" title=\"一.使用 SplitChunksPlugin 去重和分离 chunk。\"></a>一.使用 SplitChunksPlugin 去重和分离 chunk。</h5><p>webpack.config.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    mode: <span class=\"string\">'development'</span>,</span><br><span class=\"line\">    entry: &#123;</span><br><span class=\"line\">      index: <span class=\"string\">'./src/index.js'</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    output: &#123;</span><br><span class=\"line\">      filename: <span class=\"string\">'[name].bundle.js'</span>,</span><br><span class=\"line\">      path: path.resolve(__dirname, <span class=\"string\">'dist'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    optimization: &#123;</span><br><span class=\"line\">      splitChunks: &#123;</span><br><span class=\"line\">        chunks: <span class=\"string\">'all'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'lodash'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(_.join([<span class=\"string\">'hello'</span>,<span class=\"string\">'world'</span>]))</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"二-使用符合-ECMAScript-提案-的-import-语法-来实现动态导入。\"><a href=\"#二-使用符合-ECMAScript-提案-的-import-语法-来实现动态导入。\" class=\"headerlink\" title=\"二.使用符合 ECMAScript 提案 的 import() 语法 来实现动态导入。\"></a>二.使用符合 ECMAScript 提案 的 import() 语法 来实现动态导入。</h5><p>1.安装依赖</p>\n<pre><code>npm install --save-dev @babel/plugin-syntax-dynamic-import</code></pre><p>2.配置.babelrc</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"plugins\"</span>: [<span class=\"string\">\"@babel/plugin-syntax-dynamic-import\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3.webpack.config.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    mode: <span class=\"string\">'development'</span>,</span><br><span class=\"line\">    entry: &#123;</span><br><span class=\"line\">     index: <span class=\"string\">'./src/index.js'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    output: &#123;</span><br><span class=\"line\">      filename: <span class=\"string\">'[name].bundle.js'</span>,</span><br><span class=\"line\">      chunkFilename: <span class=\"string\">'[name].bundle.js'</span>,</span><br><span class=\"line\">      path: path.resolve(__dirname, <span class=\"string\">'dist'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>4.src/index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getComponent</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">import</span>(<span class=\"string\">'lodash'</span>).then(<span class=\"function\">(<span class=\"params\">&#123; <span class=\"keyword\">default</span>: _ &#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> element = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    element.innerHTML = _.join([<span class=\"string\">'Hello'</span>, <span class=\"string\">'webpack'</span>], <span class=\"string\">' '</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> element;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getComponent().then(<span class=\"function\"><span class=\"params\">comp</span>=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.appendChild(comp);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>5.打包<br>    npx webpack</p>\n"},{"title":"css sticky footer的实现","date":"2016-10-11T13:54:51.000Z","_content":"html\n```html\n<div class=\"detail\" v-show=\"isShow\">\n  <div class=\"detail-wrapper clearfix\">\n    <div class=\"detail-main\">\n      <p>{{seller.bulletin}}</p>\n      <p>{{seller.bulletin}}</p>\n      <p>{{seller.bulletin}}</p>\n      <p>{{seller.bulletin}}</p>\n      <p>{{seller.bulletin}}</p>\n    </div>\n  </div>\n  <div class=\"detail-close\" @click=\"closeDetail\">\n    <i class=\"icon-close\"></i>\n  </div>\n</div>\n```\ncss\n```css\n.detail\n  position: fixed\n  top: 0\n  left: 0\n  width: 100%\n  height: 100%\n  overflow: auto\n  background: rgba(7, 17, 27, 0.8)\n  z-index: 100\n  .detail-wrapper\n    min-height: 100%\n    .detail-main\n      margin-top: 64px\n      padding-bottom: 64px\n  .detail-close\n    position: relative\n    width: 32px\n    height: 32px\n    margin: -64px auto 0 auto\n    font-size: 32px\n    clear: both\n```\nclearfix\n```css\n.clearfix\n  display: inline-block\n  &:after\n    content: '.'\n    display: block\n    clear: both\n    visibility: hidden\n    height: 0\n    font-size: 0\n    line-height: 0\n```\n","source":"_posts/css sticky footer.md","raw":"---\ntitle: css sticky footer的实现\ndate: 2016-10-11 13:54:51\ntags: \n  - css \n  - 布局 \ncategories: css\n---\nhtml\n```html\n<div class=\"detail\" v-show=\"isShow\">\n  <div class=\"detail-wrapper clearfix\">\n    <div class=\"detail-main\">\n      <p>{{seller.bulletin}}</p>\n      <p>{{seller.bulletin}}</p>\n      <p>{{seller.bulletin}}</p>\n      <p>{{seller.bulletin}}</p>\n      <p>{{seller.bulletin}}</p>\n    </div>\n  </div>\n  <div class=\"detail-close\" @click=\"closeDetail\">\n    <i class=\"icon-close\"></i>\n  </div>\n</div>\n```\ncss\n```css\n.detail\n  position: fixed\n  top: 0\n  left: 0\n  width: 100%\n  height: 100%\n  overflow: auto\n  background: rgba(7, 17, 27, 0.8)\n  z-index: 100\n  .detail-wrapper\n    min-height: 100%\n    .detail-main\n      margin-top: 64px\n      padding-bottom: 64px\n  .detail-close\n    position: relative\n    width: 32px\n    height: 32px\n    margin: -64px auto 0 auto\n    font-size: 32px\n    clear: both\n```\nclearfix\n```css\n.clearfix\n  display: inline-block\n  &:after\n    content: '.'\n    display: block\n    clear: both\n    visibility: hidden\n    height: 0\n    font-size: 0\n    line-height: 0\n```\n","slug":"css sticky footer","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1sbv00020umwwl8zxofj","content":"<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"detail\"</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"isShow\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"detail-wrapper clearfix\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"detail-main\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;seller.bulletin&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;seller.bulletin&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;seller.bulletin&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;seller.bulletin&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;seller.bulletin&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"detail-close\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"closeDetail\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-close\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>css</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.detail</span></span><br><span class=\"line\">  <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">fixed</span></span><br><span class=\"line\">  <span class=\"selector-tag\">top</span>: 0</span><br><span class=\"line\">  <span class=\"selector-tag\">left</span>: 0</span><br><span class=\"line\">  <span class=\"selector-tag\">width</span>: 100%</span><br><span class=\"line\">  <span class=\"selector-tag\">height</span>: 100%</span><br><span class=\"line\">  <span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">auto</span></span><br><span class=\"line\">  <span class=\"selector-tag\">background</span>: <span class=\"selector-tag\">rgba</span>(7, 17, 27, 0<span class=\"selector-class\">.8</span>)</span><br><span class=\"line\">  <span class=\"selector-tag\">z-index</span>: 100</span><br><span class=\"line\">  <span class=\"selector-class\">.detail-wrapper</span></span><br><span class=\"line\">    <span class=\"selector-tag\">min-height</span>: 100%</span><br><span class=\"line\">    <span class=\"selector-class\">.detail-main</span></span><br><span class=\"line\">      <span class=\"selector-tag\">margin-top</span>: 64<span class=\"selector-tag\">px</span></span><br><span class=\"line\">      <span class=\"selector-tag\">padding-bottom</span>: 64<span class=\"selector-tag\">px</span></span><br><span class=\"line\">  <span class=\"selector-class\">.detail-close</span></span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">relative</span></span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 32<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 32<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">margin</span>: <span class=\"selector-tag\">-64px</span> <span class=\"selector-tag\">auto</span> 0 <span class=\"selector-tag\">auto</span></span><br><span class=\"line\">    <span class=\"selector-tag\">font-size</span>: 32<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">clear</span>: <span class=\"selector-tag\">both</span></span><br></pre></td></tr></table></figure>\n\n<p>clearfix</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clearfix</span></span><br><span class=\"line\">  <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">inline-block</span></span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:after</span></span><br><span class=\"line\">    content: '.'</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span></span><br><span class=\"line\">    <span class=\"selector-tag\">clear</span>: <span class=\"selector-tag\">both</span></span><br><span class=\"line\">    <span class=\"selector-tag\">visibility</span>: <span class=\"selector-tag\">hidden</span></span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 0</span><br><span class=\"line\">    <span class=\"selector-tag\">font-size</span>: 0</span><br><span class=\"line\">    <span class=\"selector-tag\">line-height</span>: 0</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"detail\"</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"isShow\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"detail-wrapper clearfix\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"detail-main\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;seller.bulletin&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;seller.bulletin&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;seller.bulletin&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;seller.bulletin&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;seller.bulletin&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"detail-close\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"closeDetail\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-close\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>css</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.detail</span></span><br><span class=\"line\">  <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">fixed</span></span><br><span class=\"line\">  <span class=\"selector-tag\">top</span>: 0</span><br><span class=\"line\">  <span class=\"selector-tag\">left</span>: 0</span><br><span class=\"line\">  <span class=\"selector-tag\">width</span>: 100%</span><br><span class=\"line\">  <span class=\"selector-tag\">height</span>: 100%</span><br><span class=\"line\">  <span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">auto</span></span><br><span class=\"line\">  <span class=\"selector-tag\">background</span>: <span class=\"selector-tag\">rgba</span>(7, 17, 27, 0<span class=\"selector-class\">.8</span>)</span><br><span class=\"line\">  <span class=\"selector-tag\">z-index</span>: 100</span><br><span class=\"line\">  <span class=\"selector-class\">.detail-wrapper</span></span><br><span class=\"line\">    <span class=\"selector-tag\">min-height</span>: 100%</span><br><span class=\"line\">    <span class=\"selector-class\">.detail-main</span></span><br><span class=\"line\">      <span class=\"selector-tag\">margin-top</span>: 64<span class=\"selector-tag\">px</span></span><br><span class=\"line\">      <span class=\"selector-tag\">padding-bottom</span>: 64<span class=\"selector-tag\">px</span></span><br><span class=\"line\">  <span class=\"selector-class\">.detail-close</span></span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">relative</span></span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 32<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 32<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">margin</span>: <span class=\"selector-tag\">-64px</span> <span class=\"selector-tag\">auto</span> 0 <span class=\"selector-tag\">auto</span></span><br><span class=\"line\">    <span class=\"selector-tag\">font-size</span>: 32<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">clear</span>: <span class=\"selector-tag\">both</span></span><br></pre></td></tr></table></figure>\n\n<p>clearfix</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clearfix</span></span><br><span class=\"line\">  <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">inline-block</span></span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:after</span></span><br><span class=\"line\">    content: '.'</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span></span><br><span class=\"line\">    <span class=\"selector-tag\">clear</span>: <span class=\"selector-tag\">both</span></span><br><span class=\"line\">    <span class=\"selector-tag\">visibility</span>: <span class=\"selector-tag\">hidden</span></span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 0</span><br><span class=\"line\">    <span class=\"selector-tag\">font-size</span>: 0</span><br><span class=\"line\">    <span class=\"selector-tag\">line-height</span>: 0</span><br></pre></td></tr></table></figure>\n\n"},{"title":"flex实现左边固定宽度右边自适应布局","date":"2016-11-12T20:54:51.000Z","_content":"html\n```html\n<div class=\"goods\">\n  <div class=\"menu-wrapper\">\n    <ul>\n      <li v-for=\"(food,index) in goods\" :key=\"index\" class=\"menu-item\">\n        <span class=\"text border-1px\">\n          <span v-show=\"food.type>0\" class=\"icon\" :class=\"classMap[food.type]\"></span>\n          {{food.name}}\n        </span>\n      </li>\n    </ul>\n  </div>\n  <div class=\"foods-wrapper\"></div>\n</div>\n```\ncss\n```css\n.goods\n  position: absolute\n  top: 174px\n  bottom: 46px\n  overflow: hidden\n  display: flex\n  .menu-wrapper\n    flex: 0 0 80px\n    width: 80px\n    background: #f3f5f7\n  .food-wrapper\n    flex: 1\n```\n","source":"_posts/flex实现左边固定右边自适应布局.md","raw":"---\ntitle: flex实现左边固定宽度右边自适应布局\ndate: 2016-11-12 20:54:51\ntags: \n  - 布局\n  - flex\ncategories: css\n---\nhtml\n```html\n<div class=\"goods\">\n  <div class=\"menu-wrapper\">\n    <ul>\n      <li v-for=\"(food,index) in goods\" :key=\"index\" class=\"menu-item\">\n        <span class=\"text border-1px\">\n          <span v-show=\"food.type>0\" class=\"icon\" :class=\"classMap[food.type]\"></span>\n          {{food.name}}\n        </span>\n      </li>\n    </ul>\n  </div>\n  <div class=\"foods-wrapper\"></div>\n</div>\n```\ncss\n```css\n.goods\n  position: absolute\n  top: 174px\n  bottom: 46px\n  overflow: hidden\n  display: flex\n  .menu-wrapper\n    flex: 0 0 80px\n    width: 80px\n    background: #f3f5f7\n  .food-wrapper\n    flex: 1\n```\n","slug":"flex实现左边固定右边自适应布局","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1sc300060umw6uk0x4rr","content":"<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"goods\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-wrapper\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(food,index) in goods\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-item\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text border-1px\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"food.type&gt;0\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"classMap[food.type]\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          &#123;&#123;food.name&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"foods-wrapper\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>css</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.goods</span></span><br><span class=\"line\">  <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span></span><br><span class=\"line\">  <span class=\"selector-tag\">top</span>: 174<span class=\"selector-tag\">px</span></span><br><span class=\"line\">  <span class=\"selector-tag\">bottom</span>: 46<span class=\"selector-tag\">px</span></span><br><span class=\"line\">  <span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span></span><br><span class=\"line\">  <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span></span><br><span class=\"line\">  <span class=\"selector-class\">.menu-wrapper</span></span><br><span class=\"line\">    <span class=\"selector-tag\">flex</span>: 0 0 80<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 80<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#f3f5f7</span></span><br><span class=\"line\">  <span class=\"selector-class\">.food-wrapper</span></span><br><span class=\"line\">    <span class=\"selector-tag\">flex</span>: 1</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"goods\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-wrapper\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(food,index) in goods\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-item\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text border-1px\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"food.type&gt;0\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"classMap[food.type]\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          &#123;&#123;food.name&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"foods-wrapper\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>css</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.goods</span></span><br><span class=\"line\">  <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span></span><br><span class=\"line\">  <span class=\"selector-tag\">top</span>: 174<span class=\"selector-tag\">px</span></span><br><span class=\"line\">  <span class=\"selector-tag\">bottom</span>: 46<span class=\"selector-tag\">px</span></span><br><span class=\"line\">  <span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span></span><br><span class=\"line\">  <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span></span><br><span class=\"line\">  <span class=\"selector-class\">.menu-wrapper</span></span><br><span class=\"line\">    <span class=\"selector-tag\">flex</span>: 0 0 80<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 80<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#f3f5f7</span></span><br><span class=\"line\">  <span class=\"selector-class\">.food-wrapper</span></span><br><span class=\"line\">    <span class=\"selector-tag\">flex</span>: 1</span><br></pre></td></tr></table></figure>\n\n"},{"title":"js深拷贝和浅拷贝","date":"2016-05-01T23:54:51.000Z","_content":"\n\n### 一、数组的深浅拷贝\n\n>在使用JavaScript对数组进行操作的时候，我们经常需要将数组进行备份，事实证明如果只是简单的将它赋予其他变量，那么我们只要更改其中的任何一个，然后其他的也会跟着改变，这就导致了问题的发生。\n\n    var arr = [\"One\",\"Two\",\"Three\"];\n    var arrto = arr;\n    arrto[1] = \"test\";\n    document.writeln(\"数组的原始值：\" + arr + \"<br />\");//Export:数组的原始值：One,test,Three\n    document.writeln(\"数组的新值：\" + arrto + \"<br />\");//Export:数组的新值：One,test,Three\n\n像上面的这种直接赋值的方式就是浅拷贝，很多时候，这样并不是我们想要得到的结果，其实我们想要的是arr的值不变，不是吗？ \n\n方法一：js的slice函数 \n    \n    对于array对象的slice函数，\n    返回一个数组的一段。（仍为数组）\n    arrayObj.slice(start, [end])\n    参数\n    arrayObj\n    必选项。一个 Array 对象。\n    start\n    必选项。arrayObj 中所指定的部分的开始元素是从零开始计算的下标。\n    end\n    可选项。arrayObj 中所指定的部分的结束元素是从零开始计算的下标。\n    说明\n    slice 方法返回一个 Array 对象，其中包含了 arrayObj 的指定部分。\n    slice 方法一直复制到 end 所指定的元素，但是不包括该元素。如果 start 为负，将它作为 length + start处理，此处 length 为数组的长度。如果 end 为负，就将它作为 length + end 处理，此处 length 为数组的长度。如果省略 end ，那么 slice 方法将一直复制到 arrayObj 的结尾。如果 end 出现在 start 之前，不复制任何元素到新数组中。\n```js\n    var arr = [\"One\",\"Two\",\"Three\"];\n    var arrtoo = arr.slice(0);\n    arrtoo[1] = \"set Map\";\n    document.writeln(\"数组的原始值：\" + arr + \"<br />\");//Export:数组的原始值：One,Two,Three\n    document.writeln(\"数组的新值：\" + arrtoo + \"<br />\");//Export:数组的新值：One,set Map,Three\n```\n\n方法二：js的concat方法 \n    concat() 方法用于连接两个或多个数组。\n    该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。\n    语法\n    arrayObject.concat(arrayX,arrayX,......,arrayX)\n    说明\n    返回一个新的数组。该数组是通过把所有 arrayX 参数添加到 arrayObject 中生成的。如果要进行 concat() 操作的参数是数组，那么添加的是数组中的元素，而不是数组。\n```js\nvar arr = [\"One\",\"Two\",\"Three\"];\n\nvar arrtooo = arr.concat();\narrtooo[1] = \"set Map To\";\ndocument.writeln(\"数组的原始值：\" + arr + \"<br />\");//Export:数组的原始值：One,Two,Three\ndocument.writeln(\"数组的新值：\" + arrtooo + \"<br />\");//Export:数组的新值：One,set Map To,Three\n```\n\n### 二、对象的深浅拷贝\n\n    var a={name:'yy',age:26};\n    var b=new Object();\n    b.name=a.name;\n    b.age=a.age;\n    a.name='xx';\n    console.log(b);//Object { name=\"yy\", age=26}\n    console.log(a);//Object { name=\"xx\", age=26}\n就是把对象的属性遍历一遍，赋给一个新的对象。\n```js\nvar deepCopy= function(source) { \n\n  \n    var result={};\n\n    for (var key in source) {\n  \n\n        result[key] = typeof source[key]===’object’? deepCoyp(source[key]): source[key];\n\n     } \n   return result; \n}\n```\n","source":"_posts/js深拷贝和浅拷贝.md","raw":"---\ntitle: js深拷贝和浅拷贝\ndate: 2016-05-1 23:54:51\ntags: \n  - js \ncategories: javascript\n---\n\n\n### 一、数组的深浅拷贝\n\n>在使用JavaScript对数组进行操作的时候，我们经常需要将数组进行备份，事实证明如果只是简单的将它赋予其他变量，那么我们只要更改其中的任何一个，然后其他的也会跟着改变，这就导致了问题的发生。\n\n    var arr = [\"One\",\"Two\",\"Three\"];\n    var arrto = arr;\n    arrto[1] = \"test\";\n    document.writeln(\"数组的原始值：\" + arr + \"<br />\");//Export:数组的原始值：One,test,Three\n    document.writeln(\"数组的新值：\" + arrto + \"<br />\");//Export:数组的新值：One,test,Three\n\n像上面的这种直接赋值的方式就是浅拷贝，很多时候，这样并不是我们想要得到的结果，其实我们想要的是arr的值不变，不是吗？ \n\n方法一：js的slice函数 \n    \n    对于array对象的slice函数，\n    返回一个数组的一段。（仍为数组）\n    arrayObj.slice(start, [end])\n    参数\n    arrayObj\n    必选项。一个 Array 对象。\n    start\n    必选项。arrayObj 中所指定的部分的开始元素是从零开始计算的下标。\n    end\n    可选项。arrayObj 中所指定的部分的结束元素是从零开始计算的下标。\n    说明\n    slice 方法返回一个 Array 对象，其中包含了 arrayObj 的指定部分。\n    slice 方法一直复制到 end 所指定的元素，但是不包括该元素。如果 start 为负，将它作为 length + start处理，此处 length 为数组的长度。如果 end 为负，就将它作为 length + end 处理，此处 length 为数组的长度。如果省略 end ，那么 slice 方法将一直复制到 arrayObj 的结尾。如果 end 出现在 start 之前，不复制任何元素到新数组中。\n```js\n    var arr = [\"One\",\"Two\",\"Three\"];\n    var arrtoo = arr.slice(0);\n    arrtoo[1] = \"set Map\";\n    document.writeln(\"数组的原始值：\" + arr + \"<br />\");//Export:数组的原始值：One,Two,Three\n    document.writeln(\"数组的新值：\" + arrtoo + \"<br />\");//Export:数组的新值：One,set Map,Three\n```\n\n方法二：js的concat方法 \n    concat() 方法用于连接两个或多个数组。\n    该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。\n    语法\n    arrayObject.concat(arrayX,arrayX,......,arrayX)\n    说明\n    返回一个新的数组。该数组是通过把所有 arrayX 参数添加到 arrayObject 中生成的。如果要进行 concat() 操作的参数是数组，那么添加的是数组中的元素，而不是数组。\n```js\nvar arr = [\"One\",\"Two\",\"Three\"];\n\nvar arrtooo = arr.concat();\narrtooo[1] = \"set Map To\";\ndocument.writeln(\"数组的原始值：\" + arr + \"<br />\");//Export:数组的原始值：One,Two,Three\ndocument.writeln(\"数组的新值：\" + arrtooo + \"<br />\");//Export:数组的新值：One,set Map To,Three\n```\n\n### 二、对象的深浅拷贝\n\n    var a={name:'yy',age:26};\n    var b=new Object();\n    b.name=a.name;\n    b.age=a.age;\n    a.name='xx';\n    console.log(b);//Object { name=\"yy\", age=26}\n    console.log(a);//Object { name=\"xx\", age=26}\n就是把对象的属性遍历一遍，赋给一个新的对象。\n```js\nvar deepCopy= function(source) { \n\n  \n    var result={};\n\n    for (var key in source) {\n  \n\n        result[key] = typeof source[key]===’object’? deepCoyp(source[key]): source[key];\n\n     } \n   return result; \n}\n```\n","slug":"js深拷贝和浅拷贝","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1sc500080umwwpjxobna","content":"<h3 id=\"一、数组的深浅拷贝\"><a href=\"#一、数组的深浅拷贝\" class=\"headerlink\" title=\"一、数组的深浅拷贝\"></a>一、数组的深浅拷贝</h3><blockquote>\n<p>在使用JavaScript对数组进行操作的时候，我们经常需要将数组进行备份，事实证明如果只是简单的将它赋予其他变量，那么我们只要更改其中的任何一个，然后其他的也会跟着改变，这就导致了问题的发生。</p>\n</blockquote>\n<pre><code>var arr = [&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;];\nvar arrto = arr;\narrto[1] = &quot;test&quot;;\ndocument.writeln(&quot;数组的原始值：&quot; + arr + &quot;&lt;br /&gt;&quot;);//Export:数组的原始值：One,test,Three\ndocument.writeln(&quot;数组的新值：&quot; + arrto + &quot;&lt;br /&gt;&quot;);//Export:数组的新值：One,test,Three</code></pre><p>像上面的这种直接赋值的方式就是浅拷贝，很多时候，这样并不是我们想要得到的结果，其实我们想要的是arr的值不变，不是吗？ </p>\n<p>方法一：js的slice函数 </p>\n<pre><code>对于array对象的slice函数，\n返回一个数组的一段。（仍为数组）\narrayObj.slice(start, [end])\n参数\narrayObj\n必选项。一个 Array 对象。\nstart\n必选项。arrayObj 中所指定的部分的开始元素是从零开始计算的下标。\nend\n可选项。arrayObj 中所指定的部分的结束元素是从零开始计算的下标。\n说明\nslice 方法返回一个 Array 对象，其中包含了 arrayObj 的指定部分。\nslice 方法一直复制到 end 所指定的元素，但是不包括该元素。如果 start 为负，将它作为 length + start处理，此处 length 为数组的长度。如果 end 为负，就将它作为 length + end 处理，此处 length 为数组的长度。如果省略 end ，那么 slice 方法将一直复制到 arrayObj 的结尾。如果 end 出现在 start 之前，不复制任何元素到新数组中。</code></pre><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"One\"</span>,<span class=\"string\">\"Two\"</span>,<span class=\"string\">\"Three\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arrtoo = arr.slice(<span class=\"number\">0</span>);</span><br><span class=\"line\">arrtoo[<span class=\"number\">1</span>] = <span class=\"string\">\"set Map\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的原始值：\"</span> + arr + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的原始值：One,Two,Three</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的新值：\"</span> + arrtoo + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的新值：One,set Map,Three</span></span><br></pre></td></tr></table></figure>\n\n<p>方法二：js的concat方法<br>    concat() 方法用于连接两个或多个数组。<br>    该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。<br>    语法<br>    arrayObject.concat(arrayX,arrayX,……,arrayX)<br>    说明<br>    返回一个新的数组。该数组是通过把所有 arrayX 参数添加到 arrayObject 中生成的。如果要进行 concat() 操作的参数是数组，那么添加的是数组中的元素，而不是数组。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"One\"</span>,<span class=\"string\">\"Two\"</span>,<span class=\"string\">\"Three\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arrtooo = arr.concat();</span><br><span class=\"line\">arrtooo[<span class=\"number\">1</span>] = <span class=\"string\">\"set Map To\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的原始值：\"</span> + arr + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的原始值：One,Two,Three</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的新值：\"</span> + arrtooo + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的新值：One,set Map To,Three</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、对象的深浅拷贝\"><a href=\"#二、对象的深浅拷贝\" class=\"headerlink\" title=\"二、对象的深浅拷贝\"></a>二、对象的深浅拷贝</h3><pre><code>var a={name:&apos;yy&apos;,age:26};\nvar b=new Object();\nb.name=a.name;\nb.age=a.age;\na.name=&apos;xx&apos;;\nconsole.log(b);//Object { name=&quot;yy&quot;, age=26}\nconsole.log(a);//Object { name=&quot;xx&quot;, age=26}</code></pre><p>就是把对象的属性遍历一遍，赋给一个新的对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> deepCopy= <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">source</span>) </span>&#123; </span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> result=&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">        result[key] = <span class=\"keyword\">typeof</span> source[key]===’object’? deepCoyp(source[key]): source[key];</span><br><span class=\"line\"></span><br><span class=\"line\">     &#125; </span><br><span class=\"line\">   <span class=\"keyword\">return</span> result; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、数组的深浅拷贝\"><a href=\"#一、数组的深浅拷贝\" class=\"headerlink\" title=\"一、数组的深浅拷贝\"></a>一、数组的深浅拷贝</h3><blockquote>\n<p>在使用JavaScript对数组进行操作的时候，我们经常需要将数组进行备份，事实证明如果只是简单的将它赋予其他变量，那么我们只要更改其中的任何一个，然后其他的也会跟着改变，这就导致了问题的发生。</p>\n</blockquote>\n<pre><code>var arr = [&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;];\nvar arrto = arr;\narrto[1] = &quot;test&quot;;\ndocument.writeln(&quot;数组的原始值：&quot; + arr + &quot;&lt;br /&gt;&quot;);//Export:数组的原始值：One,test,Three\ndocument.writeln(&quot;数组的新值：&quot; + arrto + &quot;&lt;br /&gt;&quot;);//Export:数组的新值：One,test,Three</code></pre><p>像上面的这种直接赋值的方式就是浅拷贝，很多时候，这样并不是我们想要得到的结果，其实我们想要的是arr的值不变，不是吗？ </p>\n<p>方法一：js的slice函数 </p>\n<pre><code>对于array对象的slice函数，\n返回一个数组的一段。（仍为数组）\narrayObj.slice(start, [end])\n参数\narrayObj\n必选项。一个 Array 对象。\nstart\n必选项。arrayObj 中所指定的部分的开始元素是从零开始计算的下标。\nend\n可选项。arrayObj 中所指定的部分的结束元素是从零开始计算的下标。\n说明\nslice 方法返回一个 Array 对象，其中包含了 arrayObj 的指定部分。\nslice 方法一直复制到 end 所指定的元素，但是不包括该元素。如果 start 为负，将它作为 length + start处理，此处 length 为数组的长度。如果 end 为负，就将它作为 length + end 处理，此处 length 为数组的长度。如果省略 end ，那么 slice 方法将一直复制到 arrayObj 的结尾。如果 end 出现在 start 之前，不复制任何元素到新数组中。</code></pre><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"One\"</span>,<span class=\"string\">\"Two\"</span>,<span class=\"string\">\"Three\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arrtoo = arr.slice(<span class=\"number\">0</span>);</span><br><span class=\"line\">arrtoo[<span class=\"number\">1</span>] = <span class=\"string\">\"set Map\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的原始值：\"</span> + arr + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的原始值：One,Two,Three</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的新值：\"</span> + arrtoo + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的新值：One,set Map,Three</span></span><br></pre></td></tr></table></figure>\n\n<p>方法二：js的concat方法<br>    concat() 方法用于连接两个或多个数组。<br>    该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。<br>    语法<br>    arrayObject.concat(arrayX,arrayX,……,arrayX)<br>    说明<br>    返回一个新的数组。该数组是通过把所有 arrayX 参数添加到 arrayObject 中生成的。如果要进行 concat() 操作的参数是数组，那么添加的是数组中的元素，而不是数组。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"One\"</span>,<span class=\"string\">\"Two\"</span>,<span class=\"string\">\"Three\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arrtooo = arr.concat();</span><br><span class=\"line\">arrtooo[<span class=\"number\">1</span>] = <span class=\"string\">\"set Map To\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的原始值：\"</span> + arr + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的原始值：One,Two,Three</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的新值：\"</span> + arrtooo + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的新值：One,set Map To,Three</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、对象的深浅拷贝\"><a href=\"#二、对象的深浅拷贝\" class=\"headerlink\" title=\"二、对象的深浅拷贝\"></a>二、对象的深浅拷贝</h3><pre><code>var a={name:&apos;yy&apos;,age:26};\nvar b=new Object();\nb.name=a.name;\nb.age=a.age;\na.name=&apos;xx&apos;;\nconsole.log(b);//Object { name=&quot;yy&quot;, age=26}\nconsole.log(a);//Object { name=&quot;xx&quot;, age=26}</code></pre><p>就是把对象的属性遍历一遍，赋给一个新的对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> deepCopy= <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">source</span>) </span>&#123; </span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> result=&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">        result[key] = <span class=\"keyword\">typeof</span> source[key]===’object’? deepCoyp(source[key]): source[key];</span><br><span class=\"line\"></span><br><span class=\"line\">     &#125; </span><br><span class=\"line\">   <span class=\"keyword\">return</span> result; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"webpack搭配babel-polyfill编译es6新api","date":"2018-08-11T10:54:51.000Z","_content":"\n>babel-polyfill 为全局垫片,为开发应用而准备\n####  1.安装依赖\n\n    npm install @babel/preset-env @babel/core babel-loader --save-dev\n    npm install babel-polyfill -save\n\n\n####  2.项目中引入\n```js\nimport 'babel-polyfill'\n\nlet func=()=>{}\nconst NUM=45\nlet arr=[1,2,4]\nlet a=arr.includes(8)\nconsole.log(a);\n\nlet arrB=arr.map(item=>item*2)\n\nconsole.log('new Set(arrB)',new Set(arrB));\n\n\nfunction *fun(){\n\n}\n```\n\n\n####  3.配置\n```js\nmodule.exports = {\n  entry: {\n    app: './app.js'\n  },\n  output: {\n    filename: '[name].bundle.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: [\n              ['@babel/preset-env', {\n                targets: {\n                  browsers: ['>1%', 'last 2 versions']\n                }\n              }]\n            ]\n          }\n        },\n        exclude: '/node_moules/'\n      }\n    ]\n  }\n};\n```\n#### 4.打包\n    npx webpack","source":"_posts/webpack搭配babel-polyfill编译es6新api.md","raw":"---\ntitle: webpack搭配babel-polyfill编译es6新api\ndate: 2018-8-11 10:54:51\ntags: \n  - 打包\n  - 构建\n  - babel\ncategories: webpack\n---\n\n>babel-polyfill 为全局垫片,为开发应用而准备\n####  1.安装依赖\n\n    npm install @babel/preset-env @babel/core babel-loader --save-dev\n    npm install babel-polyfill -save\n\n\n####  2.项目中引入\n```js\nimport 'babel-polyfill'\n\nlet func=()=>{}\nconst NUM=45\nlet arr=[1,2,4]\nlet a=arr.includes(8)\nconsole.log(a);\n\nlet arrB=arr.map(item=>item*2)\n\nconsole.log('new Set(arrB)',new Set(arrB));\n\n\nfunction *fun(){\n\n}\n```\n\n\n####  3.配置\n```js\nmodule.exports = {\n  entry: {\n    app: './app.js'\n  },\n  output: {\n    filename: '[name].bundle.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: [\n              ['@babel/preset-env', {\n                targets: {\n                  browsers: ['>1%', 'last 2 versions']\n                }\n              }]\n            ]\n          }\n        },\n        exclude: '/node_moules/'\n      }\n    ]\n  }\n};\n```\n#### 4.打包\n    npx webpack","slug":"webpack搭配babel-polyfill编译es6新api","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1sc700090umw0ioc6osf","content":"<blockquote>\n<p>babel-polyfill 为全局垫片,为开发应用而准备</p>\n</blockquote>\n<h4 id=\"1-安装依赖\"><a href=\"#1-安装依赖\" class=\"headerlink\" title=\"1.安装依赖\"></a>1.安装依赖</h4><pre><code>npm install @babel/preset-env @babel/core babel-loader --save-dev\nnpm install babel-polyfill -save</code></pre><h4 id=\"2-项目中引入\"><a href=\"#2-项目中引入\" class=\"headerlink\" title=\"2.项目中引入\"></a>2.项目中引入</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'babel-polyfill'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> func=<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> NUM=<span class=\"number\">45</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> a=arr.includes(<span class=\"number\">8</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arrB=arr.map(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>item*<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'new Set(arrB)'</span>,<span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>(arrB));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> *<span class=\"title\">fun</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-配置\"><a href=\"#3-配置\" class=\"headerlink\" title=\"3.配置\"></a>3.配置</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: <span class=\"string\">'./app.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    filename: <span class=\"string\">'[name].bundle.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">          options: &#123;</span><br><span class=\"line\">            presets: [</span><br><span class=\"line\">              [<span class=\"string\">'@babel/preset-env'</span>, &#123;</span><br><span class=\"line\">                targets: &#123;</span><br><span class=\"line\">                  browsers: [<span class=\"string\">'&gt;1%'</span>, <span class=\"string\">'last 2 versions'</span>]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;]</span><br><span class=\"line\">            ]</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        exclude: <span class=\"string\">'/node_moules/'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-打包\"><a href=\"#4-打包\" class=\"headerlink\" title=\"4.打包\"></a>4.打包</h4><pre><code>npx webpack</code></pre>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>babel-polyfill 为全局垫片,为开发应用而准备</p>\n</blockquote>\n<h4 id=\"1-安装依赖\"><a href=\"#1-安装依赖\" class=\"headerlink\" title=\"1.安装依赖\"></a>1.安装依赖</h4><pre><code>npm install @babel/preset-env @babel/core babel-loader --save-dev\nnpm install babel-polyfill -save</code></pre><h4 id=\"2-项目中引入\"><a href=\"#2-项目中引入\" class=\"headerlink\" title=\"2.项目中引入\"></a>2.项目中引入</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'babel-polyfill'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> func=<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> NUM=<span class=\"number\">45</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> a=arr.includes(<span class=\"number\">8</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arrB=arr.map(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>item*<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'new Set(arrB)'</span>,<span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>(arrB));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> *<span class=\"title\">fun</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-配置\"><a href=\"#3-配置\" class=\"headerlink\" title=\"3.配置\"></a>3.配置</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: <span class=\"string\">'./app.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    filename: <span class=\"string\">'[name].bundle.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">          options: &#123;</span><br><span class=\"line\">            presets: [</span><br><span class=\"line\">              [<span class=\"string\">'@babel/preset-env'</span>, &#123;</span><br><span class=\"line\">                targets: &#123;</span><br><span class=\"line\">                  browsers: [<span class=\"string\">'&gt;1%'</span>, <span class=\"string\">'last 2 versions'</span>]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;]</span><br><span class=\"line\">            ]</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        exclude: <span class=\"string\">'/node_moules/'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-打包\"><a href=\"#4-打包\" class=\"headerlink\" title=\"4.打包\"></a>4.打包</h4><pre><code>npx webpack</code></pre>"},{"title":"webpack搭配babel-runtime-transform编译es6新api","date":"2018-08-11T12:54:51.000Z","_content":"\n>babel-runtime-transform 为局部垫片,为开发框架而准备\n####  1.安装依赖\n\n    npm install @babel/preset-env @babel/core babel-loader --save-dev\n    npm install @babel/plugin-transform-runtime  --save-dev\n    npm install @babel/runtime --save\n\n\n####  2.项目根目录新建.babelrc\n```json\n{\n  \"plugins\": [\n    [\n      \"@babel/plugin-transform-runtime\",\n      {\n        \"absoluteRuntime\": false,\n        \"corejs\": 2,\n        \"helpers\": true,\n        \"regenerator\": true,\n        \"useESModules\": false\n      }\n    ]\n  ]\n}\n```\n##### 配置项corejs为2,需要安装依赖\n    npm install --save @babel/runtime-corejs2\n\n\n####  3.配置\n```js\nmodule.exports = {\n  entry: {\n    app: './app.js'\n  },\n  output: {\n    filename: '[name].bundle.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n        },\n        exclude: '/node_moules/'\n      }\n    ]\n  }\n};\n```\n#### 4.app.js\n```js   \n// import 'babel-polyfill'\n\nlet func=()=>{}\nconst NUM=45\nlet arr=[1,2,4]\nlet a=arr.includes(8)\nconsole.log(a);\n\nlet arrB=arr.map(item=>item*2)\n\nconsole.log('new Set(arrB)',new Set(arrB));\n\n\nfunction *fun(){\n\n}\n```\n#### 5.打包\n    npx webpack","source":"_posts/webpack搭配babel-runtime-transform编译es6新api.md","raw":"---\ntitle: webpack搭配babel-runtime-transform编译es6新api\ndate: 2018-8-11 12:54:51\ntags: \n  - 打包\n  - 构建\n  - babel\ncategories: webpack\n---\n\n>babel-runtime-transform 为局部垫片,为开发框架而准备\n####  1.安装依赖\n\n    npm install @babel/preset-env @babel/core babel-loader --save-dev\n    npm install @babel/plugin-transform-runtime  --save-dev\n    npm install @babel/runtime --save\n\n\n####  2.项目根目录新建.babelrc\n```json\n{\n  \"plugins\": [\n    [\n      \"@babel/plugin-transform-runtime\",\n      {\n        \"absoluteRuntime\": false,\n        \"corejs\": 2,\n        \"helpers\": true,\n        \"regenerator\": true,\n        \"useESModules\": false\n      }\n    ]\n  ]\n}\n```\n##### 配置项corejs为2,需要安装依赖\n    npm install --save @babel/runtime-corejs2\n\n\n####  3.配置\n```js\nmodule.exports = {\n  entry: {\n    app: './app.js'\n  },\n  output: {\n    filename: '[name].bundle.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n        },\n        exclude: '/node_moules/'\n      }\n    ]\n  }\n};\n```\n#### 4.app.js\n```js   \n// import 'babel-polyfill'\n\nlet func=()=>{}\nconst NUM=45\nlet arr=[1,2,4]\nlet a=arr.includes(8)\nconsole.log(a);\n\nlet arrB=arr.map(item=>item*2)\n\nconsole.log('new Set(arrB)',new Set(arrB));\n\n\nfunction *fun(){\n\n}\n```\n#### 5.打包\n    npx webpack","slug":"webpack搭配babel-runtime-transform编译es6新api","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1sca000c0umwcuzssxfs","content":"<blockquote>\n<p>babel-runtime-transform 为局部垫片,为开发框架而准备</p>\n</blockquote>\n<h4 id=\"1-安装依赖\"><a href=\"#1-安装依赖\" class=\"headerlink\" title=\"1.安装依赖\"></a>1.安装依赖</h4><pre><code>npm install @babel/preset-env @babel/core babel-loader --save-dev\nnpm install @babel/plugin-transform-runtime  --save-dev\nnpm install @babel/runtime --save</code></pre><h4 id=\"2-项目根目录新建-babelrc\"><a href=\"#2-项目根目录新建-babelrc\" class=\"headerlink\" title=\"2.项目根目录新建.babelrc\"></a>2.项目根目录新建.babelrc</h4><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"plugins\"</span>: [</span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"string\">\"@babel/plugin-transform-runtime\"</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"absoluteRuntime\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"corejs\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"helpers\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"regenerator\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"useESModules\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"配置项corejs为2-需要安装依赖\"><a href=\"#配置项corejs为2-需要安装依赖\" class=\"headerlink\" title=\"配置项corejs为2,需要安装依赖\"></a>配置项corejs为2,需要安装依赖</h5><pre><code>npm install --save @babel/runtime-corejs2</code></pre><h4 id=\"3-配置\"><a href=\"#3-配置\" class=\"headerlink\" title=\"3.配置\"></a>3.配置</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: <span class=\"string\">'./app.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    filename: <span class=\"string\">'[name].bundle.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        exclude: <span class=\"string\">'/node_moules/'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-app-js\"><a href=\"#4-app-js\" class=\"headerlink\" title=\"4.app.js\"></a>4.app.js</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// import 'babel-polyfill'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> func=<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> NUM=<span class=\"number\">45</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> a=arr.includes(<span class=\"number\">8</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arrB=arr.map(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>item*<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'new Set(arrB)'</span>,<span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>(arrB));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> *<span class=\"title\">fun</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-打包\"><a href=\"#5-打包\" class=\"headerlink\" title=\"5.打包\"></a>5.打包</h4><pre><code>npx webpack</code></pre>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>babel-runtime-transform 为局部垫片,为开发框架而准备</p>\n</blockquote>\n<h4 id=\"1-安装依赖\"><a href=\"#1-安装依赖\" class=\"headerlink\" title=\"1.安装依赖\"></a>1.安装依赖</h4><pre><code>npm install @babel/preset-env @babel/core babel-loader --save-dev\nnpm install @babel/plugin-transform-runtime  --save-dev\nnpm install @babel/runtime --save</code></pre><h4 id=\"2-项目根目录新建-babelrc\"><a href=\"#2-项目根目录新建-babelrc\" class=\"headerlink\" title=\"2.项目根目录新建.babelrc\"></a>2.项目根目录新建.babelrc</h4><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"plugins\"</span>: [</span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"string\">\"@babel/plugin-transform-runtime\"</span>,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"absoluteRuntime\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"corejs\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"helpers\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"regenerator\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"useESModules\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"配置项corejs为2-需要安装依赖\"><a href=\"#配置项corejs为2-需要安装依赖\" class=\"headerlink\" title=\"配置项corejs为2,需要安装依赖\"></a>配置项corejs为2,需要安装依赖</h5><pre><code>npm install --save @babel/runtime-corejs2</code></pre><h4 id=\"3-配置\"><a href=\"#3-配置\" class=\"headerlink\" title=\"3.配置\"></a>3.配置</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: <span class=\"string\">'./app.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    filename: <span class=\"string\">'[name].bundle.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        exclude: <span class=\"string\">'/node_moules/'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-app-js\"><a href=\"#4-app-js\" class=\"headerlink\" title=\"4.app.js\"></a>4.app.js</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// import 'babel-polyfill'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> func=<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> NUM=<span class=\"number\">45</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> a=arr.includes(<span class=\"number\">8</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arrB=arr.map(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>item*<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'new Set(arrB)'</span>,<span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>(arrB));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> *<span class=\"title\">fun</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-打包\"><a href=\"#5-打包\" class=\"headerlink\" title=\"5.打包\"></a>5.打包</h4><pre><code>npx webpack</code></pre>"},{"title":"webpack编译es6配置选项","date":"2018-08-10T11:54:51.000Z","_content":"\n####  1.安装依赖\n\n    npm install @babel/preset-env @babel/core babel-loader --save-dev\n\n\n####  2.配置\n```js\nmodule.exports = {\n  entry: {\n    app: './app.js'\n  },\n  output: {\n    filename: '[name].bundle.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: [\n              ['@babel/preset-env', {\n                targets: {\n                  browsers: ['>1%', 'last 2 versions']\n                }\n              }]\n            ]\n          }\n        },\n        exclude: '/node_moules/'\n      }\n    ]\n  }\n};\n```","source":"_posts/webpack编译es6配置.md","raw":"---\ntitle: webpack编译es6配置选项\ndate: 2018-8-10 11:54:51\ntags: \n  - 打包\n  - 构建\ncategories: webpack\n---\n\n####  1.安装依赖\n\n    npm install @babel/preset-env @babel/core babel-loader --save-dev\n\n\n####  2.配置\n```js\nmodule.exports = {\n  entry: {\n    app: './app.js'\n  },\n  output: {\n    filename: '[name].bundle.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: [\n              ['@babel/preset-env', {\n                targets: {\n                  browsers: ['>1%', 'last 2 versions']\n                }\n              }]\n            ]\n          }\n        },\n        exclude: '/node_moules/'\n      }\n    ]\n  }\n};\n```","slug":"webpack编译es6配置","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1sci000d0umwd64dbe2v","content":"<h4 id=\"1-安装依赖\"><a href=\"#1-安装依赖\" class=\"headerlink\" title=\"1.安装依赖\"></a>1.安装依赖</h4><pre><code>npm install @babel/preset-env @babel/core babel-loader --save-dev</code></pre><h4 id=\"2-配置\"><a href=\"#2-配置\" class=\"headerlink\" title=\"2.配置\"></a>2.配置</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: <span class=\"string\">'./app.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    filename: <span class=\"string\">'[name].bundle.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">          options: &#123;</span><br><span class=\"line\">            presets: [</span><br><span class=\"line\">              [<span class=\"string\">'@babel/preset-env'</span>, &#123;</span><br><span class=\"line\">                targets: &#123;</span><br><span class=\"line\">                  browsers: [<span class=\"string\">'&gt;1%'</span>, <span class=\"string\">'last 2 versions'</span>]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;]</span><br><span class=\"line\">            ]</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        exclude: <span class=\"string\">'/node_moules/'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-安装依赖\"><a href=\"#1-安装依赖\" class=\"headerlink\" title=\"1.安装依赖\"></a>1.安装依赖</h4><pre><code>npm install @babel/preset-env @babel/core babel-loader --save-dev</code></pre><h4 id=\"2-配置\"><a href=\"#2-配置\" class=\"headerlink\" title=\"2.配置\"></a>2.配置</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: <span class=\"string\">'./app.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    filename: <span class=\"string\">'[name].bundle.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        use: &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">          options: &#123;</span><br><span class=\"line\">            presets: [</span><br><span class=\"line\">              [<span class=\"string\">'@babel/preset-env'</span>, &#123;</span><br><span class=\"line\">                targets: &#123;</span><br><span class=\"line\">                  browsers: [<span class=\"string\">'&gt;1%'</span>, <span class=\"string\">'last 2 versions'</span>]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;]</span><br><span class=\"line\">            ]</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        exclude: <span class=\"string\">'/node_moules/'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>"},{"title":"webpack编译typescript","date":"2019-02-21T20:54:51.000Z","_content":"\n\n##### 1.安装依赖\n    npm install typescript ts-loader --save-dev\n\n##### 2.配置 webpack.config.js\n```js\nmodule.exports = {\n  entry: {\n    app: './src/app.ts'\n  },\n  output: {\n    filename: '[name].bundle.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.tsx?$/,\n        use: {\n          loader: 'ts-loader',\n        },\n      }\n    ]\n  }\n};\n```\n\n##### 3. 配置 tsconfig.json\n```json\n{\n  \"compilerOptions\": {\n    \"module\": \"commonjs\",\n    \"target\": \"es5\",\n    \"allowJs\": true\n  },\n  \"include\": [\n    \"./src/*\"\n  ],\n  \"exclude\": [\n    \"./node_module\"\n  ]\n}\n```\n>ps: 第三方库的声明文件的安装和使用\n\n    npm install @types/lodash --save\n\n  \n  app.ts\n  ```ts\n  import * as _ from 'lodash'\n\n  console.log(_.chunk([12,120,100,101,88],3))\n\n  const NUM=45\n\n  interface Cat{\n    name:String,\n    gender:String\n  }\n\n  function touchCat(cat:Cat){\n    console.log('miao~',cat.name);\n    \n  }\n\n  touchCat({\n    name:\"Tom\",\n    gender:\"male\"\n  })\n\n  ```\n\n  安装声明文件后就可以在编译时出现语法错误提示...","source":"_posts/webpack编译typescript.md","raw":"---\ntitle: webpack编译typescript\ndate: 2019-2-21 20:54:51\ntags: \n  - 打包\n  - 构建\ncategories: typescript\n---\n\n\n##### 1.安装依赖\n    npm install typescript ts-loader --save-dev\n\n##### 2.配置 webpack.config.js\n```js\nmodule.exports = {\n  entry: {\n    app: './src/app.ts'\n  },\n  output: {\n    filename: '[name].bundle.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.tsx?$/,\n        use: {\n          loader: 'ts-loader',\n        },\n      }\n    ]\n  }\n};\n```\n\n##### 3. 配置 tsconfig.json\n```json\n{\n  \"compilerOptions\": {\n    \"module\": \"commonjs\",\n    \"target\": \"es5\",\n    \"allowJs\": true\n  },\n  \"include\": [\n    \"./src/*\"\n  ],\n  \"exclude\": [\n    \"./node_module\"\n  ]\n}\n```\n>ps: 第三方库的声明文件的安装和使用\n\n    npm install @types/lodash --save\n\n  \n  app.ts\n  ```ts\n  import * as _ from 'lodash'\n\n  console.log(_.chunk([12,120,100,101,88],3))\n\n  const NUM=45\n\n  interface Cat{\n    name:String,\n    gender:String\n  }\n\n  function touchCat(cat:Cat){\n    console.log('miao~',cat.name);\n    \n  }\n\n  touchCat({\n    name:\"Tom\",\n    gender:\"male\"\n  })\n\n  ```\n\n  安装声明文件后就可以在编译时出现语法错误提示...","slug":"webpack编译typescript","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1scn000h0umwu2cu5n9g","content":"<h5 id=\"1-安装依赖\"><a href=\"#1-安装依赖\" class=\"headerlink\" title=\"1.安装依赖\"></a>1.安装依赖</h5><pre><code>npm install typescript ts-loader --save-dev</code></pre><h5 id=\"2-配置-webpack-config-js\"><a href=\"#2-配置-webpack-config-js\" class=\"headerlink\" title=\"2.配置 webpack.config.js\"></a>2.配置 webpack.config.js</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: <span class=\"string\">'./src/app.ts'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    filename: <span class=\"string\">'[name].bundle.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.tsx?$/</span>,</span><br><span class=\"line\">        use: &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">'ts-loader'</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-配置-tsconfig-json\"><a href=\"#3-配置-tsconfig-json\" class=\"headerlink\" title=\"3. 配置 tsconfig.json\"></a>3. 配置 tsconfig.json</h5><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"compilerOptions\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"module\"</span>: <span class=\"string\">\"commonjs\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"target\"</span>: <span class=\"string\">\"es5\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"allowJs\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"include\"</span>: [</span><br><span class=\"line\">    <span class=\"string\">\"./src/*\"</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">\"exclude\"</span>: [</span><br><span class=\"line\">    <span class=\"string\">\"./node_module\"</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>ps: 第三方库的声明文件的安装和使用</p>\n</blockquote>\n<pre><code>npm install @types/lodash --save</code></pre><p>  app.ts<br>  <figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'lodash'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(_.chunk([<span class=\"number\">12</span>,<span class=\"number\">120</span>,<span class=\"number\">100</span>,<span class=\"number\">101</span>,<span class=\"number\">88</span>],<span class=\"number\">3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> NUM=<span class=\"number\">45</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> Cat&#123;</span><br><span class=\"line\">  name:<span class=\"built_in\">String</span>,</span><br><span class=\"line\">  gender:<span class=\"built_in\">String</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">touchCat</span>(<span class=\"params\">cat:Cat</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'miao~'</span>,cat.name);</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">touchCat(&#123;</span><br><span class=\"line\">  name:<span class=\"string\">\"Tom\"</span>,</span><br><span class=\"line\">  gender:<span class=\"string\">\"male\"</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>  安装声明文件后就可以在编译时出现语法错误提示…</p>\n","site":{"data":{}},"excerpt":"","more":"<h5 id=\"1-安装依赖\"><a href=\"#1-安装依赖\" class=\"headerlink\" title=\"1.安装依赖\"></a>1.安装依赖</h5><pre><code>npm install typescript ts-loader --save-dev</code></pre><h5 id=\"2-配置-webpack-config-js\"><a href=\"#2-配置-webpack-config-js\" class=\"headerlink\" title=\"2.配置 webpack.config.js\"></a>2.配置 webpack.config.js</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: <span class=\"string\">'./src/app.ts'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    filename: <span class=\"string\">'[name].bundle.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.tsx?$/</span>,</span><br><span class=\"line\">        use: &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">'ts-loader'</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-配置-tsconfig-json\"><a href=\"#3-配置-tsconfig-json\" class=\"headerlink\" title=\"3. 配置 tsconfig.json\"></a>3. 配置 tsconfig.json</h5><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"compilerOptions\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"module\"</span>: <span class=\"string\">\"commonjs\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"target\"</span>: <span class=\"string\">\"es5\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"allowJs\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"include\"</span>: [</span><br><span class=\"line\">    <span class=\"string\">\"./src/*\"</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">\"exclude\"</span>: [</span><br><span class=\"line\">    <span class=\"string\">\"./node_module\"</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>ps: 第三方库的声明文件的安装和使用</p>\n</blockquote>\n<pre><code>npm install @types/lodash --save</code></pre><p>  app.ts<br>  <figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'lodash'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(_.chunk([<span class=\"number\">12</span>,<span class=\"number\">120</span>,<span class=\"number\">100</span>,<span class=\"number\">101</span>,<span class=\"number\">88</span>],<span class=\"number\">3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> NUM=<span class=\"number\">45</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> Cat&#123;</span><br><span class=\"line\">  name:<span class=\"built_in\">String</span>,</span><br><span class=\"line\">  gender:<span class=\"built_in\">String</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">touchCat</span>(<span class=\"params\">cat:Cat</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'miao~'</span>,cat.name);</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">touchCat(&#123;</span><br><span class=\"line\">  name:<span class=\"string\">\"Tom\"</span>,</span><br><span class=\"line\">  gender:<span class=\"string\">\"male\"</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>  安装声明文件后就可以在编译时出现语法错误提示…</p>\n"},{"title":"webpack编译typescript  --typings安装声明文件","date":"2019-02-21T21:54:51.000Z","_content":"\n\n##### 1.安装依赖\n    npm install typescript ts-loader --save-dev\n    \n    npm insatll typings -g\n    typings install lodash\n\n##### 2.配置 webpack.config.js\n```js\nmodule.exports = {\n  entry: {\n    app: './src/app.ts'\n  },\n  output: {\n    filename: '[name].bundle.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.tsx?$/,\n        use: {\n          loader: 'ts-loader',\n        },\n      }\n    ]\n  }\n};\n```\n\n##### 3. 配置 tsconfig.json\n```json\n{\n  \"compilerOptions\": {\n    \"module\": \"commonjs\",\n    \"target\": \"es5\",\n    \"allowJs\": true,\n    // 添加\n    \"typeRoots\": [\n      \"./node_modules/@type\",\n      \"./typings/modules\"\n    ]\n  },\n  \"include\": [\n    \"./src/*\"\n  ],\n  \"exclude\": [\n    \"./node_module\"\n  ]\n}\n```\n>ps: \n\n  \n  app.ts\n  ```ts\n  import * as _ from 'lodash'\n\n  console.log(_.chunk([12,120,100,101,88],3))\n\n  const NUM=45\n\n  interface Cat{\n    name:String,\n    gender:String\n  }\n\n  function touchCat(cat:Cat){\n    console.log('miao~',cat.name);\n    \n  }\n\n  touchCat({\n    name:\"Tom\",\n    gender:\"male\"\n  })\n\n  ```\n\n  安装声明文件后就可以在编译时出现语法错误提示...","source":"_posts/webpack编译typescript之声明文件.md","raw":"---\ntitle: webpack编译typescript  --typings安装声明文件\ndate: 2019-2-21 21:54:51\ntags: \n  - 打包\n  - 构建\n  - ts声明文件\ncategories: typescript\n---\n\n\n##### 1.安装依赖\n    npm install typescript ts-loader --save-dev\n    \n    npm insatll typings -g\n    typings install lodash\n\n##### 2.配置 webpack.config.js\n```js\nmodule.exports = {\n  entry: {\n    app: './src/app.ts'\n  },\n  output: {\n    filename: '[name].bundle.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.tsx?$/,\n        use: {\n          loader: 'ts-loader',\n        },\n      }\n    ]\n  }\n};\n```\n\n##### 3. 配置 tsconfig.json\n```json\n{\n  \"compilerOptions\": {\n    \"module\": \"commonjs\",\n    \"target\": \"es5\",\n    \"allowJs\": true,\n    // 添加\n    \"typeRoots\": [\n      \"./node_modules/@type\",\n      \"./typings/modules\"\n    ]\n  },\n  \"include\": [\n    \"./src/*\"\n  ],\n  \"exclude\": [\n    \"./node_module\"\n  ]\n}\n```\n>ps: \n\n  \n  app.ts\n  ```ts\n  import * as _ from 'lodash'\n\n  console.log(_.chunk([12,120,100,101,88],3))\n\n  const NUM=45\n\n  interface Cat{\n    name:String,\n    gender:String\n  }\n\n  function touchCat(cat:Cat){\n    console.log('miao~',cat.name);\n    \n  }\n\n  touchCat({\n    name:\"Tom\",\n    gender:\"male\"\n  })\n\n  ```\n\n  安装声明文件后就可以在编译时出现语法错误提示...","slug":"webpack编译typescript之声明文件","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1scp000k0umw20cbkx1w","content":"<h5 id=\"1-安装依赖\"><a href=\"#1-安装依赖\" class=\"headerlink\" title=\"1.安装依赖\"></a>1.安装依赖</h5><pre><code>npm install typescript ts-loader --save-dev\n\nnpm insatll typings -g\ntypings install lodash</code></pre><h5 id=\"2-配置-webpack-config-js\"><a href=\"#2-配置-webpack-config-js\" class=\"headerlink\" title=\"2.配置 webpack.config.js\"></a>2.配置 webpack.config.js</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: <span class=\"string\">'./src/app.ts'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    filename: <span class=\"string\">'[name].bundle.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.tsx?$/</span>,</span><br><span class=\"line\">        use: &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">'ts-loader'</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-配置-tsconfig-json\"><a href=\"#3-配置-tsconfig-json\" class=\"headerlink\" title=\"3. 配置 tsconfig.json\"></a>3. 配置 tsconfig.json</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"compilerOptions\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"module\"</span>: <span class=\"string\">\"commonjs\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"target\"</span>: <span class=\"string\">\"es5\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"allowJs\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    // 添加</span><br><span class=\"line\">    \"typeRoots\": [</span><br><span class=\"line\">      \"./node_modules/@type\",</span><br><span class=\"line\">      <span class=\"string\">\"./typings/modules\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  \"include\": [</span><br><span class=\"line\">    <span class=\"string\">\"./src/*\"</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  \"exclude\": [</span><br><span class=\"line\">    <span class=\"string\">\"./node_module\"</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>ps: </p>\n</blockquote>\n<p>  app.ts<br>  <figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'lodash'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(_.chunk([<span class=\"number\">12</span>,<span class=\"number\">120</span>,<span class=\"number\">100</span>,<span class=\"number\">101</span>,<span class=\"number\">88</span>],<span class=\"number\">3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> NUM=<span class=\"number\">45</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> Cat&#123;</span><br><span class=\"line\">  name:<span class=\"built_in\">String</span>,</span><br><span class=\"line\">  gender:<span class=\"built_in\">String</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">touchCat</span>(<span class=\"params\">cat:Cat</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'miao~'</span>,cat.name);</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">touchCat(&#123;</span><br><span class=\"line\">  name:<span class=\"string\">\"Tom\"</span>,</span><br><span class=\"line\">  gender:<span class=\"string\">\"male\"</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>  安装声明文件后就可以在编译时出现语法错误提示…</p>\n","site":{"data":{}},"excerpt":"","more":"<h5 id=\"1-安装依赖\"><a href=\"#1-安装依赖\" class=\"headerlink\" title=\"1.安装依赖\"></a>1.安装依赖</h5><pre><code>npm install typescript ts-loader --save-dev\n\nnpm insatll typings -g\ntypings install lodash</code></pre><h5 id=\"2-配置-webpack-config-js\"><a href=\"#2-配置-webpack-config-js\" class=\"headerlink\" title=\"2.配置 webpack.config.js\"></a>2.配置 webpack.config.js</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: <span class=\"string\">'./src/app.ts'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    filename: <span class=\"string\">'[name].bundle.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.tsx?$/</span>,</span><br><span class=\"line\">        use: &#123;</span><br><span class=\"line\">          loader: <span class=\"string\">'ts-loader'</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-配置-tsconfig-json\"><a href=\"#3-配置-tsconfig-json\" class=\"headerlink\" title=\"3. 配置 tsconfig.json\"></a>3. 配置 tsconfig.json</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"compilerOptions\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"module\"</span>: <span class=\"string\">\"commonjs\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"target\"</span>: <span class=\"string\">\"es5\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"allowJs\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    // 添加</span><br><span class=\"line\">    \"typeRoots\": [</span><br><span class=\"line\">      \"./node_modules/@type\",</span><br><span class=\"line\">      <span class=\"string\">\"./typings/modules\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  \"include\": [</span><br><span class=\"line\">    <span class=\"string\">\"./src/*\"</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  \"exclude\": [</span><br><span class=\"line\">    <span class=\"string\">\"./node_module\"</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>ps: </p>\n</blockquote>\n<p>  app.ts<br>  <figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'lodash'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(_.chunk([<span class=\"number\">12</span>,<span class=\"number\">120</span>,<span class=\"number\">100</span>,<span class=\"number\">101</span>,<span class=\"number\">88</span>],<span class=\"number\">3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> NUM=<span class=\"number\">45</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> Cat&#123;</span><br><span class=\"line\">  name:<span class=\"built_in\">String</span>,</span><br><span class=\"line\">  gender:<span class=\"built_in\">String</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">touchCat</span>(<span class=\"params\">cat:Cat</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'miao~'</span>,cat.name);</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">touchCat(&#123;</span><br><span class=\"line\">  name:<span class=\"string\">\"Tom\"</span>,</span><br><span class=\"line\">  gender:<span class=\"string\">\"male\"</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>  安装声明文件后就可以在编译时出现语法错误提示…</p>\n"},{"title":"多Git账户生成多个id_rsa私钥保存路径冲突问题解决办法","date":"2017-12-01T23:54:51.000Z","_content":"\n1.四.1步回车后, 重命名id_rsa为id_rsa_springboot、id_rsa_project1\n\n2.此时/c/Users/wangzaiplus/.ssh/目录下生成文件如下\n      \n    id_rsa_springboot\n    id_rsa_springboot.pub\n    id_rsa_project1\n    id_rsa_project1.pub\n\n3.新建config文件, 注意, 无扩展名, 内容如下\n\n    Host github.com\n        HostName github.com\n        User git\n        IdentityFile ~/.ssh/id_rsa_springboot\n\n    Host gitee.com\n        HostName gitee.com\n        User git\n        IdentityFile ~/.ssh/id_rsa_project1\n\n4.再把对应的公钥添加至对应的网站上面即可, 如GitHub, gitee\n\n5.说明: 未加入配置文件的网站会自动应用/.ssh目录下的id_rsa","source":"_posts/多Git账户生成多个id_rsa私钥保存路径冲突问题解决办法.md","raw":"---\ntitle: 多Git账户生成多个id_rsa私钥保存路径冲突问题解决办法\ndate: 2017-11-31 23:54:51\ntags: \n  - git \n  - github \ncategories: 版本控制\n---\n\n1.四.1步回车后, 重命名id_rsa为id_rsa_springboot、id_rsa_project1\n\n2.此时/c/Users/wangzaiplus/.ssh/目录下生成文件如下\n      \n    id_rsa_springboot\n    id_rsa_springboot.pub\n    id_rsa_project1\n    id_rsa_project1.pub\n\n3.新建config文件, 注意, 无扩展名, 内容如下\n\n    Host github.com\n        HostName github.com\n        User git\n        IdentityFile ~/.ssh/id_rsa_springboot\n\n    Host gitee.com\n        HostName gitee.com\n        User git\n        IdentityFile ~/.ssh/id_rsa_project1\n\n4.再把对应的公钥添加至对应的网站上面即可, 如GitHub, gitee\n\n5.说明: 未加入配置文件的网站会自动应用/.ssh目录下的id_rsa","slug":"多Git账户生成多个id_rsa私钥保存路径冲突问题解决办法","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1scr000p0umwb8ayqt6x","content":"<p>1.四.1步回车后, 重命名id_rsa为id_rsa_springboot、id_rsa_project1</p>\n<p>2.此时/c/Users/wangzaiplus/.ssh/目录下生成文件如下</p>\n<pre><code>id_rsa_springboot\nid_rsa_springboot.pub\nid_rsa_project1\nid_rsa_project1.pub</code></pre><p>3.新建config文件, 注意, 无扩展名, 内容如下</p>\n<pre><code>Host github.com\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/id_rsa_springboot\n\nHost gitee.com\n    HostName gitee.com\n    User git\n    IdentityFile ~/.ssh/id_rsa_project1</code></pre><p>4.再把对应的公钥添加至对应的网站上面即可, 如GitHub, gitee</p>\n<p>5.说明: 未加入配置文件的网站会自动应用/.ssh目录下的id_rsa</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.四.1步回车后, 重命名id_rsa为id_rsa_springboot、id_rsa_project1</p>\n<p>2.此时/c/Users/wangzaiplus/.ssh/目录下生成文件如下</p>\n<pre><code>id_rsa_springboot\nid_rsa_springboot.pub\nid_rsa_project1\nid_rsa_project1.pub</code></pre><p>3.新建config文件, 注意, 无扩展名, 内容如下</p>\n<pre><code>Host github.com\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/id_rsa_springboot\n\nHost gitee.com\n    HostName gitee.com\n    User git\n    IdentityFile ~/.ssh/id_rsa_project1</code></pre><p>4.再把对应的公钥添加至对应的网站上面即可, 如GitHub, gitee</p>\n<p>5.说明: 未加入配置文件的网站会自动应用/.ssh目录下的id_rsa</p>\n"},{"title":"多行文本的垂直居中","date":"2016-11-12T21:50:51.000Z","_content":"html\n```html\n<div class=\"goods\">\n  <div class=\"menu-wrapper\">\n    <ul>\n      <li v-for=\"(food,index) in goods\" :key=\"index\" class=\"menu-item\">\n        <span class=\"text border-1px\">\n          <span v-show=\"food.type>0\" class=\"icon\" :class=\"classMap[food.type]\"></span>\n          {{food.name}}\n        </span>\n      </li>\n    </ul>\n  </div>\n  <div class=\"foods-wrapper\"></div>\n</div>\n```\ncss\n```css\n\n.menu-item\n  display: table\n  .text\n    display: table-cell\n    vertical-align: middle\n```","source":"_posts/多行文本的垂直居中.md","raw":"---\ntitle: 多行文本的垂直居中\ndate: 2016-11-12 21:50:51\ntags: \n  - 布局\n  - table\ncategories: css\n---\nhtml\n```html\n<div class=\"goods\">\n  <div class=\"menu-wrapper\">\n    <ul>\n      <li v-for=\"(food,index) in goods\" :key=\"index\" class=\"menu-item\">\n        <span class=\"text border-1px\">\n          <span v-show=\"food.type>0\" class=\"icon\" :class=\"classMap[food.type]\"></span>\n          {{food.name}}\n        </span>\n      </li>\n    </ul>\n  </div>\n  <div class=\"foods-wrapper\"></div>\n</div>\n```\ncss\n```css\n\n.menu-item\n  display: table\n  .text\n    display: table-cell\n    vertical-align: middle\n```","slug":"多行文本的垂直居中","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1scs000s0umwfbd33hhh","content":"<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"goods\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-wrapper\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(food,index) in goods\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-item\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text border-1px\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"food.type&gt;0\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"classMap[food.type]\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          &#123;&#123;food.name&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"foods-wrapper\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>css</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu-item</span></span><br><span class=\"line\">  <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">table</span></span><br><span class=\"line\">  <span class=\"selector-class\">.text</span></span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">table-cell</span></span><br><span class=\"line\">    <span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">middle</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"goods\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-wrapper\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(food,index) in goods\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu-item\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text border-1px\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"food.type&gt;0\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"classMap[food.type]\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          &#123;&#123;food.name&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"foods-wrapper\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>css</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu-item</span></span><br><span class=\"line\">  <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">table</span></span><br><span class=\"line\">  <span class=\"selector-class\">.text</span></span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">table-cell</span></span><br><span class=\"line\">    <span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">middle</span></span><br></pre></td></tr></table></figure>"},{"title":"移动端1物理像素","date":"2018-05-10T19:54:51.000Z","_content":"\nhtml\n```html\n<ul>\n  <li class=\"food-item border-1px\" v-for=\"(food,index) in good.foods\" :key=\"index\">\n    <div class=\"icon\">\n      <img :src=\"food.icon\" width=\"57\" height=\"57\" alt />\n    </div>\n    <div class=\"content\">\n      <h1 class=\"name\">{{food.name}}</h1>\n      <p class=\"desc\">{{food.description}}</p>\n      <div class=\"extra\">\n        <span class=\"sellCount\">月售{{food.sellCount}}份</span>\n        <span class=\"rating\">好评率{{food.rating}}%</span>\n      </div>\n      <div class=\"price\">\n        <span class=\"now\">￥{{food.price}}</span>\n        <span class=\"old\" v-show=\"food.oldPrice\">￥{{food.oldPrice}}</span>\n      </div>\n    </div>\n  </li>\n</ul>\n```\ncss\n\n1. index.styl\n```css\n@import \"./mixin\"\n@import \"./base\"\n```\n2. base.styl\n```css\nbody, html\n  line-height: 1\n  font-weight: 200\n  font-family: 'PingFang SC', 'STHeitiSC-Light', 'Helvetica-Light', arial, sans-serif\n\n@media (-webkit-min-device-pixel-ratio: 1.5), (min-device-pixel-ratio: 1.5)\n  .border-1px\n    &:after\n      -webkit-transform: scaleY(0.7)\n      transform: scaleY(0.7)\n\n@media (-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2)\n  .border-1px\n    &:after\n      -webkit-transform: scaleY(0.5)\n      transform: scaleY(0.5)\n\n@media (-webkit-min-device-pixel-ratio: 3), (min-device-pixel-ratio: 3)\n  .border-1px\n    &:after\n      -webkit-transform: scaleY(0.333333)\n      transform: scaleY(0.33333333)\n```\n3. mixin.styl\n```css\nborder-1px($color)\n  position: relative\n  // display: block\n  &:after\n    display: block\n    position: absolute\n    left: 0\n    bottom: 0\n    content: ''\n    width: 100%\n    // height: 1px\n    border-top: 1px solid $color\n    // background: $color\nborder-none()\n  &:after\n    display: none\n```\n\n4. 组件内部\n```css\n<style lang=\"stylus\" scoped>\n@import '~common/stylus/mixin'\n.food-item\n  display: flex\n  margin: 18px\n  padding-bottom: 18px\n  border-1px(rgba(7, 17, 27, 0.1))\n\n</style>\n```\n","source":"_posts/移动端1物理像素.md","raw":"---\ntitle: 移动端1物理像素\ndate: 2018-5-10 19:54:51\ntags: \n  - 移动端\n  - 1物理像素\ncategories: css\n---\n\nhtml\n```html\n<ul>\n  <li class=\"food-item border-1px\" v-for=\"(food,index) in good.foods\" :key=\"index\">\n    <div class=\"icon\">\n      <img :src=\"food.icon\" width=\"57\" height=\"57\" alt />\n    </div>\n    <div class=\"content\">\n      <h1 class=\"name\">{{food.name}}</h1>\n      <p class=\"desc\">{{food.description}}</p>\n      <div class=\"extra\">\n        <span class=\"sellCount\">月售{{food.sellCount}}份</span>\n        <span class=\"rating\">好评率{{food.rating}}%</span>\n      </div>\n      <div class=\"price\">\n        <span class=\"now\">￥{{food.price}}</span>\n        <span class=\"old\" v-show=\"food.oldPrice\">￥{{food.oldPrice}}</span>\n      </div>\n    </div>\n  </li>\n</ul>\n```\ncss\n\n1. index.styl\n```css\n@import \"./mixin\"\n@import \"./base\"\n```\n2. base.styl\n```css\nbody, html\n  line-height: 1\n  font-weight: 200\n  font-family: 'PingFang SC', 'STHeitiSC-Light', 'Helvetica-Light', arial, sans-serif\n\n@media (-webkit-min-device-pixel-ratio: 1.5), (min-device-pixel-ratio: 1.5)\n  .border-1px\n    &:after\n      -webkit-transform: scaleY(0.7)\n      transform: scaleY(0.7)\n\n@media (-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2)\n  .border-1px\n    &:after\n      -webkit-transform: scaleY(0.5)\n      transform: scaleY(0.5)\n\n@media (-webkit-min-device-pixel-ratio: 3), (min-device-pixel-ratio: 3)\n  .border-1px\n    &:after\n      -webkit-transform: scaleY(0.333333)\n      transform: scaleY(0.33333333)\n```\n3. mixin.styl\n```css\nborder-1px($color)\n  position: relative\n  // display: block\n  &:after\n    display: block\n    position: absolute\n    left: 0\n    bottom: 0\n    content: ''\n    width: 100%\n    // height: 1px\n    border-top: 1px solid $color\n    // background: $color\nborder-none()\n  &:after\n    display: none\n```\n\n4. 组件内部\n```css\n<style lang=\"stylus\" scoped>\n@import '~common/stylus/mixin'\n.food-item\n  display: flex\n  margin: 18px\n  padding-bottom: 18px\n  border-1px(rgba(7, 17, 27, 0.1))\n\n</style>\n```\n","slug":"移动端1物理像素","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1scu000x0umwowwhzi89","content":"<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"food-item border-1px\"</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(food,index) in good.foods\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">\"food.icon\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"57\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"57\"</span> <span class=\"attr\">alt</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"name\"</span>&gt;</span>&#123;&#123;food.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"desc\"</span>&gt;</span>&#123;&#123;food.description&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"extra\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sellCount\"</span>&gt;</span>月售&#123;&#123;food.sellCount&#125;&#125;份<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"rating\"</span>&gt;</span>好评率&#123;&#123;food.rating&#125;&#125;%<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"price\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"now\"</span>&gt;</span>￥&#123;&#123;food.price&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"old\"</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"food.oldPrice\"</span>&gt;</span>￥&#123;&#123;food.oldPrice&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>css</p>\n<ol>\n<li><p>index.styl</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">import</span> <span class=\"string\">\"./mixin\"</span></span><br><span class=\"line\">@import <span class=\"string\">\"./base\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>base.styl</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>, <span class=\"selector-tag\">html</span></span><br><span class=\"line\">  <span class=\"selector-tag\">line-height</span>: 1</span><br><span class=\"line\">  <span class=\"selector-tag\">font-weight</span>: 200</span><br><span class=\"line\">  font-family: 'PingFang SC', 'STHeitiSC-Light', 'Helvetica-Light', arial, sans-serif</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">media</span> (-webkit-min-device-pixel-ratio: <span class=\"number\">1.5</span>), (min-device-pixel-ratio: <span class=\"number\">1.5</span>)</span><br><span class=\"line\">  .border-<span class=\"number\">1px</span></span><br><span class=\"line\">    &amp;:after</span><br><span class=\"line\">      -webkit-transform: scaleY(<span class=\"number\">0.7</span>)</span><br><span class=\"line\">      transform: scaleY(<span class=\"number\">0.7</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">@media (-webkit-min-device-pixel-ratio: <span class=\"number\">2</span>), (min-device-pixel-ratio: <span class=\"number\">2</span>)</span><br><span class=\"line\">  .border-<span class=\"number\">1px</span></span><br><span class=\"line\">    &amp;:after</span><br><span class=\"line\">      -webkit-transform: scaleY(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">      transform: scaleY(<span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">@media (-webkit-min-device-pixel-ratio: <span class=\"number\">3</span>), (min-device-pixel-ratio: <span class=\"number\">3</span>)</span><br><span class=\"line\">  .border-<span class=\"number\">1px</span></span><br><span class=\"line\">    &amp;:after</span><br><span class=\"line\">      -webkit-transform: scaleY(<span class=\"number\">0.333333</span>)</span><br><span class=\"line\">      transform: scaleY(<span class=\"number\">0.33333333</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>mixin.styl</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">border-1px($color)</span><br><span class=\"line\">  <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">relative</span></span><br><span class=\"line\">  // display: block</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:after</span></span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span></span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span></span><br><span class=\"line\">    <span class=\"selector-tag\">left</span>: 0</span><br><span class=\"line\">    <span class=\"selector-tag\">bottom</span>: 0</span><br><span class=\"line\">    content: ''</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100%</span><br><span class=\"line\">    // height: 1px</span><br><span class=\"line\">    border-top: 1px solid $color</span><br><span class=\"line\">    // background: $color</span><br><span class=\"line\"><span class=\"selector-tag\">border-none</span>()</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:after</span></span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">none</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>组件内部</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=\"stylus\" scoped&gt;</span><br><span class=\"line\">@<span class=\"keyword\">import</span> <span class=\"string\">'~common/stylus/mixin'</span></span><br><span class=\"line\">.food-item</span><br><span class=\"line\">  display: flex</span><br><span class=\"line\">  margin: <span class=\"number\">18px</span></span><br><span class=\"line\">  padding-bottom: <span class=\"number\">18px</span></span><br><span class=\"line\">  border-<span class=\"number\">1px</span>(rgba(<span class=\"number\">7</span>, <span class=\"number\">17</span>, <span class=\"number\">27</span>, <span class=\"number\">0.1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"food-item border-1px\"</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(food,index) in good.foods\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">\"food.icon\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"57\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"57\"</span> <span class=\"attr\">alt</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"name\"</span>&gt;</span>&#123;&#123;food.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"desc\"</span>&gt;</span>&#123;&#123;food.description&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"extra\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sellCount\"</span>&gt;</span>月售&#123;&#123;food.sellCount&#125;&#125;份<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"rating\"</span>&gt;</span>好评率&#123;&#123;food.rating&#125;&#125;%<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"price\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"now\"</span>&gt;</span>￥&#123;&#123;food.price&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"old\"</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"food.oldPrice\"</span>&gt;</span>￥&#123;&#123;food.oldPrice&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>css</p>\n<ol>\n<li><p>index.styl</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">import</span> <span class=\"string\">\"./mixin\"</span></span><br><span class=\"line\">@import <span class=\"string\">\"./base\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>base.styl</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>, <span class=\"selector-tag\">html</span></span><br><span class=\"line\">  <span class=\"selector-tag\">line-height</span>: 1</span><br><span class=\"line\">  <span class=\"selector-tag\">font-weight</span>: 200</span><br><span class=\"line\">  font-family: 'PingFang SC', 'STHeitiSC-Light', 'Helvetica-Light', arial, sans-serif</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">media</span> (-webkit-min-device-pixel-ratio: <span class=\"number\">1.5</span>), (min-device-pixel-ratio: <span class=\"number\">1.5</span>)</span><br><span class=\"line\">  .border-<span class=\"number\">1px</span></span><br><span class=\"line\">    &amp;:after</span><br><span class=\"line\">      -webkit-transform: scaleY(<span class=\"number\">0.7</span>)</span><br><span class=\"line\">      transform: scaleY(<span class=\"number\">0.7</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">@media (-webkit-min-device-pixel-ratio: <span class=\"number\">2</span>), (min-device-pixel-ratio: <span class=\"number\">2</span>)</span><br><span class=\"line\">  .border-<span class=\"number\">1px</span></span><br><span class=\"line\">    &amp;:after</span><br><span class=\"line\">      -webkit-transform: scaleY(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">      transform: scaleY(<span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">@media (-webkit-min-device-pixel-ratio: <span class=\"number\">3</span>), (min-device-pixel-ratio: <span class=\"number\">3</span>)</span><br><span class=\"line\">  .border-<span class=\"number\">1px</span></span><br><span class=\"line\">    &amp;:after</span><br><span class=\"line\">      -webkit-transform: scaleY(<span class=\"number\">0.333333</span>)</span><br><span class=\"line\">      transform: scaleY(<span class=\"number\">0.33333333</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>mixin.styl</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">border-1px($color)</span><br><span class=\"line\">  <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">relative</span></span><br><span class=\"line\">  // display: block</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:after</span></span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span></span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span></span><br><span class=\"line\">    <span class=\"selector-tag\">left</span>: 0</span><br><span class=\"line\">    <span class=\"selector-tag\">bottom</span>: 0</span><br><span class=\"line\">    content: ''</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100%</span><br><span class=\"line\">    // height: 1px</span><br><span class=\"line\">    border-top: 1px solid $color</span><br><span class=\"line\">    // background: $color</span><br><span class=\"line\"><span class=\"selector-tag\">border-none</span>()</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:after</span></span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">none</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>组件内部</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=\"stylus\" scoped&gt;</span><br><span class=\"line\">@<span class=\"keyword\">import</span> <span class=\"string\">'~common/stylus/mixin'</span></span><br><span class=\"line\">.food-item</span><br><span class=\"line\">  display: flex</span><br><span class=\"line\">  margin: <span class=\"number\">18px</span></span><br><span class=\"line\">  padding-bottom: <span class=\"number\">18px</span></span><br><span class=\"line\">  border-<span class=\"number\">1px</span>(rgba(<span class=\"number\">7</span>, <span class=\"number\">17</span>, <span class=\"number\">27</span>, <span class=\"number\">0.1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n"},{"title":"行内元素的对齐","date":"2018-01-10T09:54:51.000Z","_content":"\nhtml\n\n```html\n\n      <template>\n        <div class=\"cartcontrol\">\n          <span class=\"decreate icon-remove_circle_outline\"></span>\n          <span class=\"num\">10</span>\n          <span class=\"create icon-add_circle\"></span>\n        </div>\n      </template>\n```\n\ncss\n\n```css\n<style lang=\"stylus\" scoped>\n.cartcontrol\n  .decreate, .create\n    font-size: 24px\n    color: rgb(0, 160, 220)\n    line-height: 24px\n  .num\n    display: inline-block\n    vertical-align: top\n    line-height: 24px\n    font-size: 10px\n    width: 24px\n    color: rgb(147, 153, 159)\n    text-align: center\n</style>\n```","source":"_posts/行内元素的对齐.md","raw":"---\ntitle: 行内元素的对齐\ndate: 2018-1-10 9:54:51\ntags: \n  - 对齐\n  - inline-block\ncategories: css\n---\n\nhtml\n\n```html\n\n      <template>\n        <div class=\"cartcontrol\">\n          <span class=\"decreate icon-remove_circle_outline\"></span>\n          <span class=\"num\">10</span>\n          <span class=\"create icon-add_circle\"></span>\n        </div>\n      </template>\n```\n\ncss\n\n```css\n<style lang=\"stylus\" scoped>\n.cartcontrol\n  .decreate, .create\n    font-size: 24px\n    color: rgb(0, 160, 220)\n    line-height: 24px\n  .num\n    display: inline-block\n    vertical-align: top\n    line-height: 24px\n    font-size: 10px\n    width: 24px\n    color: rgb(147, 153, 159)\n    text-align: center\n</style>\n```","slug":"行内元素的对齐","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1scv00100umwb1561979","content":"<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"cartcontrol\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"decreate icon-remove_circle_outline\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"num\"</span>&gt;</span>10<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"create icon-add_circle\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>css</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=\"stylus\" scoped&gt;</span><br><span class=\"line\"><span class=\"selector-class\">.cartcontrol</span></span><br><span class=\"line\">  <span class=\"selector-class\">.decreate</span>, <span class=\"selector-class\">.create</span></span><br><span class=\"line\">    <span class=\"selector-tag\">font-size</span>: 24<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-tag\">rgb</span>(0, 160, 220)</span><br><span class=\"line\">    <span class=\"selector-tag\">line-height</span>: 24<span class=\"selector-tag\">px</span></span><br><span class=\"line\">  <span class=\"selector-class\">.num</span></span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">inline-block</span></span><br><span class=\"line\">    <span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">top</span></span><br><span class=\"line\">    <span class=\"selector-tag\">line-height</span>: 24<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">font-size</span>: 10<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 24<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-tag\">rgb</span>(147, 153, 159)</span><br><span class=\"line\">    <span class=\"selector-tag\">text-align</span>: <span class=\"selector-tag\">center</span></span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"cartcontrol\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"decreate icon-remove_circle_outline\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"num\"</span>&gt;</span>10<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"create icon-add_circle\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>css</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=\"stylus\" scoped&gt;</span><br><span class=\"line\"><span class=\"selector-class\">.cartcontrol</span></span><br><span class=\"line\">  <span class=\"selector-class\">.decreate</span>, <span class=\"selector-class\">.create</span></span><br><span class=\"line\">    <span class=\"selector-tag\">font-size</span>: 24<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-tag\">rgb</span>(0, 160, 220)</span><br><span class=\"line\">    <span class=\"selector-tag\">line-height</span>: 24<span class=\"selector-tag\">px</span></span><br><span class=\"line\">  <span class=\"selector-class\">.num</span></span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">inline-block</span></span><br><span class=\"line\">    <span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">top</span></span><br><span class=\"line\">    <span class=\"selector-tag\">line-height</span>: 24<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">font-size</span>: 10<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 24<span class=\"selector-tag\">px</span></span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-tag\">rgb</span>(147, 153, 159)</span><br><span class=\"line\">    <span class=\"selector-tag\">text-align</span>: <span class=\"selector-tag\">center</span></span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>"},{"title":"谷歌浏览器开发调试工具之 Coverage","date":"2018-06-10T01:54:51.000Z","_content":">Coverage 是chrome开发者工具的一个新功能，从字面意思上可以知道它是可以用来检测代码在网站运行时有哪些js和css是已经在运行，而哪些js和css是还没有用到的，如图，这是打开网页时，所显示的已运行和尚未运行的代码情况。\n\n![pic1](/images/1.png)\n\n如何打开caverage \n\n前提：chrome浏览器的版本必须是59或以上;\n\n在ctrl+shift+i快速打开devtools，点击右上角的... More tools 有个Coverage。\n\n功能\n\n如上图所示，最右边显示的是我们加载的css和js文件数量，红色区域表示已运行的代码，而青色表示已加载但未运行的代码。可用来发现页面中尚未用到的js 和 css代码，你可以为用户只提供必要的代码，这样就可以提升页面的性能。这对于找出可以进行拆分的脚本以及延迟加载非关键脚本来说非常有用。\n","source":"_posts/谷歌浏览器开发调试工具之 Coverage.md","raw":"---\ntitle: 谷歌浏览器开发调试工具之 Coverage\ndate: 2018-6-10 1:54:51\ntags: \n  - chrome\n  - 调试\n  - 性能优化\ncategories: 性能优化\n---\n>Coverage 是chrome开发者工具的一个新功能，从字面意思上可以知道它是可以用来检测代码在网站运行时有哪些js和css是已经在运行，而哪些js和css是还没有用到的，如图，这是打开网页时，所显示的已运行和尚未运行的代码情况。\n\n![pic1](/images/1.png)\n\n如何打开caverage \n\n前提：chrome浏览器的版本必须是59或以上;\n\n在ctrl+shift+i快速打开devtools，点击右上角的... More tools 有个Coverage。\n\n功能\n\n如上图所示，最右边显示的是我们加载的css和js文件数量，红色区域表示已运行的代码，而青色表示已加载但未运行的代码。可用来发现页面中尚未用到的js 和 css代码，你可以为用户只提供必要的代码，这样就可以提升页面的性能。这对于找出可以进行拆分的脚本以及延迟加载非关键脚本来说非常有用。\n","slug":"谷歌浏览器开发调试工具之 Coverage","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1scx00140umwchvpqbjl","content":"<blockquote>\n<p>Coverage 是chrome开发者工具的一个新功能，从字面意思上可以知道它是可以用来检测代码在网站运行时有哪些js和css是已经在运行，而哪些js和css是还没有用到的，如图，这是打开网页时，所显示的已运行和尚未运行的代码情况。</p>\n</blockquote>\n<p><img src=\"/images/1.png\" alt=\"pic1\"></p>\n<p>如何打开caverage </p>\n<p>前提：chrome浏览器的版本必须是59或以上;</p>\n<p>在ctrl+shift+i快速打开devtools，点击右上角的… More tools 有个Coverage。</p>\n<p>功能</p>\n<p>如上图所示，最右边显示的是我们加载的css和js文件数量，红色区域表示已运行的代码，而青色表示已加载但未运行的代码。可用来发现页面中尚未用到的js 和 css代码，你可以为用户只提供必要的代码，这样就可以提升页面的性能。这对于找出可以进行拆分的脚本以及延迟加载非关键脚本来说非常有用。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Coverage 是chrome开发者工具的一个新功能，从字面意思上可以知道它是可以用来检测代码在网站运行时有哪些js和css是已经在运行，而哪些js和css是还没有用到的，如图，这是打开网页时，所显示的已运行和尚未运行的代码情况。</p>\n</blockquote>\n<p><img src=\"/images/1.png\" alt=\"pic1\"></p>\n<p>如何打开caverage </p>\n<p>前提：chrome浏览器的版本必须是59或以上;</p>\n<p>在ctrl+shift+i快速打开devtools，点击右上角的… More tools 有个Coverage。</p>\n<p>功能</p>\n<p>如上图所示，最右边显示的是我们加载的css和js文件数量，红色区域表示已运行的代码，而青色表示已加载但未运行的代码。可用来发现页面中尚未用到的js 和 css代码，你可以为用户只提供必要的代码，这样就可以提升页面的性能。这对于找出可以进行拆分的脚本以及延迟加载非关键脚本来说非常有用。</p>\n"},{"title":"webpack 、manifest 、runtime 、缓存与CommonsChunkPlugin","date":"2018-08-11T12:54:51.000Z","_content":">通常我们的项目包含三种类型的代码：业务代码、第三方依赖库、webpack打包构建后的manifest。官网经常会看到mainfest这个词，但是它究竟指什么，我们来做个实验找答案吧：（ps：文章把manifest打成mainfest了）\n\n    1 mkdir  webpack_mainfest   //在当前目录下，创建项目目录 webpack_mainfest\n    2 npm init\n    3 npm install webpack\n    2 cd  webpack_mainfest  // 进入项目目录\n    3 touch main.js   // 创建入口文件\n    5 touch wepack.config.js  //创建webpack 配置文件\n\nwebpack.config.js\n```js\nconst path = require('path');\n\n  module.exports = {\n    entry: './main.js',\n    output: {\n     filename: 'bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    }\n  }\n```\nmain.js\n```js\nconsole.info('入口文件也是一个模块')\n```\n\n然后，我们就直接打包： webpack --config webpack.config.js\n    \n![pic1](/images/7155532-15ee04aa5b6e6ad4.webp)\n\n可以看出，打包是只是引入一个模块\n我们看一下打包之后生成bundle.js的内容：\n```js\n/******/ (function(modules) { // webpackBootstrap\n/******/    // The module cache\n/******/    var installedModules = {};\n/******/\n/******/    // The require function\n/******/    function __webpack_require__(moduleId) {\n/******/\n/******/        // Check if module is in cache\n/******/        if(installedModules[moduleId]) {\n/******/            return installedModules[moduleId].exports;\n/******/        }\n/******/        // Create a new module (and put it into the cache)\n/******/        var module = installedModules[moduleId] = {\n/******/            i: moduleId,\n/******/            l: false,\n/******/            exports: {}\n/******/        };\n/******/\n/******/        // Execute the module function\n/******/        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/        // Flag the module as loaded\n/******/        module.l = true;\n/******/\n/******/        // Return the exports of the module\n/******/        return module.exports;\n/******/    }\n/******/\n/******/\n/******/    // expose the modules object (__webpack_modules__)\n/******/    __webpack_require__.m = modules;\n/******/\n/******/    // expose the module cache\n/******/    __webpack_require__.c = installedModules;\n/******/\n/******/    // define getter function for harmony exports\n/******/    __webpack_require__.d = function(exports, name, getter) {\n/******/        if(!__webpack_require__.o(exports, name)) {\n/******/            Object.defineProperty(exports, name, {\n/******/                configurable: false,\n/******/                enumerable: true,\n/******/                get: getter\n/******/            });\n/******/        }\n/******/    };\n/******/\n/******/    // getDefaultExport function for compatibility with non-harmony modules\n/******/    __webpack_require__.n = function(module) {\n/******/        var getter = module && module.__esModule ?\n/******/            function getDefault() { return module['default']; } :\n/******/            function getModuleExports() { return module; };\n/******/        __webpack_require__.d(getter, 'a', getter);\n/******/        return getter;\n/******/    };\n/******/\n/******/    // Object.prototype.hasOwnProperty.call\n/******/    __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/    // __webpack_public_path__\n/******/    __webpack_require__.p = \"\";\n/******/\n/******/    // Load entry module and return exports\n/******/    return __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nconsole.info('入口文件也是一个模块')\n\n/***/ })\n/******/ ]);\n\n```\n\n我们只是引入一个main.js模块，但是实际生成的bundle.js确实非常多。\n前面的一大堆就是mainfest，准确来说是，runtime代码。官网的描述是这样的：\n\n![pic2](/images/7155532-22227abebcbe552a.webp)\n\n>其实这里，webpack帮我们定义了一个webpack_require的加载模块的方法，而mainfest模块数据集合就是对应着bundle.js第三行的 installedModules 。每当我们在main.js入口文件引入一模块，installModules就会发生变化，当我们页面点击跳转，加载对应模块就是通过__webpack_require__方法在installModules中找对应模块信息，进行加载。\n\n\n那这个跟缓存有什么关系呢？\n\n    1、我们知道浏览器加载js文件，如果文件名是一致的会优先从本地缓存拿，如果没有才向服务器这边请求。这个是时候，我们可以知道，如果是业务代码，比如我优化了一个功能，更改了个bug，如果文件名没有变化，请求时，浏览器用了缓存数据，则我们的新代码没被用上，因为浏览器用了旧代码文件。所以，output的选项中的filename，就不在是bundle.js ,而对应着bungdle[chunkhash].js，因为每次打包时，chunkhash都不同，所以打出来的文件名居不同，浏览器就不会直接用缓存数据了，而是请求新文件\n\n    2、实际上，我们发现只有我们业务代码经常变化，而第三方依赖库是很少变化的，比如你使用了vue、vue-router、或者react等第三方库，这些是不会变化，那我们希望浏览器如果有的话，就不用再请求。但是，我们打包都整合到一个bundle[chunkhash].js上了，所以，我们需要借助webpack.optimize.CommonsChunkPlugin来帮我们分离代码，将mainfest、第三方库包，业务代码独立成三个文件\n```js\n// 抽出第三方库，命名vendor，不需要加chunkhash，因为他很少变化\n// minChunk 判断哪些模块可以抽出来合并成ventor，这里只要是从node_module出来就抽\n// 注意一定要放在mainfest的前面\nnew webpack.optimize.CommonsChunkPlugin({\n      name: 'vendor',\n      minChunks: function (module, count) {\n        // any required modules inside node_modules are extracted to vendor\n        return (\n          module.resource &&\n          /\\.js$/.test(module.resource) &&\n          module.resource.indexOf(\n            path.join(__dirname, '../node_modules')\n          ) === 0\n        )\n      }\n    }),\n// 抽出mainfest\nnew webpack.optimize.CommonsChunkPlugin({\n      name: 'manifest',\n      chunks: ['vendor']\n })\n\n ```\n\n 而我们的业务代码是配置在output选项的，这样就会生成bundle[chunkhash].js 、vendor.js、mainfest.js,三个文件。\n我们来试一下：\n```js\nnpm install vue   //第三方库\n// 同时main.js，改成\nconsole.info('入口文件也是一个模块')\nvar vue = require('vue')\n```\n\n然后webpack.config.js 按上面加入两个插件\n```js\nconst path = require('path');\n  const webpack = require('webpack');\n\n  module.exports = {\n    entry: './main.js',\n    output: {\n     filename: 'bundle[chunkhash].js',\n      path: path.resolve(__dirname, 'dist')\n    },\n    resolve: {\n        alias: {\n          'vue$': 'vue/dist/vue.esm.js',\n        }\n      },\n    plugins: [\n        // 抽出第三方库，命名vendor，不需要加chunkhash，因为他很少变化\n        // minChunk 判断哪些模块可以抽出来合并成ventor，这里只要是从node_module出来就抽\n        // 注意一定要放在mainfest的前面\n        new webpack.optimize.CommonsChunkPlugin({\n              name: 'vendor',\n              filename: \"vendor.js\",\n              minChunks: function (module, count) {\n                // any required modules inside node_modules are extracted to vendor\n                return (\n                  module.resource &&\n                  /\\.js$/.test(module.resource) &&\n                  module.resource.indexOf(\n                    path.join(__dirname, '/node_modules')\n                  ) === 0\n                )\n              }\n            }),\n        // 抽出mainfest\n        new webpack.optimize.CommonsChunkPlugin({\n              name: 'manifest',\n              filename: 'manifest.js'\n         })\n    ]\n  }\n```\n\n执行 webpack --config webpack.congfig.js, 生成三个对应文件。这样来说，ventor一样的，然后浏览如果是第二次请求，会走缓存路线，不必再次加载。而bundle[chunkhash].js也就是我们的业务代码，可以避免缓存的影响\n\n![pic3](/images/7155532-c0fbf87fba32551c.webp)\n\n实际上，mainfest也会发生变化，它的变化在于你是否增加了模块，比如新引入一个js文件之类，mainfest也会变化。明白了mainfest，我们就可以更好的处理我们的缓存机制了.\n","source":"_posts/webpack 、manifest 、runtime 、缓存与CommonsChunkPlugin.md","raw":"---\ntitle: webpack 、manifest 、runtime 、缓存与CommonsChunkPlugin\ndate: 2018-8-11 12:54:51\ntags: \n  - 打包\n  - 构建\ncategories: webpack\n---\n>通常我们的项目包含三种类型的代码：业务代码、第三方依赖库、webpack打包构建后的manifest。官网经常会看到mainfest这个词，但是它究竟指什么，我们来做个实验找答案吧：（ps：文章把manifest打成mainfest了）\n\n    1 mkdir  webpack_mainfest   //在当前目录下，创建项目目录 webpack_mainfest\n    2 npm init\n    3 npm install webpack\n    2 cd  webpack_mainfest  // 进入项目目录\n    3 touch main.js   // 创建入口文件\n    5 touch wepack.config.js  //创建webpack 配置文件\n\nwebpack.config.js\n```js\nconst path = require('path');\n\n  module.exports = {\n    entry: './main.js',\n    output: {\n     filename: 'bundle.js',\n      path: path.resolve(__dirname, 'dist')\n    }\n  }\n```\nmain.js\n```js\nconsole.info('入口文件也是一个模块')\n```\n\n然后，我们就直接打包： webpack --config webpack.config.js\n    \n![pic1](/images/7155532-15ee04aa5b6e6ad4.webp)\n\n可以看出，打包是只是引入一个模块\n我们看一下打包之后生成bundle.js的内容：\n```js\n/******/ (function(modules) { // webpackBootstrap\n/******/    // The module cache\n/******/    var installedModules = {};\n/******/\n/******/    // The require function\n/******/    function __webpack_require__(moduleId) {\n/******/\n/******/        // Check if module is in cache\n/******/        if(installedModules[moduleId]) {\n/******/            return installedModules[moduleId].exports;\n/******/        }\n/******/        // Create a new module (and put it into the cache)\n/******/        var module = installedModules[moduleId] = {\n/******/            i: moduleId,\n/******/            l: false,\n/******/            exports: {}\n/******/        };\n/******/\n/******/        // Execute the module function\n/******/        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/        // Flag the module as loaded\n/******/        module.l = true;\n/******/\n/******/        // Return the exports of the module\n/******/        return module.exports;\n/******/    }\n/******/\n/******/\n/******/    // expose the modules object (__webpack_modules__)\n/******/    __webpack_require__.m = modules;\n/******/\n/******/    // expose the module cache\n/******/    __webpack_require__.c = installedModules;\n/******/\n/******/    // define getter function for harmony exports\n/******/    __webpack_require__.d = function(exports, name, getter) {\n/******/        if(!__webpack_require__.o(exports, name)) {\n/******/            Object.defineProperty(exports, name, {\n/******/                configurable: false,\n/******/                enumerable: true,\n/******/                get: getter\n/******/            });\n/******/        }\n/******/    };\n/******/\n/******/    // getDefaultExport function for compatibility with non-harmony modules\n/******/    __webpack_require__.n = function(module) {\n/******/        var getter = module && module.__esModule ?\n/******/            function getDefault() { return module['default']; } :\n/******/            function getModuleExports() { return module; };\n/******/        __webpack_require__.d(getter, 'a', getter);\n/******/        return getter;\n/******/    };\n/******/\n/******/    // Object.prototype.hasOwnProperty.call\n/******/    __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/    // __webpack_public_path__\n/******/    __webpack_require__.p = \"\";\n/******/\n/******/    // Load entry module and return exports\n/******/    return __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nconsole.info('入口文件也是一个模块')\n\n/***/ })\n/******/ ]);\n\n```\n\n我们只是引入一个main.js模块，但是实际生成的bundle.js确实非常多。\n前面的一大堆就是mainfest，准确来说是，runtime代码。官网的描述是这样的：\n\n![pic2](/images/7155532-22227abebcbe552a.webp)\n\n>其实这里，webpack帮我们定义了一个webpack_require的加载模块的方法，而mainfest模块数据集合就是对应着bundle.js第三行的 installedModules 。每当我们在main.js入口文件引入一模块，installModules就会发生变化，当我们页面点击跳转，加载对应模块就是通过__webpack_require__方法在installModules中找对应模块信息，进行加载。\n\n\n那这个跟缓存有什么关系呢？\n\n    1、我们知道浏览器加载js文件，如果文件名是一致的会优先从本地缓存拿，如果没有才向服务器这边请求。这个是时候，我们可以知道，如果是业务代码，比如我优化了一个功能，更改了个bug，如果文件名没有变化，请求时，浏览器用了缓存数据，则我们的新代码没被用上，因为浏览器用了旧代码文件。所以，output的选项中的filename，就不在是bundle.js ,而对应着bungdle[chunkhash].js，因为每次打包时，chunkhash都不同，所以打出来的文件名居不同，浏览器就不会直接用缓存数据了，而是请求新文件\n\n    2、实际上，我们发现只有我们业务代码经常变化，而第三方依赖库是很少变化的，比如你使用了vue、vue-router、或者react等第三方库，这些是不会变化，那我们希望浏览器如果有的话，就不用再请求。但是，我们打包都整合到一个bundle[chunkhash].js上了，所以，我们需要借助webpack.optimize.CommonsChunkPlugin来帮我们分离代码，将mainfest、第三方库包，业务代码独立成三个文件\n```js\n// 抽出第三方库，命名vendor，不需要加chunkhash，因为他很少变化\n// minChunk 判断哪些模块可以抽出来合并成ventor，这里只要是从node_module出来就抽\n// 注意一定要放在mainfest的前面\nnew webpack.optimize.CommonsChunkPlugin({\n      name: 'vendor',\n      minChunks: function (module, count) {\n        // any required modules inside node_modules are extracted to vendor\n        return (\n          module.resource &&\n          /\\.js$/.test(module.resource) &&\n          module.resource.indexOf(\n            path.join(__dirname, '../node_modules')\n          ) === 0\n        )\n      }\n    }),\n// 抽出mainfest\nnew webpack.optimize.CommonsChunkPlugin({\n      name: 'manifest',\n      chunks: ['vendor']\n })\n\n ```\n\n 而我们的业务代码是配置在output选项的，这样就会生成bundle[chunkhash].js 、vendor.js、mainfest.js,三个文件。\n我们来试一下：\n```js\nnpm install vue   //第三方库\n// 同时main.js，改成\nconsole.info('入口文件也是一个模块')\nvar vue = require('vue')\n```\n\n然后webpack.config.js 按上面加入两个插件\n```js\nconst path = require('path');\n  const webpack = require('webpack');\n\n  module.exports = {\n    entry: './main.js',\n    output: {\n     filename: 'bundle[chunkhash].js',\n      path: path.resolve(__dirname, 'dist')\n    },\n    resolve: {\n        alias: {\n          'vue$': 'vue/dist/vue.esm.js',\n        }\n      },\n    plugins: [\n        // 抽出第三方库，命名vendor，不需要加chunkhash，因为他很少变化\n        // minChunk 判断哪些模块可以抽出来合并成ventor，这里只要是从node_module出来就抽\n        // 注意一定要放在mainfest的前面\n        new webpack.optimize.CommonsChunkPlugin({\n              name: 'vendor',\n              filename: \"vendor.js\",\n              minChunks: function (module, count) {\n                // any required modules inside node_modules are extracted to vendor\n                return (\n                  module.resource &&\n                  /\\.js$/.test(module.resource) &&\n                  module.resource.indexOf(\n                    path.join(__dirname, '/node_modules')\n                  ) === 0\n                )\n              }\n            }),\n        // 抽出mainfest\n        new webpack.optimize.CommonsChunkPlugin({\n              name: 'manifest',\n              filename: 'manifest.js'\n         })\n    ]\n  }\n```\n\n执行 webpack --config webpack.congfig.js, 生成三个对应文件。这样来说，ventor一样的，然后浏览如果是第二次请求，会走缓存路线，不必再次加载。而bundle[chunkhash].js也就是我们的业务代码，可以避免缓存的影响\n\n![pic3](/images/7155532-c0fbf87fba32551c.webp)\n\n实际上，mainfest也会发生变化，它的变化在于你是否增加了模块，比如新引入一个js文件之类，mainfest也会变化。明白了mainfest，我们就可以更好的处理我们的缓存机制了.\n","slug":"webpack 、manifest 、runtime 、缓存与CommonsChunkPlugin","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1sei002m0umwzonrk5xg","content":"<blockquote>\n<p>通常我们的项目包含三种类型的代码：业务代码、第三方依赖库、webpack打包构建后的manifest。官网经常会看到mainfest这个词，但是它究竟指什么，我们来做个实验找答案吧：（ps：文章把manifest打成mainfest了）</p>\n</blockquote>\n<pre><code>1 mkdir  webpack_mainfest   //在当前目录下，创建项目目录 webpack_mainfest\n2 npm init\n3 npm install webpack\n2 cd  webpack_mainfest  // 进入项目目录\n3 touch main.js   // 创建入口文件\n5 touch wepack.config.js  //创建webpack 配置文件</code></pre><p>webpack.config.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    entry: <span class=\"string\">'./main.js'</span>,</span><br><span class=\"line\">    output: &#123;</span><br><span class=\"line\">     filename: <span class=\"string\">'bundle.js'</span>,</span><br><span class=\"line\">      path: path.resolve(__dirname, <span class=\"string\">'dist'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>main.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.info(<span class=\"string\">'入口文件也是一个模块'</span>)</span><br></pre></td></tr></table></figure>\n\n<p>然后，我们就直接打包： webpack –config webpack.config.js</p>\n<p><img src=\"/images/7155532-15ee04aa5b6e6ad4.webp\" alt=\"pic1\"></p>\n<p>可以看出，打包是只是引入一个模块<br>我们看一下打包之后生成bundle.js的内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/******/</span> (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">modules</span>) </span>&#123; <span class=\"comment\">// webpackBootstrap</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// The module cache</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"keyword\">var</span> installedModules = &#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// The require function</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__webpack_require__</span>(<span class=\"params\">moduleId</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"comment\">// Check if module is in cache</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"keyword\">if</span>(installedModules[moduleId]) &#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            <span class=\"keyword\">return</span> installedModules[moduleId].exports;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        &#125;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"comment\">// Create a new module (and put it into the cache)</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"keyword\">var</span> <span class=\"built_in\">module</span> = installedModules[moduleId] = &#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            i: moduleId,</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            l: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            exports: &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        &#125;;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"comment\">// Execute the module function</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        modules[moduleId].call(<span class=\"built_in\">module</span>.exports, <span class=\"built_in\">module</span>, <span class=\"built_in\">module</span>.exports, __webpack_require__);</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"comment\">// Flag the module as loaded</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"built_in\">module</span>.l = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"comment\">// Return the exports of the module</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"keyword\">return</span> <span class=\"built_in\">module</span>.exports;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>    &#125;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// expose the modules object (__webpack_modules__)</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    __webpack_require__.m = modules;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// expose the module cache</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    __webpack_require__.c = installedModules;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// define getter function for harmony exports</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    __webpack_require__.d = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">exports, name, getter</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"keyword\">if</span>(!__webpack_require__.o(exports, name)) &#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            <span class=\"built_in\">Object</span>.defineProperty(exports, name, &#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>                configurable: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"comment\">/******/</span>                enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"comment\">/******/</span>                <span class=\"keyword\">get</span>: getter</span><br><span class=\"line\">/******/            &#125;);</span><br><span class=\"line\">/******/        &#125;</span><br><span class=\"line\">/******/    &#125;;</span><br><span class=\"line\">/******/</span><br><span class=\"line\">/******/    // getDefaultExport function for compatibility with non-harmony modules</span><br><span class=\"line\">/******/    __webpack_require__.n = function(module) &#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"keyword\">var</span> getter = <span class=\"built_in\">module</span> &amp;&amp; <span class=\"built_in\">module</span>.__esModule ?</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDefault</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">module</span>[<span class=\"string\">'default'</span>]; &#125; :</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getModuleExports</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">module</span>; &#125;;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        __webpack_require__.d(getter, <span class=\"string\">'a'</span>, getter);</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"keyword\">return</span> getter;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>    &#125;;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// Object.prototype.hasOwnProperty.call</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    __webpack_require__.o = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">object, property</span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.prototype.hasOwnProperty.call(object, property); &#125;;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// __webpack_public_path__</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    __webpack_require__.p = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// Load entry module and return exports</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"keyword\">return</span> __webpack_require__(__webpack_require__.s = <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">/******/</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">/************************************************************************/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> ([</span><br><span class=\"line\"><span class=\"comment\">/* 0 */</span></span><br><span class=\"line\"><span class=\"comment\">/***/</span> (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">module, exports</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.info(<span class=\"string\">'入口文件也是一个模块'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/***/</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">/******/</span> ]);</span><br></pre></td></tr></table></figure>\n\n<p>我们只是引入一个main.js模块，但是实际生成的bundle.js确实非常多。<br>前面的一大堆就是mainfest，准确来说是，runtime代码。官网的描述是这样的：</p>\n<p><img src=\"/images/7155532-22227abebcbe552a.webp\" alt=\"pic2\"></p>\n<blockquote>\n<p>其实这里，webpack帮我们定义了一个webpack_require的加载模块的方法，而mainfest模块数据集合就是对应着bundle.js第三行的 installedModules 。每当我们在main.js入口文件引入一模块，installModules就会发生变化，当我们页面点击跳转，加载对应模块就是通过<strong>webpack_require</strong>方法在installModules中找对应模块信息，进行加载。</p>\n</blockquote>\n<p>那这个跟缓存有什么关系呢？</p>\n<pre><code>1、我们知道浏览器加载js文件，如果文件名是一致的会优先从本地缓存拿，如果没有才向服务器这边请求。这个是时候，我们可以知道，如果是业务代码，比如我优化了一个功能，更改了个bug，如果文件名没有变化，请求时，浏览器用了缓存数据，则我们的新代码没被用上，因为浏览器用了旧代码文件。所以，output的选项中的filename，就不在是bundle.js ,而对应着bungdle[chunkhash].js，因为每次打包时，chunkhash都不同，所以打出来的文件名居不同，浏览器就不会直接用缓存数据了，而是请求新文件\n\n2、实际上，我们发现只有我们业务代码经常变化，而第三方依赖库是很少变化的，比如你使用了vue、vue-router、或者react等第三方库，这些是不会变化，那我们希望浏览器如果有的话，就不用再请求。但是，我们打包都整合到一个bundle[chunkhash].js上了，所以，我们需要借助webpack.optimize.CommonsChunkPlugin来帮我们分离代码，将mainfest、第三方库包，业务代码独立成三个文件</code></pre><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 抽出第三方库，命名vendor，不需要加chunkhash，因为他很少变化</span></span><br><span class=\"line\"><span class=\"comment\">// minChunk 判断哪些模块可以抽出来合并成ventor，这里只要是从node_module出来就抽</span></span><br><span class=\"line\"><span class=\"comment\">// 注意一定要放在mainfest的前面</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">      name: <span class=\"string\">'vendor'</span>,</span><br><span class=\"line\">      minChunks: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">module, count</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// any required modules inside node_modules are extracted to vendor</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">          <span class=\"built_in\">module</span>.resource &amp;&amp;</span><br><span class=\"line\">          /\\.js$/.test(<span class=\"built_in\">module</span>.resource) &amp;&amp;</span><br><span class=\"line\">          <span class=\"built_in\">module</span>.resource.indexOf(</span><br><span class=\"line\">            path.join(__dirname, <span class=\"string\">'../node_modules'</span>)</span><br><span class=\"line\">          ) === <span class=\"number\">0</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\"><span class=\"comment\">// 抽出mainfest</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">      name: <span class=\"string\">'manifest'</span>,</span><br><span class=\"line\">      chunks: [<span class=\"string\">'vendor'</span>]</span><br><span class=\"line\"> &#125;)</span><br></pre></td></tr></table></figure>\n\n<p> 而我们的业务代码是配置在output选项的，这样就会生成bundle[chunkhash].js 、vendor.js、mainfest.js,三个文件。<br>我们来试一下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue   <span class=\"comment\">//第三方库</span></span><br><span class=\"line\"><span class=\"comment\">// 同时main.js，改成</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.info(<span class=\"string\">'入口文件也是一个模块'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> vue = <span class=\"built_in\">require</span>(<span class=\"string\">'vue'</span>)</span><br></pre></td></tr></table></figure>\n\n<p>然后webpack.config.js 按上面加入两个插件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    entry: <span class=\"string\">'./main.js'</span>,</span><br><span class=\"line\">    output: &#123;</span><br><span class=\"line\">     filename: <span class=\"string\">'bundle[chunkhash].js'</span>,</span><br><span class=\"line\">      path: path.resolve(__dirname, <span class=\"string\">'dist'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    resolve: &#123;</span><br><span class=\"line\">        alias: &#123;</span><br><span class=\"line\">          <span class=\"string\">'vue$'</span>: <span class=\"string\">'vue/dist/vue.esm.js'</span>,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\">        <span class=\"comment\">// 抽出第三方库，命名vendor，不需要加chunkhash，因为他很少变化</span></span><br><span class=\"line\">        <span class=\"comment\">// minChunk 判断哪些模块可以抽出来合并成ventor，这里只要是从node_module出来就抽</span></span><br><span class=\"line\">        <span class=\"comment\">// 注意一定要放在mainfest的前面</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">              name: <span class=\"string\">'vendor'</span>,</span><br><span class=\"line\">              filename: <span class=\"string\">\"vendor.js\"</span>,</span><br><span class=\"line\">              minChunks: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">module, count</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// any required modules inside node_modules are extracted to vendor</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> (</span><br><span class=\"line\">                  <span class=\"built_in\">module</span>.resource &amp;&amp;</span><br><span class=\"line\">                  /\\.js$/.test(<span class=\"built_in\">module</span>.resource) &amp;&amp;</span><br><span class=\"line\">                  <span class=\"built_in\">module</span>.resource.indexOf(</span><br><span class=\"line\">                    path.join(__dirname, <span class=\"string\">'/node_modules'</span>)</span><br><span class=\"line\">                  ) === <span class=\"number\">0</span></span><br><span class=\"line\">                )</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;),</span><br><span class=\"line\">        <span class=\"comment\">// 抽出mainfest</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">              name: <span class=\"string\">'manifest'</span>,</span><br><span class=\"line\">              filename: <span class=\"string\">'manifest.js'</span></span><br><span class=\"line\">         &#125;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行 webpack –config webpack.congfig.js, 生成三个对应文件。这样来说，ventor一样的，然后浏览如果是第二次请求，会走缓存路线，不必再次加载。而bundle[chunkhash].js也就是我们的业务代码，可以避免缓存的影响</p>\n<p><img src=\"/images/7155532-c0fbf87fba32551c.webp\" alt=\"pic3\"></p>\n<p>实际上，mainfest也会发生变化，它的变化在于你是否增加了模块，比如新引入一个js文件之类，mainfest也会变化。明白了mainfest，我们就可以更好的处理我们的缓存机制了.</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>通常我们的项目包含三种类型的代码：业务代码、第三方依赖库、webpack打包构建后的manifest。官网经常会看到mainfest这个词，但是它究竟指什么，我们来做个实验找答案吧：（ps：文章把manifest打成mainfest了）</p>\n</blockquote>\n<pre><code>1 mkdir  webpack_mainfest   //在当前目录下，创建项目目录 webpack_mainfest\n2 npm init\n3 npm install webpack\n2 cd  webpack_mainfest  // 进入项目目录\n3 touch main.js   // 创建入口文件\n5 touch wepack.config.js  //创建webpack 配置文件</code></pre><p>webpack.config.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    entry: <span class=\"string\">'./main.js'</span>,</span><br><span class=\"line\">    output: &#123;</span><br><span class=\"line\">     filename: <span class=\"string\">'bundle.js'</span>,</span><br><span class=\"line\">      path: path.resolve(__dirname, <span class=\"string\">'dist'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>main.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.info(<span class=\"string\">'入口文件也是一个模块'</span>)</span><br></pre></td></tr></table></figure>\n\n<p>然后，我们就直接打包： webpack –config webpack.config.js</p>\n<p><img src=\"/images/7155532-15ee04aa5b6e6ad4.webp\" alt=\"pic1\"></p>\n<p>可以看出，打包是只是引入一个模块<br>我们看一下打包之后生成bundle.js的内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/******/</span> (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">modules</span>) </span>&#123; <span class=\"comment\">// webpackBootstrap</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// The module cache</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"keyword\">var</span> installedModules = &#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// The require function</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__webpack_require__</span>(<span class=\"params\">moduleId</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"comment\">// Check if module is in cache</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"keyword\">if</span>(installedModules[moduleId]) &#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            <span class=\"keyword\">return</span> installedModules[moduleId].exports;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        &#125;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"comment\">// Create a new module (and put it into the cache)</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"keyword\">var</span> <span class=\"built_in\">module</span> = installedModules[moduleId] = &#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            i: moduleId,</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            l: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            exports: &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        &#125;;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"comment\">// Execute the module function</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        modules[moduleId].call(<span class=\"built_in\">module</span>.exports, <span class=\"built_in\">module</span>, <span class=\"built_in\">module</span>.exports, __webpack_require__);</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"comment\">// Flag the module as loaded</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"built_in\">module</span>.l = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"comment\">// Return the exports of the module</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"keyword\">return</span> <span class=\"built_in\">module</span>.exports;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>    &#125;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// expose the modules object (__webpack_modules__)</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    __webpack_require__.m = modules;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// expose the module cache</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    __webpack_require__.c = installedModules;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// define getter function for harmony exports</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    __webpack_require__.d = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">exports, name, getter</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"keyword\">if</span>(!__webpack_require__.o(exports, name)) &#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            <span class=\"built_in\">Object</span>.defineProperty(exports, name, &#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>                configurable: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"comment\">/******/</span>                enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"comment\">/******/</span>                <span class=\"keyword\">get</span>: getter</span><br><span class=\"line\">/******/            &#125;);</span><br><span class=\"line\">/******/        &#125;</span><br><span class=\"line\">/******/    &#125;;</span><br><span class=\"line\">/******/</span><br><span class=\"line\">/******/    // getDefaultExport function for compatibility with non-harmony modules</span><br><span class=\"line\">/******/    __webpack_require__.n = function(module) &#123;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"keyword\">var</span> getter = <span class=\"built_in\">module</span> &amp;&amp; <span class=\"built_in\">module</span>.__esModule ?</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDefault</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">module</span>[<span class=\"string\">'default'</span>]; &#125; :</span><br><span class=\"line\"><span class=\"comment\">/******/</span>            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getModuleExports</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">module</span>; &#125;;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        __webpack_require__.d(getter, <span class=\"string\">'a'</span>, getter);</span><br><span class=\"line\"><span class=\"comment\">/******/</span>        <span class=\"keyword\">return</span> getter;</span><br><span class=\"line\"><span class=\"comment\">/******/</span>    &#125;;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// Object.prototype.hasOwnProperty.call</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    __webpack_require__.o = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">object, property</span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.prototype.hasOwnProperty.call(object, property); &#125;;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// __webpack_public_path__</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    __webpack_require__.p = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"comment\">/******/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"comment\">// Load entry module and return exports</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span>    <span class=\"keyword\">return</span> __webpack_require__(__webpack_require__.s = <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">/******/</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">/************************************************************************/</span></span><br><span class=\"line\"><span class=\"comment\">/******/</span> ([</span><br><span class=\"line\"><span class=\"comment\">/* 0 */</span></span><br><span class=\"line\"><span class=\"comment\">/***/</span> (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">module, exports</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.info(<span class=\"string\">'入口文件也是一个模块'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/***/</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">/******/</span> ]);</span><br></pre></td></tr></table></figure>\n\n<p>我们只是引入一个main.js模块，但是实际生成的bundle.js确实非常多。<br>前面的一大堆就是mainfest，准确来说是，runtime代码。官网的描述是这样的：</p>\n<p><img src=\"/images/7155532-22227abebcbe552a.webp\" alt=\"pic2\"></p>\n<blockquote>\n<p>其实这里，webpack帮我们定义了一个webpack_require的加载模块的方法，而mainfest模块数据集合就是对应着bundle.js第三行的 installedModules 。每当我们在main.js入口文件引入一模块，installModules就会发生变化，当我们页面点击跳转，加载对应模块就是通过<strong>webpack_require</strong>方法在installModules中找对应模块信息，进行加载。</p>\n</blockquote>\n<p>那这个跟缓存有什么关系呢？</p>\n<pre><code>1、我们知道浏览器加载js文件，如果文件名是一致的会优先从本地缓存拿，如果没有才向服务器这边请求。这个是时候，我们可以知道，如果是业务代码，比如我优化了一个功能，更改了个bug，如果文件名没有变化，请求时，浏览器用了缓存数据，则我们的新代码没被用上，因为浏览器用了旧代码文件。所以，output的选项中的filename，就不在是bundle.js ,而对应着bungdle[chunkhash].js，因为每次打包时，chunkhash都不同，所以打出来的文件名居不同，浏览器就不会直接用缓存数据了，而是请求新文件\n\n2、实际上，我们发现只有我们业务代码经常变化，而第三方依赖库是很少变化的，比如你使用了vue、vue-router、或者react等第三方库，这些是不会变化，那我们希望浏览器如果有的话，就不用再请求。但是，我们打包都整合到一个bundle[chunkhash].js上了，所以，我们需要借助webpack.optimize.CommonsChunkPlugin来帮我们分离代码，将mainfest、第三方库包，业务代码独立成三个文件</code></pre><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 抽出第三方库，命名vendor，不需要加chunkhash，因为他很少变化</span></span><br><span class=\"line\"><span class=\"comment\">// minChunk 判断哪些模块可以抽出来合并成ventor，这里只要是从node_module出来就抽</span></span><br><span class=\"line\"><span class=\"comment\">// 注意一定要放在mainfest的前面</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">      name: <span class=\"string\">'vendor'</span>,</span><br><span class=\"line\">      minChunks: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">module, count</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// any required modules inside node_modules are extracted to vendor</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">          <span class=\"built_in\">module</span>.resource &amp;&amp;</span><br><span class=\"line\">          /\\.js$/.test(<span class=\"built_in\">module</span>.resource) &amp;&amp;</span><br><span class=\"line\">          <span class=\"built_in\">module</span>.resource.indexOf(</span><br><span class=\"line\">            path.join(__dirname, <span class=\"string\">'../node_modules'</span>)</span><br><span class=\"line\">          ) === <span class=\"number\">0</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\"><span class=\"comment\">// 抽出mainfest</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">      name: <span class=\"string\">'manifest'</span>,</span><br><span class=\"line\">      chunks: [<span class=\"string\">'vendor'</span>]</span><br><span class=\"line\"> &#125;)</span><br></pre></td></tr></table></figure>\n\n<p> 而我们的业务代码是配置在output选项的，这样就会生成bundle[chunkhash].js 、vendor.js、mainfest.js,三个文件。<br>我们来试一下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue   <span class=\"comment\">//第三方库</span></span><br><span class=\"line\"><span class=\"comment\">// 同时main.js，改成</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.info(<span class=\"string\">'入口文件也是一个模块'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> vue = <span class=\"built_in\">require</span>(<span class=\"string\">'vue'</span>)</span><br></pre></td></tr></table></figure>\n\n<p>然后webpack.config.js 按上面加入两个插件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    entry: <span class=\"string\">'./main.js'</span>,</span><br><span class=\"line\">    output: &#123;</span><br><span class=\"line\">     filename: <span class=\"string\">'bundle[chunkhash].js'</span>,</span><br><span class=\"line\">      path: path.resolve(__dirname, <span class=\"string\">'dist'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    resolve: &#123;</span><br><span class=\"line\">        alias: &#123;</span><br><span class=\"line\">          <span class=\"string\">'vue$'</span>: <span class=\"string\">'vue/dist/vue.esm.js'</span>,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    plugins: [</span><br><span class=\"line\">        <span class=\"comment\">// 抽出第三方库，命名vendor，不需要加chunkhash，因为他很少变化</span></span><br><span class=\"line\">        <span class=\"comment\">// minChunk 判断哪些模块可以抽出来合并成ventor，这里只要是从node_module出来就抽</span></span><br><span class=\"line\">        <span class=\"comment\">// 注意一定要放在mainfest的前面</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">              name: <span class=\"string\">'vendor'</span>,</span><br><span class=\"line\">              filename: <span class=\"string\">\"vendor.js\"</span>,</span><br><span class=\"line\">              minChunks: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">module, count</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// any required modules inside node_modules are extracted to vendor</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> (</span><br><span class=\"line\">                  <span class=\"built_in\">module</span>.resource &amp;&amp;</span><br><span class=\"line\">                  /\\.js$/.test(<span class=\"built_in\">module</span>.resource) &amp;&amp;</span><br><span class=\"line\">                  <span class=\"built_in\">module</span>.resource.indexOf(</span><br><span class=\"line\">                    path.join(__dirname, <span class=\"string\">'/node_modules'</span>)</span><br><span class=\"line\">                  ) === <span class=\"number\">0</span></span><br><span class=\"line\">                )</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;),</span><br><span class=\"line\">        <span class=\"comment\">// 抽出mainfest</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">              name: <span class=\"string\">'manifest'</span>,</span><br><span class=\"line\">              filename: <span class=\"string\">'manifest.js'</span></span><br><span class=\"line\">         &#125;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行 webpack –config webpack.congfig.js, 生成三个对应文件。这样来说，ventor一样的，然后浏览如果是第二次请求，会走缓存路线，不必再次加载。而bundle[chunkhash].js也就是我们的业务代码，可以避免缓存的影响</p>\n<p><img src=\"/images/7155532-c0fbf87fba32551c.webp\" alt=\"pic3\"></p>\n<p>实际上，mainfest也会发生变化，它的变化在于你是否增加了模块，比如新引入一个js文件之类，mainfest也会变化。明白了mainfest，我们就可以更好的处理我们的缓存机制了.</p>\n"},{"title":"四种方法实现数据双向绑定","date":"2017-07-31T23:54:51.000Z","_content":"\n## 双向数据绑定的4种实现方式。\n\n### 1.手动触发绑定\n\n手动触发绑定的主要思路是通过在数据对象定义 get 和 set 方法(可以使用其他的命名方法)，调用时手动去触发 get 和 set 方法去获取数据，修改数据，改变数据后会主动去触发 get 和 set 函数中视图层的重新渲染。\n\n简单的手动触发绑定代码如下：\n\n```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>手动双向绑定</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-value=\"value\">\n    <span id=\"el\" s-text=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let data = {\n            value: ''\n        }\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            set('value', e.target.value)\n        })\n        \n        function scan() {\n            for (let elem of elems) {\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('s-') !== -1) {\n                        // 调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])\n                    }\n                }\n            }\n        }\n        function set(key, value) {\n            data[key] = value;\n            scan();\n        }\n    </script>\n</body>\n</html>\n```\n\n### 2.数据劫持\n\n数据劫持的基本思路是使用 Object.defineProperty 对 ViewModel 数据对象进行 get 和 set 的监听，当有数据变动的时候扫描元素节点，然后去运行对应节点上的指令（directive）。\n\n代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据劫持</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-value=\"value\">\n    <span id=\"el\" s-text=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let data = {\n            value: ''\n        }\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        let value;\n        defineGetAndSet(data, 'value')\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            data.value = e.target.value;\n        })\n        function scan() {\n            for (let elem of elems) {\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('s-') !== -1) {\n                        // 调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])\n                    }\n                }\n            }\n        }\n        function defineGetAndSet(obj, attrName) {\n            Object.defineProperty(obj, attrName, {\n                get: function () {\n                    return value\n                },\n                set: function (newValue) {\n                    value = newValue;\n                    scan()\n                },\n                configurable: true,\n                enumerable: true\n            })\n        }\n    </script>\n</body>\n</html>\n```\n\n### 3.使用 es6的 Proxy\n\n利用Proxy ，它可以目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此可以对外界的访问进行过滤和改写，实现数据双向数据绑定和上一个类似。\n\n代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>使用 proxy 进行数据双向绑定</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-value=\"value\">\n    <span id=\"el\" s-text=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        // ------------- 看下面 -------------\n        let data = new Proxy({}, {\n            get: function (target, key, receiver) {\n                return target.value\n            },\n            set(target, key, value, receiver) {\n                target.value = value;\n                scan();\n            }\n        })\n        // ------------- 看上面 -------------\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            data.value = e.target.value;\n        })\n        function scan() {\n            for (let elem of elems) {\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('s-') !== -1) {\n                        // 调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])\n                    }\n                }\n            }\n        }\n    </script>\n</body>\n</html>\n```\n\n### 4. 脏检查\n\n脏检查的基本原理是在 ViewModel 对象的某个属性值发生变化的时候找到与这个属性值相关的所有元素，然后去比较数据变化，如果变化就用 directive 指令调用，对这个元素进行重新渲染。\n\n简单的脏检查代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>脏检查</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-bind=\"value\" s-event=\"value\">\n    <span id=\"el\" s-event=\"text\" s-bind=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let directives = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        let data = {\n            value: ''\n        }\n        // 扫描元素，使每个元素的 directive 数组为空\n        scan(elems)\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            data.value = e.target.value;\n            startDirtyCheck(e.target.getAttribute('s-bind'))\n        })\n        function scan() {\n            for (let elem of elems) {\n                elem.directive = []\n            }\n        }\n        // 开启脏检查\n        function startDirtyCheck(value) {\n            let list = document.querySelectorAll('[s-bind=' + value + ']')\n            dirtyCheck(list)\n        }\n        function dirtyCheck(elems) {\n            // 扫描带指令的节点属性\n            for (let i = 0, len = elems.length; i < len; i++) {\n                let elem = elems[i];\n                for (let j = 0, len1 = elem.attributes.length; j < len1; j++) {\n                    let attr = elem.attributes[j];\n                    if (attr.nodeName.indexOf('s-event') !== -1) {\n                        let dataKey = elem.getAttribute('s-bind')\n                        // 进行脏数据检查，如果数据改变，重新执行指令\n                        if (elem.directive[attr.nodeValue] !== data[dataKey]) {\n                            directives[attr.nodeValue].call(elem, data[dataKey])\n                            elem.directive[attr.nodeValue] = data[dataKey]\n                        }\n                    }\n                }\n            }\n        }\n    </script>\n</body>\n</html>\n```","source":"_posts/数据绑定.md","raw":"---\ntitle: 四种方法实现数据双向绑定\ndate: 2017-07-31 23:54:51\ntags: \n  - js \n  - vue \ncategories: javascript\n---\n\n## 双向数据绑定的4种实现方式。\n\n### 1.手动触发绑定\n\n手动触发绑定的主要思路是通过在数据对象定义 get 和 set 方法(可以使用其他的命名方法)，调用时手动去触发 get 和 set 方法去获取数据，修改数据，改变数据后会主动去触发 get 和 set 函数中视图层的重新渲染。\n\n简单的手动触发绑定代码如下：\n\n```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>手动双向绑定</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-value=\"value\">\n    <span id=\"el\" s-text=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let data = {\n            value: ''\n        }\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            set('value', e.target.value)\n        })\n        \n        function scan() {\n            for (let elem of elems) {\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('s-') !== -1) {\n                        // 调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])\n                    }\n                }\n            }\n        }\n        function set(key, value) {\n            data[key] = value;\n            scan();\n        }\n    </script>\n</body>\n</html>\n```\n\n### 2.数据劫持\n\n数据劫持的基本思路是使用 Object.defineProperty 对 ViewModel 数据对象进行 get 和 set 的监听，当有数据变动的时候扫描元素节点，然后去运行对应节点上的指令（directive）。\n\n代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据劫持</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-value=\"value\">\n    <span id=\"el\" s-text=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let data = {\n            value: ''\n        }\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        let value;\n        defineGetAndSet(data, 'value')\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            data.value = e.target.value;\n        })\n        function scan() {\n            for (let elem of elems) {\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('s-') !== -1) {\n                        // 调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])\n                    }\n                }\n            }\n        }\n        function defineGetAndSet(obj, attrName) {\n            Object.defineProperty(obj, attrName, {\n                get: function () {\n                    return value\n                },\n                set: function (newValue) {\n                    value = newValue;\n                    scan()\n                },\n                configurable: true,\n                enumerable: true\n            })\n        }\n    </script>\n</body>\n</html>\n```\n\n### 3.使用 es6的 Proxy\n\n利用Proxy ，它可以目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此可以对外界的访问进行过滤和改写，实现数据双向数据绑定和上一个类似。\n\n代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>使用 proxy 进行数据双向绑定</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-value=\"value\">\n    <span id=\"el\" s-text=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        // ------------- 看下面 -------------\n        let data = new Proxy({}, {\n            get: function (target, key, receiver) {\n                return target.value\n            },\n            set(target, key, value, receiver) {\n                target.value = value;\n                scan();\n            }\n        })\n        // ------------- 看上面 -------------\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            data.value = e.target.value;\n        })\n        function scan() {\n            for (let elem of elems) {\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('s-') !== -1) {\n                        // 调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])\n                    }\n                }\n            }\n        }\n    </script>\n</body>\n</html>\n```\n\n### 4. 脏检查\n\n脏检查的基本原理是在 ViewModel 对象的某个属性值发生变化的时候找到与这个属性值相关的所有元素，然后去比较数据变化，如果变化就用 directive 指令调用，对这个元素进行重新渲染。\n\n简单的脏检查代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>脏检查</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-bind=\"value\" s-event=\"value\">\n    <span id=\"el\" s-event=\"text\" s-bind=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let directives = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        let data = {\n            value: ''\n        }\n        // 扫描元素，使每个元素的 directive 数组为空\n        scan(elems)\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            data.value = e.target.value;\n            startDirtyCheck(e.target.getAttribute('s-bind'))\n        })\n        function scan() {\n            for (let elem of elems) {\n                elem.directive = []\n            }\n        }\n        // 开启脏检查\n        function startDirtyCheck(value) {\n            let list = document.querySelectorAll('[s-bind=' + value + ']')\n            dirtyCheck(list)\n        }\n        function dirtyCheck(elems) {\n            // 扫描带指令的节点属性\n            for (let i = 0, len = elems.length; i < len; i++) {\n                let elem = elems[i];\n                for (let j = 0, len1 = elem.attributes.length; j < len1; j++) {\n                    let attr = elem.attributes[j];\n                    if (attr.nodeName.indexOf('s-event') !== -1) {\n                        let dataKey = elem.getAttribute('s-bind')\n                        // 进行脏数据检查，如果数据改变，重新执行指令\n                        if (elem.directive[attr.nodeValue] !== data[dataKey]) {\n                            directives[attr.nodeValue].call(elem, data[dataKey])\n                            elem.directive[attr.nodeValue] = data[dataKey]\n                        }\n                    }\n                }\n            }\n        }\n    </script>\n</body>\n</html>\n```","slug":"数据绑定","published":1,"updated":"2019-08-19T16:58:53.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzji1sej002n0umw25ie2g43","content":"<h2 id=\"双向数据绑定的4种实现方式。\"><a href=\"#双向数据绑定的4种实现方式。\" class=\"headerlink\" title=\"双向数据绑定的4种实现方式。\"></a>双向数据绑定的4种实现方式。</h2><h3 id=\"1-手动触发绑定\"><a href=\"#1-手动触发绑定\" class=\"headerlink\" title=\"1.手动触发绑定\"></a>1.手动触发绑定</h3><p>手动触发绑定的主要思路是通过在数据对象定义 get 和 set 方法(可以使用其他的命名方法)，调用时手动去触发 get 和 set 方法去获取数据，修改数据，改变数据后会主动去触发 get 和 set 函数中视图层的重新渲染。</p>\n<p>简单的手动触发绑定代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">    &lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=<span class=\"string\">\"X-UA-Compatible\"</span> content=<span class=\"string\">\"ie=edge\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;手动双向绑定&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">\"text\"</span> id=<span class=\"string\">\"input\"</span> s-value=<span class=\"string\">\"value\"</span>&gt;</span><br><span class=\"line\">    &lt;span id=<span class=\"string\">\"el\"</span> s-text=<span class=\"string\">\"value\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">            value: <span class=\"string\">''</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> directive = &#123;</span><br><span class=\"line\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.innerHTML = text</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span><br><span class=\"line\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">set</span>('value', e.target.value)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        </span><br><span class=\"line\">        function scan() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-'</span>) !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 调用属性指令</span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(<span class=\"number\">2</span>)].call(elem, data[attr.nodeValue])</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set</span>(<span class=\"params\">key, value</span>) </span>&#123;</span><br><span class=\"line\">            data[key] = value;</span><br><span class=\"line\">            scan();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>body&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/html&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-数据劫持\"><a href=\"#2-数据劫持\" class=\"headerlink\" title=\"2.数据劫持\"></a>2.数据劫持</h3><p>数据劫持的基本思路是使用 Object.defineProperty 对 ViewModel 数据对象进行 get 和 set 的监听，当有数据变动的时候扫描元素节点，然后去运行对应节点上的指令（directive）。</p>\n<p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据劫持<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">s-value</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">s-text</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"string\">''</span></span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.innerHTML = text</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> value;</span></span><br><span class=\"line\"><span class=\"javascript\">        defineGetAndSet(data, <span class=\"string\">'value'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-'</span>) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"comment\">// 调用属性指令</span></span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">defineGetAndSet</span>(<span class=\"params\">obj, attrName</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">Object</span>.defineProperty(obj, attrName, &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">get</span>: function () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span> value</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">set</span>: function (newValue) &#123;</span></span><br><span class=\"line\">                    value = newValue;</span><br><span class=\"line\">                    scan()</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\"><span class=\"javascript\">                configurable: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                enumerable: <span class=\"literal\">true</span></span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-使用-es6的-Proxy\"><a href=\"#3-使用-es6的-Proxy\" class=\"headerlink\" title=\"3.使用 es6的 Proxy\"></a>3.使用 es6的 Proxy</h3><p>利用Proxy ，它可以目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此可以对外界的访问进行过滤和改写，实现数据双向数据绑定和上一个类似。</p>\n<p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>使用 proxy 进行数据双向绑定<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">s-value</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">s-text</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.innerHTML = text</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// ------------- 看下面 -------------</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = <span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(&#123;&#125;, &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">get</span>: function (target, key, receiver) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> target.value</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">set</span>(target, key, value, receiver) &#123;</span></span><br><span class=\"line\">                target.value = value;</span><br><span class=\"line\">                scan();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// ------------- 看上面 -------------</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-'</span>) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"comment\">// 调用属性指令</span></span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-脏检查\"><a href=\"#4-脏检查\" class=\"headerlink\" title=\"4. 脏检查\"></a>4. 脏检查</h3><p>脏检查的基本原理是在 ViewModel 对象的某个属性值发生变化的时候找到与这个属性值相关的所有元素，然后去比较数据变化，如果变化就用 directive 指令调用，对这个元素进行重新渲染。</p>\n<p>简单的脏检查代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>脏检查<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">s-bind</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">s-event</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">s-event</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">s-bind</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> directives = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.innerHTML = text</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"string\">''</span></span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 扫描元素，使每个元素的 directive 数组为空</span></span></span><br><span class=\"line\">        scan(elems)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\"><span class=\"javascript\">            startDirtyCheck(e.target.getAttribute(<span class=\"string\">'s-bind'</span>))</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\">                elem.directive = []</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 开启脏检查</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startDirtyCheck</span>(<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> list = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'[s-bind='</span> + value + <span class=\"string\">']'</span>)</span></span><br><span class=\"line\">            dirtyCheck(list)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dirtyCheck</span>(<span class=\"params\">elems</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 扫描带指令的节点属性</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, len = elems.length; i &lt; len; i++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">let</span> elem = elems[i];</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>, len1 = elem.attributes.length; j &lt; len1; j++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">let</span> attr = elem.attributes[j];</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-event'</span>) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"keyword\">let</span> dataKey = elem.getAttribute(<span class=\"string\">'s-bind'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"comment\">// 进行脏数据检查，如果数据改变，重新执行指令</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"keyword\">if</span> (elem.directive[attr.nodeValue] !== data[dataKey]) &#123;</span></span><br><span class=\"line\">                            directives[attr.nodeValue].call(elem, data[dataKey])</span><br><span class=\"line\">                            elem.directive[attr.nodeValue] = data[dataKey]</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"双向数据绑定的4种实现方式。\"><a href=\"#双向数据绑定的4种实现方式。\" class=\"headerlink\" title=\"双向数据绑定的4种实现方式。\"></a>双向数据绑定的4种实现方式。</h2><h3 id=\"1-手动触发绑定\"><a href=\"#1-手动触发绑定\" class=\"headerlink\" title=\"1.手动触发绑定\"></a>1.手动触发绑定</h3><p>手动触发绑定的主要思路是通过在数据对象定义 get 和 set 方法(可以使用其他的命名方法)，调用时手动去触发 get 和 set 方法去获取数据，修改数据，改变数据后会主动去触发 get 和 set 函数中视图层的重新渲染。</p>\n<p>简单的手动触发绑定代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">    &lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=<span class=\"string\">\"X-UA-Compatible\"</span> content=<span class=\"string\">\"ie=edge\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;手动双向绑定&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">\"text\"</span> id=<span class=\"string\">\"input\"</span> s-value=<span class=\"string\">\"value\"</span>&gt;</span><br><span class=\"line\">    &lt;span id=<span class=\"string\">\"el\"</span> s-text=<span class=\"string\">\"value\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">            value: <span class=\"string\">''</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> directive = &#123;</span><br><span class=\"line\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.innerHTML = text</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span><br><span class=\"line\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">set</span>('value', e.target.value)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        </span><br><span class=\"line\">        function scan() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-'</span>) !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 调用属性指令</span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(<span class=\"number\">2</span>)].call(elem, data[attr.nodeValue])</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set</span>(<span class=\"params\">key, value</span>) </span>&#123;</span><br><span class=\"line\">            data[key] = value;</span><br><span class=\"line\">            scan();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>body&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/html&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-数据劫持\"><a href=\"#2-数据劫持\" class=\"headerlink\" title=\"2.数据劫持\"></a>2.数据劫持</h3><p>数据劫持的基本思路是使用 Object.defineProperty 对 ViewModel 数据对象进行 get 和 set 的监听，当有数据变动的时候扫描元素节点，然后去运行对应节点上的指令（directive）。</p>\n<p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据劫持<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">s-value</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">s-text</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"string\">''</span></span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.innerHTML = text</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> value;</span></span><br><span class=\"line\"><span class=\"javascript\">        defineGetAndSet(data, <span class=\"string\">'value'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-'</span>) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"comment\">// 调用属性指令</span></span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">defineGetAndSet</span>(<span class=\"params\">obj, attrName</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">Object</span>.defineProperty(obj, attrName, &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">get</span>: function () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span> value</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">set</span>: function (newValue) &#123;</span></span><br><span class=\"line\">                    value = newValue;</span><br><span class=\"line\">                    scan()</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\"><span class=\"javascript\">                configurable: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                enumerable: <span class=\"literal\">true</span></span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-使用-es6的-Proxy\"><a href=\"#3-使用-es6的-Proxy\" class=\"headerlink\" title=\"3.使用 es6的 Proxy\"></a>3.使用 es6的 Proxy</h3><p>利用Proxy ，它可以目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此可以对外界的访问进行过滤和改写，实现数据双向数据绑定和上一个类似。</p>\n<p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>使用 proxy 进行数据双向绑定<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">s-value</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">s-text</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.innerHTML = text</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// ------------- 看下面 -------------</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = <span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(&#123;&#125;, &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">get</span>: function (target, key, receiver) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> target.value</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">set</span>(target, key, value, receiver) &#123;</span></span><br><span class=\"line\">                target.value = value;</span><br><span class=\"line\">                scan();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// ------------- 看上面 -------------</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-'</span>) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"comment\">// 调用属性指令</span></span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-脏检查\"><a href=\"#4-脏检查\" class=\"headerlink\" title=\"4. 脏检查\"></a>4. 脏检查</h3><p>脏检查的基本原理是在 ViewModel 对象的某个属性值发生变化的时候找到与这个属性值相关的所有元素，然后去比较数据变化，如果变化就用 directive 指令调用，对这个元素进行重新渲染。</p>\n<p>简单的脏检查代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>脏检查<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">s-bind</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">s-event</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">s-event</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">s-bind</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> directives = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.innerHTML = text</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"string\">''</span></span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 扫描元素，使每个元素的 directive 数组为空</span></span></span><br><span class=\"line\">        scan(elems)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\"><span class=\"javascript\">            startDirtyCheck(e.target.getAttribute(<span class=\"string\">'s-bind'</span>))</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\">                elem.directive = []</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 开启脏检查</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startDirtyCheck</span>(<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> list = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'[s-bind='</span> + value + <span class=\"string\">']'</span>)</span></span><br><span class=\"line\">            dirtyCheck(list)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dirtyCheck</span>(<span class=\"params\">elems</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 扫描带指令的节点属性</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, len = elems.length; i &lt; len; i++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">let</span> elem = elems[i];</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>, len1 = elem.attributes.length; j &lt; len1; j++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">let</span> attr = elem.attributes[j];</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-event'</span>) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"keyword\">let</span> dataKey = elem.getAttribute(<span class=\"string\">'s-bind'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"comment\">// 进行脏数据检查，如果数据改变，重新执行指令</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"keyword\">if</span> (elem.directive[attr.nodeValue] !== data[dataKey]) &#123;</span></span><br><span class=\"line\">                            directives[attr.nodeValue].call(elem, data[dataKey])</span><br><span class=\"line\">                            elem.directive[attr.nodeValue] = data[dataKey]</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjzji1sbm00000umwn5vbor0h","category_id":"cjzji1sc000040umw8ozcl8e4","_id":"cjzji1sck000e0umw2yvnja8g"},{"post_id":"cjzji1sc700090umw0ioc6osf","category_id":"cjzji1sc000040umw8ozcl8e4","_id":"cjzji1sco000i0umwny5voq4i"},{"post_id":"cjzji1sca000c0umwcuzssxfs","category_id":"cjzji1sc000040umw8ozcl8e4","_id":"cjzji1scp000l0umwqi20i73v"},{"post_id":"cjzji1sbv00020umwwl8zxofj","category_id":"cjzji1sc9000a0umwxrz1f3kf","_id":"cjzji1scr000q0umwb2ame2gq"},{"post_id":"cjzji1sci000d0umwd64dbe2v","category_id":"cjzji1sc000040umw8ozcl8e4","_id":"cjzji1sct000t0umw44dd2hmd"},{"post_id":"cjzji1sc300060umw6uk0x4rr","category_id":"cjzji1sc9000a0umwxrz1f3kf","_id":"cjzji1scv000y0umwmapi2kja"},{"post_id":"cjzji1sc500080umwwpjxobna","category_id":"cjzji1scq000m0umw0its7ddv","_id":"cjzji1scw00110umwmfzznwuu"},{"post_id":"cjzji1scs000s0umwfbd33hhh","category_id":"cjzji1sc9000a0umwxrz1f3kf","_id":"cjzji1scz00160umwnpjt9xd8"},{"post_id":"cjzji1scu000x0umwowwhzi89","category_id":"cjzji1sc9000a0umwxrz1f3kf","_id":"cjzji1scz00180umwyphmhrhq"},{"post_id":"cjzji1scn000h0umwu2cu5n9g","category_id":"cjzji1sct000u0umwzqww24ai","_id":"cjzji1sd0001c0umw7mrlunhd"},{"post_id":"cjzji1scv00100umwb1561979","category_id":"cjzji1sc9000a0umwxrz1f3kf","_id":"cjzji1sd1001e0umww4nvz0mq"},{"post_id":"cjzji1scp000k0umw20cbkx1w","category_id":"cjzji1sct000u0umwzqww24ai","_id":"cjzji1sd2001h0umwlf73196q"},{"post_id":"cjzji1scr000p0umwb8ayqt6x","category_id":"cjzji1sd0001a0umwfn7yut1p","_id":"cjzji1sd2001j0umwbfksr5ma"},{"post_id":"cjzji1scx00140umwchvpqbjl","category_id":"cjzji1sd1001f0umwdt7veqku","_id":"cjzji1sd4001n0umwnsrtp475"},{"post_id":"cjzji1sei002m0umwzonrk5xg","category_id":"cjzji1sc000040umw8ozcl8e4","_id":"cjzji1sel002r0umw9l2t7tb6"},{"post_id":"cjzji1sej002n0umw25ie2g43","category_id":"cjzji1scq000m0umw0its7ddv","_id":"cjzji1sel002s0umwkjnqlf35"}],"PostTag":[{"post_id":"cjzji1sci000d0umwd64dbe2v","tag_id":"cjzji1sc200050umw3t1rocwa","_id":"cjzji1sco000j0umw0q1gxuap"},{"post_id":"cjzji1sci000d0umwd64dbe2v","tag_id":"cjzji1sc9000b0umwfk0erwxz","_id":"cjzji1scq000o0umwvue44f1p"},{"post_id":"cjzji1scn000h0umwu2cu5n9g","tag_id":"cjzji1sc200050umw3t1rocwa","_id":"cjzji1scs000r0umwkus1bk1d"},{"post_id":"cjzji1scn000h0umwu2cu5n9g","tag_id":"cjzji1sc9000b0umwfk0erwxz","_id":"cjzji1sct000v0umweiux8bv2"},{"post_id":"cjzji1sbm00000umwn5vbor0h","tag_id":"cjzji1sc200050umw3t1rocwa","_id":"cjzji1scv000z0umwp6t3csdc"},{"post_id":"cjzji1sbm00000umwn5vbor0h","tag_id":"cjzji1sc9000b0umwfk0erwxz","_id":"cjzji1scx00120umwn2nt3ruj"},{"post_id":"cjzji1sbm00000umwn5vbor0h","tag_id":"cjzji1scl000g0umww57ts3bs","_id":"cjzji1scz00170umwpy1ho0le"},{"post_id":"cjzji1sbv00020umwwl8zxofj","tag_id":"cjzji1scq000n0umwe1smb227","_id":"cjzji1sd000190umwccby9pqo"},{"post_id":"cjzji1sbv00020umwwl8zxofj","tag_id":"cjzji1scu000w0umws5wrrqnd","_id":"cjzji1sd1001d0umwda19zm01"},{"post_id":"cjzji1sc300060umw6uk0x4rr","tag_id":"cjzji1scu000w0umws5wrrqnd","_id":"cjzji1sd2001i0umw7yk3cj2j"},{"post_id":"cjzji1sc300060umw6uk0x4rr","tag_id":"cjzji1sd0001b0umwpjm6byyb","_id":"cjzji1sd2001k0umwmplwsr63"},{"post_id":"cjzji1sc500080umwwpjxobna","tag_id":"cjzji1sd1001g0umwiviq62ti","_id":"cjzji1sd3001m0umw7yztsi8m"},{"post_id":"cjzji1sc700090umw0ioc6osf","tag_id":"cjzji1sc200050umw3t1rocwa","_id":"cjzji1sd5001q0umwt1h1mzlu"},{"post_id":"cjzji1sc700090umw0ioc6osf","tag_id":"cjzji1sc9000b0umwfk0erwxz","_id":"cjzji1sd5001r0umwigcu5frd"},{"post_id":"cjzji1sc700090umw0ioc6osf","tag_id":"cjzji1sd4001o0umw4k2tdyl1","_id":"cjzji1sd6001t0umwgrgvla1a"},{"post_id":"cjzji1sca000c0umwcuzssxfs","tag_id":"cjzji1sc200050umw3t1rocwa","_id":"cjzji1sd6001u0umw9s6hhif4"},{"post_id":"cjzji1sca000c0umwcuzssxfs","tag_id":"cjzji1sc9000b0umwfk0erwxz","_id":"cjzji1sd7001w0umwo6sy7uo6"},{"post_id":"cjzji1sca000c0umwcuzssxfs","tag_id":"cjzji1sd4001o0umw4k2tdyl1","_id":"cjzji1sd7001x0umwz207h8u0"},{"post_id":"cjzji1scp000k0umw20cbkx1w","tag_id":"cjzji1sc200050umw3t1rocwa","_id":"cjzji1sd8001z0umwkwasa540"},{"post_id":"cjzji1scp000k0umw20cbkx1w","tag_id":"cjzji1sc9000b0umwfk0erwxz","_id":"cjzji1sd800200umwhb5qku57"},{"post_id":"cjzji1scp000k0umw20cbkx1w","tag_id":"cjzji1sd6001s0umw3147b2h0","_id":"cjzji1sd800220umwjm22il5y"},{"post_id":"cjzji1scr000p0umwb8ayqt6x","tag_id":"cjzji1sd7001v0umwg0qscxj4","_id":"cjzji1sda00230umweo7asy07"},{"post_id":"cjzji1scr000p0umwb8ayqt6x","tag_id":"cjzji1sd7001y0umwzqochamw","_id":"cjzji1sdb00250umwvubt3xku"},{"post_id":"cjzji1scs000s0umwfbd33hhh","tag_id":"cjzji1scu000w0umws5wrrqnd","_id":"cjzji1sdc00270umwxl9rjjrp"},{"post_id":"cjzji1scs000s0umwfbd33hhh","tag_id":"cjzji1sda00240umwbnownbw3","_id":"cjzji1sdc00280umwfxw5sgs7"},{"post_id":"cjzji1scu000x0umwowwhzi89","tag_id":"cjzji1sdb00260umwoq1rwjtk","_id":"cjzji1sdd002b0umws24bpk5z"},{"post_id":"cjzji1scu000x0umwowwhzi89","tag_id":"cjzji1sdc00290umwzd0o2um7","_id":"cjzji1sdd002c0umw8j7jrc97"},{"post_id":"cjzji1scv00100umwb1561979","tag_id":"cjzji1sdd002a0umwuyzlo1f5","_id":"cjzji1sdf002f0umwlvnxrfvt"},{"post_id":"cjzji1scv00100umwb1561979","tag_id":"cjzji1sde002d0umwro797sex","_id":"cjzji1sdf002g0umwahjnnigg"},{"post_id":"cjzji1scx00140umwchvpqbjl","tag_id":"cjzji1sde002e0umwryox43fk","_id":"cjzji1sdh002j0umwqd9bbqj0"},{"post_id":"cjzji1scx00140umwchvpqbjl","tag_id":"cjzji1sdf002h0umwm4fx8skb","_id":"cjzji1sdh002k0umwu33hdkzk"},{"post_id":"cjzji1scx00140umwchvpqbjl","tag_id":"cjzji1sdg002i0umw1czq96wa","_id":"cjzji1sdh002l0umwm6kujyi5"},{"post_id":"cjzji1sei002m0umwzonrk5xg","tag_id":"cjzji1sc200050umw3t1rocwa","_id":"cjzji1sek002o0umwfepa4k98"},{"post_id":"cjzji1sei002m0umwzonrk5xg","tag_id":"cjzji1sc9000b0umwfk0erwxz","_id":"cjzji1sel002q0umw7zhr1wbf"},{"post_id":"cjzji1sej002n0umw25ie2g43","tag_id":"cjzji1sd1001g0umwiviq62ti","_id":"cjzji1sel002t0umwzhqifrbe"},{"post_id":"cjzji1sej002n0umw25ie2g43","tag_id":"cjzji1sek002p0umwhggznqiq","_id":"cjzji1sem002u0umwm98stjbx"}],"Tag":[{"name":"打包","_id":"cjzji1sc200050umw3t1rocwa"},{"name":"构建","_id":"cjzji1sc9000b0umwfk0erwxz"},{"name":"代码分离","_id":"cjzji1scl000g0umww57ts3bs"},{"name":"css","_id":"cjzji1scq000n0umwe1smb227"},{"name":"布局","_id":"cjzji1scu000w0umws5wrrqnd"},{"name":"flex","_id":"cjzji1sd0001b0umwpjm6byyb"},{"name":"js","_id":"cjzji1sd1001g0umwiviq62ti"},{"name":"babel","_id":"cjzji1sd4001o0umw4k2tdyl1"},{"name":"ts声明文件","_id":"cjzji1sd6001s0umw3147b2h0"},{"name":"git","_id":"cjzji1sd7001v0umwg0qscxj4"},{"name":"github","_id":"cjzji1sd7001y0umwzqochamw"},{"name":"table","_id":"cjzji1sda00240umwbnownbw3"},{"name":"移动端","_id":"cjzji1sdb00260umwoq1rwjtk"},{"name":"1物理像素","_id":"cjzji1sdc00290umwzd0o2um7"},{"name":"对齐","_id":"cjzji1sdd002a0umwuyzlo1f5"},{"name":"inline-block","_id":"cjzji1sde002d0umwro797sex"},{"name":"chrome","_id":"cjzji1sde002e0umwryox43fk"},{"name":"调试","_id":"cjzji1sdf002h0umwm4fx8skb"},{"name":"性能优化","_id":"cjzji1sdg002i0umw1czq96wa"},{"name":"vue","_id":"cjzji1sek002p0umwhggznqiq"}]}}