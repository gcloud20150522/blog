{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/lib/reading_progress/LICENSE","path":"lib/reading_progress/LICENSE","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/affix.js","path":"js/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/exturl.js","path":"js/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/js.cookie.js","path":"js/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/post-details.js","path":"js/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scroll-cookie.js","path":"js/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scrollspy.js","path":"js/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.all-contributorsrc","hash":"a5a536579490546f2275da03765738ceabe45584","modified":1564672322063},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1564672322063},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1564672322063},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1564672322063},{"_id":"themes/next/.gitignore","hash":"b80cec1d5e6a73d1cec382aad8046d1352a1e963","modified":1564672322063},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1564672322063},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1564672322063},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1564672322063},{"_id":"themes/next/README.md","hash":"2fcc7621e898732ef7976b89ca2511f84c577c35","modified":1564672322063},{"_id":"themes/next/_config.yml","hash":"9cafdc41dddb0f920af3f42e22f109771c2e064b","modified":1564672322063},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1564672322063},{"_id":"themes/next/gulpfile.coffee","hash":"2ba4aeddc257a74a209edf5218137010662cd5fb","modified":1564672322067},{"_id":"themes/next/package.json","hash":"170e67ca35a7c1ddc7dae50a90f6d4270143331f","modified":1564672322071},{"_id":"source/_posts/js深拷贝和浅拷贝.md","hash":"edf3c4e2186300da9c9fd5c295df4dc84d3421c9","modified":1564666590740},{"_id":"source/_posts/数据绑定.md","hash":"b7d807c2b004cfa263bd024373a0d503ad0f4163","modified":1564664771243},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1564672322039},{"_id":"themes/next/.git/config","hash":"3aa58ad32c5b537b7b64d00c59cc2787e74a3fd2","modified":1564672322039},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1564672319379},{"_id":"themes/next/.git/index","hash":"6e39057c4ee536bd25d52cc8fa3ceb66ae042a2c","modified":1564672322083},{"_id":"themes/next/.git/packed-refs","hash":"14626b94d4b3b57455d3ca2295b1a5da29775dfa","modified":1564672322039},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1564672322063},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"d91296a4c9facf6e2dc15815820b6444262f575c","modified":1564672322063},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1564672322063},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"3239625bb2573e61f7bcce27a74882a9ff7021e9","modified":1564672322063},{"_id":"themes/next/.github/auto_assign.yml","hash":"cb68a1dca1c4623448c2ca899614a9f21df1b036","modified":1564672322063},{"_id":"themes/next/.github/config.yml","hash":"8a5cbf5aa9529390fe0a782758aca9c3a02f9dcf","modified":1564672322063},{"_id":"themes/next/.github/eslint-disable-bot.yml","hash":"16541fb7b80f5ab90135db96285badb63c4d7d3e","modified":1564672322063},{"_id":"themes/next/.github/lock.yml","hash":"585d2c471047be320aa62f2b74dad797bf09c530","modified":1564672322063},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1564672322063},{"_id":"themes/next/.github/release-drafter.yml","hash":"fbd6210c4454c2db6cad1960dd03c89488d68c87","modified":1564672322063},{"_id":"themes/next/.github/stale.yml","hash":"41bf97ee86b8940a0b2e754499ec77fd2b44b717","modified":1564672322063},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1564672322063},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1564672322063},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"4094dab82cbdfdd0de117e94b508bbd5ceb3d363","modified":1564672322063},{"_id":"themes/next/docs/AUTHORS.md","hash":"9b6dea4c6ad89b1cf588251e0886c028d8f427e2","modified":1564672322063},{"_id":"themes/next/docs/DATA-FILES.md","hash":"290237970f023ad1345dcb8825fe3004de69900c","modified":1564672322063},{"_id":"themes/next/docs/INSTALLATION.md","hash":"5385246ab4756e3e26ec9fe1f6a6759812177cc4","modified":1564672322063},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"1fb2c852fad03b73882069f1ec0659db2e1f2da0","modified":1564672322063},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1564672322063},{"_id":"themes/next/docs/MATH.md","hash":"026d2cff73c22a30ea39c50783557ff4913aceac","modified":1564672322063},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"a07ca23c38f6e4dddd4b74016b30e88cd3796f75","modified":1564672322063},{"_id":"themes/next/languages/de.yml","hash":"88dcfa3e53cef1b7f858f98ca9f980179169ae4c","modified":1564672322067},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1564672322067},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1564672322067},{"_id":"themes/next/languages/es.yml","hash":"a5203c7bbae70bc40f2ee526f9e8105ca9be851e","modified":1564672322067},{"_id":"themes/next/languages/fa.yml","hash":"cc1f3a13e020e2cc666ddc57aaebc4c1ebd669d0","modified":1564672322067},{"_id":"themes/next/languages/fr.yml","hash":"c1e2e892c678920854e1f3df409118398523849e","modified":1564672322067},{"_id":"themes/next/languages/hu.yml","hash":"3b4c10c86a228da70dc4b1a1784a6f942e186032","modified":1564672322067},{"_id":"themes/next/languages/id.yml","hash":"3a9f4485e6801e0e6fae749133a52e3797760795","modified":1564672322067},{"_id":"themes/next/languages/it.yml","hash":"28ff9197a3d21e838e33bb026d8adb544320cb1a","modified":1564672322067},{"_id":"themes/next/languages/ja.yml","hash":"8f85a6500716191159f16c7f484ba61ddd16eeb6","modified":1564672322067},{"_id":"themes/next/languages/ko.yml","hash":"1df31bf037bcb6868a4bd60c49ff55eec5b8167f","modified":1564672322067},{"_id":"themes/next/languages/nl.yml","hash":"6f4a339ecc67a140f3f9c7bec369cbda6b45afd7","modified":1564672322067},{"_id":"themes/next/languages/pt-BR.yml","hash":"301a0535df5de7b585c7c9752053c41c6ef26f9b","modified":1564672322067},{"_id":"themes/next/languages/pt.yml","hash":"6d87701443e33a13574049e613f064f1eb250c95","modified":1564672322067},{"_id":"themes/next/languages/ru.yml","hash":"93872ac01074159566ee3e1738eea6e9216bab8e","modified":1564672322067},{"_id":"themes/next/languages/tr.yml","hash":"5489606e6c40c0b226a3414c8e5037aac965211d","modified":1564672322067},{"_id":"themes/next/languages/uk.yml","hash":"765ba405778f07d7ec3713606568852b04e1a862","modified":1564672322067},{"_id":"themes/next/languages/vi.yml","hash":"6a812db8606498980cd64f001e9ef2f50e124809","modified":1564672322067},{"_id":"themes/next/languages/zh-CN.yml","hash":"f311ad2cc2edba144764c36c0035b6ed0d356a53","modified":1564672322067},{"_id":"themes/next/languages/zh-HK.yml","hash":"7a5e47f561d4b6e132f7f3b09676afbf8520264e","modified":1564672322067},{"_id":"themes/next/languages/zh-TW.yml","hash":"3f3674cac8f47a9a509a7557ea1557bbfbd027e8","modified":1564672322067},{"_id":"themes/next/layout/_layout.swig","hash":"cb2e72663fb9666f5ac3c6bb3200d2e4e9731988","modified":1564672322067},{"_id":"themes/next/layout/archive.swig","hash":"014ea0b7bfbfd9bd35b0d45ee3cc04aec41bb445","modified":1564672322071},{"_id":"themes/next/layout/category.swig","hash":"fec1c414902fb40887054f0cd93f924bb3969e63","modified":1564672322071},{"_id":"themes/next/layout/index.swig","hash":"8cf3451dd2d5727920b351a8f5eefdddb5bf3638","modified":1564672322071},{"_id":"themes/next/layout/page.swig","hash":"1b63e55834ac09fc49e92072d308e4b5028e07fd","modified":1564672322071},{"_id":"themes/next/layout/post.swig","hash":"4291b34b17fc6f1c06eb69852c894913e889a774","modified":1564672322071},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1564672322071},{"_id":"themes/next/layout/tag.swig","hash":"2e72753be05d6b19795885f31831528366015399","modified":1564672322071},{"_id":"source/lib/reading_progress/.editorconfig","hash":"7d47ecd70ca58d26af4f69ff1b23034edcf4475e","modified":1564624017062},{"_id":"source/lib/reading_progress/.gitignore","hash":"09cde1060b4213a7eee528b54560777d2d3756e8","modified":1564624017066},{"_id":"source/lib/reading_progress/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1564624017066},{"_id":"source/lib/reading_progress/README.md","hash":"9b00c4ce1a739c825df4e51977f7525d2c9f6b81","modified":1564624017066},{"_id":"source/lib/reading_progress/package.json","hash":"b48a3293b45d8cab41e0ab61a64104a854f6dc94","modified":1564624017066},{"_id":"source/lib/reading_progress/reading_progress.js","hash":"ec68a79421cfba022ac53f46813d013dd48617c0","modified":1564624017066},{"_id":"source/lib/reading_progress/reading_progress.min.js","hash":"b768dc009e6d37dd952632c317f6c33e6e2d89ad","modified":1564624017066},{"_id":"source/lib/reading_progress/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1564624017066},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1564672319379},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1564672319383},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1564672319383},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1564672319383},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1564672319383},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1564672319383},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1564672319383},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1564672319383},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1564672319383},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1564672319379},{"_id":"themes/next/.git/logs/HEAD","hash":"7e53bd3c297ea717c5bce079a4ce679d9226ea4f","modified":1564672322039},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c37a60580c901c79ccb22564b228a46e06207445","modified":1564672322063},{"_id":"themes/next/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"57e1e06e845193e80c7df4a4454af28352526f7a","modified":1564672322063},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"07c423cce4157b8e2dbf60907ccbf3f18c4cf98a","modified":1564672322063},{"_id":"themes/next/.github/ISSUE_TEMPLATE/non-english.md","hash":"0b0727ff4d5180ae67f930fb4f8e9488e33eda9f","modified":1564672322063},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"67d04e3e29a2675d1a9f87d1ae6ea0769e963ff1","modified":1564672322063},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1564672322063},{"_id":"themes/next/docs/ru/README.md","hash":"932d3965d8b1a1ff653c07a0cafcdbf5892d6945","modified":1564672322063},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1564672322063},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"caa624092175d44e3d3a8c6ca23922718da2354c","modified":1564672322063},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"0dfb458370a0ffbbe37c00f53c15e3aa3e79b125","modified":1564672322063},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"2949ccf2cba5238f01a1386a9e91e646c7a22260","modified":1564672322067},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"c46f3f7496fc422207cc5954e10a2bc972b650aa","modified":1564672322067},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"c13546dd70a99a7d2d409cddf5d59f2f4d4d44a4","modified":1564672322067},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"e568a1b3c532e0ecf33cc237e1425b2579bd006d","modified":1564672322067},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"83feca62190abcca0332915ffe0eefe582573085","modified":1564672322067},{"_id":"themes/next/docs/zh-CN/README.md","hash":"79a73361b24e7fb7022992702961faacd6a2f9fe","modified":1564672322067},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"ba918bbd8faf32c28335693f03ff37c6acaff7f3","modified":1564672322067},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"78f4f989346763b799397f4a3ff398b69ffc48fc","modified":1564672322067},{"_id":"themes/next/layout/_macro/post.swig","hash":"78f1fb065bcccec7ea42616013a6ae33c2971eb2","modified":1564672322067},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"20f881a8ee2a73ebbc8ef7ef25a188e3ce2cc6ec","modified":1564672322067},{"_id":"themes/next/layout/_partials/comments.swig","hash":"f83bf66ca79aa6a9d450de8ab5c3f19ff1f94e54","modified":1564672322067},{"_id":"themes/next/layout/_partials/footer.swig","hash":"748fcb5687c2340285e5a8a82bf3f361d55ee925","modified":1564672322067},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"40e940c3213b74933e529cd64f64c1f6f512b5ca","modified":1564672322067},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"769a983fe2f77908bfc8590ff37a0d8958b47598","modified":1564672322067},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"4b0c972c44bfa7ab07604280563deb9cc3974657","modified":1564672322067},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"e3c54ae7eca24a85148ec3bfb6712abf07c418c9","modified":1564672322071},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"571115ef5f06e5d937c2d3c7cb26727f43c7feed","modified":1564672322071},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"283e78eb795f52236026434dab6a0667f14d3c08","modified":1564672322071},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1564672322071},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"20aa27fff30f703baea578e08b18d16d59ebf27e","modified":1564672322071},{"_id":"themes/next/layout/_scripts/three.swig","hash":"216849ad2503f578839c500ede529744a3abaf03","modified":1564672322071},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"b7a906521afd8cca1d425066192ef68e544be728","modified":1564672322071},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"5284f8db105f22732a6e3637a6a779d43d069935","modified":1564672322071},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"df96a541f092eb195b103cb28fbe8881b9c2f73c","modified":1564672322071},{"_id":"themes/next/layout/_third-party/facebook-sdk.swig","hash":"e7103dc133c8a6109e2a2e086c8e65ac80dbf6bb","modified":1564672322071},{"_id":"themes/next/layout/_third-party/index.swig","hash":"ede1e5947d2bace914bf42cf8623ab7cf5168eb0","modified":1564672322071},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"ccef9c8ef5406a33af56fe5493492ee8ac2bb965","modified":1564672322071},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"731018cc1ed976904770d515c48ae90e07a4219f","modified":1564672322071},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"3fc2b29c4df9213b686b5bd2584cf5d2de22b7f8","modified":1564672322071},{"_id":"themes/next/layout/_third-party/vkontakte-api.swig","hash":"adb0d6e0e4c0480b2c1249d0f5963d0de64c6721","modified":1564672322071},{"_id":"themes/next/scripts/events/core.js","hash":"a25690d8b03779f7e318108c8eace9baf6d4283a","modified":1564672322071},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"834599d2b83f06e90f8cf618cddc106fe900ba5c","modified":1564672322071},{"_id":"themes/next/scripts/filters/exturl.js","hash":"9c32675f64121ffbe454189b8e418b408f79d9c2","modified":1564672322071},{"_id":"themes/next/scripts/filters/lazyload.js","hash":"51672320fff6b39f56fe6a2881c611afe4e79b8e","modified":1564672322071},{"_id":"themes/next/scripts/filters/minify.js","hash":"727f49b825ddd4c8727f5fc6de146beecc083b87","modified":1564672322071},{"_id":"themes/next/scripts/helpers/engine.js","hash":"66fa36afd168fa43be848012e2e2aad03aa45306","modified":1564672322071},{"_id":"themes/next/scripts/helpers/font.js","hash":"53169e2d04f0c21e68beb07c212be0a6c2a9aaea","modified":1564672322071},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1564672322071},{"_id":"themes/next/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1564672322071},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"20e392b8583ba6ae5037449c2c7e191d3927641b","modified":1564672322071},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1564672322071},{"_id":"themes/next/scripts/tags/full-image.js","hash":"9003387663059d982acbe6d565c46b19e15a9586","modified":1564672322071},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"8fc05f22b88553bc1d96e0c925799cd97920fc6a","modified":1564672322071},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"60f880c1e11a7df1aee4f2e01d65451fecc0372c","modified":1564672322071},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1564672322071},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1564672322071},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1564672322071},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1564672322071},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1564672322071},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1564672322071},{"_id":"themes/next/source/css/main.styl","hash":"b11b2689eb36242ef088deb377946023559f5587","modified":1564672322075},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1564672322079},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1564672322079},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1564672322079},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1564672322079},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1564672322079},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1564672322079},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1564672322079},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1564672322079},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1564672322079},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1564672322079},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1564672322079},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1564672322079},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1564672322079},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1564672322079},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1564672322079},{"_id":"themes/next/source/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1564672322079},{"_id":"themes/next/source/js/algolia-search.js","hash":"c980038cbf83b89bad9051a29737bebc5dc27129","modified":1564672322079},{"_id":"themes/next/source/js/exturl.js","hash":"7934e9b62fac92731bc450c8a9847e17b77324ab","modified":1564672322079},{"_id":"themes/next/source/js/js.cookie.js","hash":"7919f3a96e156ca52e59b61266468f9f2a2eb97e","modified":1564672322079},{"_id":"themes/next/source/js/local-search.js","hash":"dc5c2f370c1dd4900e6fb45d1fa266cd1cf21976","modified":1564672322079},{"_id":"themes/next/source/js/motion.js","hash":"ca2965da47ba9fc5b0dde0a825c29e0817b965b9","modified":1564672322079},{"_id":"themes/next/source/js/next-boot.js","hash":"0f5eeabac85b693be73b6af74fd7493b6e493b91","modified":1564672322079},{"_id":"themes/next/source/js/post-details.js","hash":"a614a3830f7dfcd4df303c1255d558a135b3854e","modified":1564672322079},{"_id":"themes/next/source/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1564672322079},{"_id":"themes/next/source/js/scrollspy.js","hash":"e630d9b05ab6bcc9ebab92435587d5a554eb0e3b","modified":1564672322079},{"_id":"themes/next/source/js/utils.js","hash":"d0d40de8026b5b11c097e1939050bfbcae286418","modified":1564672322079},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1564672322075},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1564672322075},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1564672322075},{"_id":"source/lib/reading_progress/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1564624017046},{"_id":"source/lib/reading_progress/.git/config","hash":"f858ff51743e2e8ad94216aea6dd620c6d947584","modified":1564624017046},{"_id":"source/lib/reading_progress/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1564624015762},{"_id":"source/lib/reading_progress/.git/index","hash":"2b990b36a3751714eb12af0070135ac691b1876f","modified":1564624017066},{"_id":"source/lib/reading_progress/.git/packed-refs","hash":"9871583cbf72918b052484b6fba76ca605d9997f","modified":1564624017046},{"_id":"source/lib/reading_progress/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1564624017066},{"_id":"themes/next/.git/refs/heads/master","hash":"fee9f8f780fcd677beddcb2c85fe7bc5b4e87c1a","modified":1564672322039},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"9e959646899a1dd381c0bea870408cd392c93c70","modified":1564672322067},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"e6471f546ffa30c25a6186678ba04f4393764343","modified":1564672322067},{"_id":"themes/next/layout/_partials/analytics/busuanzi-counter.swig","hash":"6bb2a2262a6c703345343c7b200c52a8ef798c30","modified":1564672322067},{"_id":"themes/next/layout/_partials/analytics/cnzz-analytics.swig","hash":"847664d2dea3d51ac87b3e3d504b4e4d94cbd177","modified":1564672322067},{"_id":"themes/next/layout/_partials/analytics/index.swig","hash":"2925f6353934b1b2adc2808059e64dd7d220edd7","modified":1564672322067},{"_id":"themes/next/layout/_partials/analytics/tencent-analytics.swig","hash":"050ff8113af88e498f49a623799b526736852d6e","modified":1564672322067},{"_id":"themes/next/layout/_partials/analytics/tencent-mta.swig","hash":"e94186ff2085fc96c34f51a920c5bbc3e0dec659","modified":1564672322067},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"f7cf6bebca5f9513af9429c14bd3180fd398a1a9","modified":1564672322067},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"2fdad48d5b37c4473f94ea83efb6bbe2ba601618","modified":1564672322067},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"8dd7ac5ccc52848b3d0fb0f102874c1a8c1c45b6","modified":1564672322067},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"c5b7c0b919ab5be3093ae9d5921e2eb2c2bd320f","modified":1564672322067},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"e8d143e21a3de1eb7ee7735d79da1b1f119dd0d5","modified":1564672322067},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"a72e33e11df9d3639cdebab4f480e397c70deacb","modified":1564672322067},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"883ea1d024a8262eb8d3213de71c8ccb30daf095","modified":1564672322067},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"d3c25d70f0fd76121e4cacb9f8af4ccbe2a3c74d","modified":1564672322067},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"5730f4b891f1363cf281a07aedfad06268166a73","modified":1564672322067},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"e2549106ea26ac48019aa3f8023b8fdc78c0f6db","modified":1564672322067},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"40483139657cde24356c6a4033a6386b909327a9","modified":1564672322067},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"2edfaf1579ea58e15cb5583fb7962dfee9af2257","modified":1564672322067},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"d9fe715fee716f78c7976c4e8838da71439ee0e0","modified":1564672322067},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"7bce91d429216724db5e337ec64cf7f05b022c97","modified":1564672322067},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1564672322067},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1564672322067},{"_id":"themes/next/layout/_partials/share/index.swig","hash":"0817ccb248ed9aae64f30db792681af688e01795","modified":1564672322067},{"_id":"themes/next/layout/_partials/share/likely.swig","hash":"e106248f72abc5e9ade3554eaff2f7f69bdb8f6d","modified":1564672322067},{"_id":"themes/next/layout/_partials/share/needsharebutton.swig","hash":"09ae1250c1e142d251cc0e979097f1dd95e277bb","modified":1564672322067},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"84a4201867c034afbf25862b63af4a582f7086b1","modified":1564672322071},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"5b05f165547391bf231e52f56f3d925efc09bc44","modified":1564672322071},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1564672322071},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1564672322071},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"f2ff7799baac49eb9779f66e0cd083fac70b87a2","modified":1564672322071},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"509621f1a68e7ab41193a14a2c50a21aff976f9e","modified":1564672322071},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-jquery.swig","hash":"b485797073495e24bf2f0b85880d513257bfed72","modified":1564672322071},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"5dda65656900e8006173fda95faa134fd331ec95","modified":1564672322071},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"ac4f229b1d7a56c31c1fbb4fbf9e59dde5e9d4f5","modified":1564672322071},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"21d413d2b11e8f7dd86e68ad3d53672899a69527","modified":1564672322071},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"1618f1a5b02934d7f376633e39d9a58f43928168","modified":1564672322071},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"dd896587305d0f9c4eba5fdc31e72f56e1e4359e","modified":1564672322071},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"20fcbed44aede1b908bd17d7a0279b03639068b1","modified":1564672322071},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"6c9eb8b9c670f9693a8155d960f851603b30190c","modified":1564672322071},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"fdcf006e1ba2e53eab65e901b6c63159538307ef","modified":1564672322071},{"_id":"themes/next/layout/_third-party/chat/index.swig","hash":"5ab4a8b4306c837d2f8c211a9d7fdaed76fa254d","modified":1564672322071},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1564672322071},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"21cbb62243061da62e037b6307e1915f78aeda37","modified":1564672322071},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"2926cf518758895973cd60fd3b878651d04950dc","modified":1564672322071},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"d82cc93d3270dff02fb111d7a3607b26e877f740","modified":1564672322071},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d1e1e2c5d1418d0874911912078392d7c10390cc","modified":1564672322071},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"a6f6c778d1aff774e8de8b1884ae88e711ea6676","modified":1564672322071},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"3c2d2cf3388dc8bd1450303645b8cd907baee98d","modified":1564672322071},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"4514e5e83cdfe28275dfa2aaf14b51d993065f9c","modified":1564672322071},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"079910669dcc9b0606dde15c66bfdcf1c97b8119","modified":1564672322071},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b173d1e72ee6a8885da1f97239a10a048bc94d6","modified":1564672322071},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"157abdff4c5fddceae5af2631b5fff202abc0e5e","modified":1564672322071},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"b2fd17688f0433571b37704bc8df798e175e7811","modified":1564672322071},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"353da7ea00400897ae920a085aa4bee2224da50d","modified":1564672322071},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1564672322071},{"_id":"themes/next/layout/_third-party/tags/index.swig","hash":"83d0a8f71878c6b96a04ba08567b9064de6cce83","modified":1564672322071},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"5d013ed1f311540155c5e8f92465a8ef409ad561","modified":1564672322071},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"2a847dd60a509d9e20c22c2a8cbb51a74a023bb4","modified":1564672322071},{"_id":"themes/next/scripts/events/lib/config.js","hash":"2a16ee73eb04a6dd7f4527172756d8fa76c6d461","modified":1564672322071},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1564672322071},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"854fdb496df0eeb57cdc23495cc56497d5580605","modified":1564672322071},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"991cac9ba7b958c8fe30b9a15ef65d1b57b8b1c4","modified":1564672322071},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"f9f1091e99bdd5524f502796f200201c58fef9e3","modified":1564672322071},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"eb58951de242c3f4b66346c88a8b19aaf80681e5","modified":1564672322071},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"a9ebe8e80edb5e19ec4b845090d260ae9de1566a","modified":1564672322071},{"_id":"themes/next/scripts/filters/comment/facebook-comments-plugin.js","hash":"4ca1ed5ee5321cb37b35f3ffeea61439e1be33b1","modified":1564672322071},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"4505867a0598b83583f9740ecba3e4f053d18ebe","modified":1564672322071},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"71ee48847a1e54962640a4b64298ecc3e76565f8","modified":1564672322071},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"de228547847c876b8537b03619465731544252db","modified":1564672322071},{"_id":"themes/next/scripts/filters/comment/vkontakte.js","hash":"12cc4297e419d80653059129490fbf40df8ead9d","modified":1564672322071},{"_id":"themes/next/scripts/filters/comment/warn.js","hash":"a79072dfc3c0614c417ddd52127c7abd7a66455f","modified":1564672322071},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1564672322075},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2bb4c78b5da482751085beb73ab01ecd2dcbccda","modified":1564672322075},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"2198dc4554720ae09ca4929fb8dcb01be4f31bb0","modified":1564672322075},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"451f1f904df8b39015ccff5ce804c047f132b1f4","modified":1564672322075},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"4c101c21b4f2712e47dba869ccc116b245fb0909","modified":1564672322075},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"db52bce619bb848189e83b7bfabd1b2a06fd5578","modified":1564672322075},{"_id":"themes/next/source/css/_variables/base.styl","hash":"ea5adf4e5a9ba6dd07a74613f4b62f726fc639b7","modified":1564672322075},{"_id":"themes/next/source/js/schemes/muse.js","hash":"718dae82e96269848d06d3a1de64d2ef3301139f","modified":1564672322079},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"aa699718261b87e380b1425b069df4b657d94739","modified":1564672322079},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1564672322079},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1564672322079},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1564672322079},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1564672322079},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1564672322079},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1564672322083},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1564672322083},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1564672322083},{"_id":"themes/next/source/lib/jquery/index.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1564672322083},{"_id":"source/lib/reading_progress/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1564624015766},{"_id":"source/lib/reading_progress/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1564624015770},{"_id":"source/lib/reading_progress/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1564624015766},{"_id":"source/lib/reading_progress/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1564624015766},{"_id":"source/lib/reading_progress/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1564624015766},{"_id":"source/lib/reading_progress/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1564624015770},{"_id":"source/lib/reading_progress/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1564624015766},{"_id":"source/lib/reading_progress/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1564624015766},{"_id":"source/lib/reading_progress/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1564624015766},{"_id":"source/lib/reading_progress/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1564624015766},{"_id":"source/lib/reading_progress/.git/logs/HEAD","hash":"01d3427e1dd28bdb24215bc45df113ffec83d291","modified":1564624017046},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"7e53bd3c297ea717c5bce079a4ce679d9226ea4f","modified":1564672322039},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1564672322039},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"1c178041435de8076a1ce31304184007a837fcbb","modified":1564672322071},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"58a80925a845d590d4a9736ae92a6b03dc7c575f","modified":1564672322071},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"2b14d2a3f814c9dbd92c00835878925f9f10ca28","modified":1564672322071},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ed26575eb5fa3e1a33ce246c4e117f817caae79c","modified":1564672322071},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"1960299fe99163f44f1cd90210eea1ef4b2cb723","modified":1564672322071},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"390993b47942a47d23ed8904c92e0186b6e9af29","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"4bec027d48ebb95acd5f5786456ee1eb19a23ee4","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"202ee1f1f8e64d8292df16f40ee176ff4e5d7e71","modified":1564672322075},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"bdf464ee7972a007949acbe555d82e57621b3714","modified":1564672322075},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"442f7598991b92ec8bc3ce5343e18730da92e4fb","modified":1564672322075},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1238932450efc3f4c2e25c704794437ac78e6164","modified":1564672322075},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"4c4986b704c3cc3167c3c2a69c454446cf152528","modified":1564672322075},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"4f7140cc0db08b47a25c4c7aad71047d433051a1","modified":1564672322075},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"e9e3bcef3f9a3541a11e5f3edfed2a3d13d22b80","modified":1564672322075},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"173fe462331ba12d612f7ade8f18c0f9e259fa5d","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"9b3a1e0342f261f642d510e0f0cbe06fe2370e79","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"71d75fa309cf5b96d876da536f57c047e57afcff","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"87d19a45db10689aae9a09736efd1eb896a35b3d","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"3462ffd270f3e218e0a8362262466e79d731f975","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f87b7a7d30e9111f7af269dcf7bd8c1893343fe8","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"d46c61153bdba976ea785431d5d4b2c2a47c39b2","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"49c6c656ed6e7348f967c01f8302fe1f6a5e3cd9","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"54c5e23ec3dcbbc77848ededba76e861cf0f4719","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"bdc0ada1eec3c1d625bfe2c148cdfc1b3460fa32","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"0138165021be463f19e092f8972ac41aea3fb68a","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"45f03b3bb80e32fd5648ce723055d7552b87d97c","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"2fa573d7c04b8fa4717fc50265d7e4273f4325ea","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"cbeb23488b707418a60b59ef8d6abc4f0d671959","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"2e0681fa265a55f0259969109a3b9e3788bf516c","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ce3820f199b54d09f7216a5df14d4492736c4520","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"4b976940b728a78428e88f40acf9a801223af88a","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"10b4794ba62726fc052c74d786d962ed79d0780b","modified":1564672322075},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1564672322079},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1564672322079},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1564672322079},{"_id":"themes/next/.git/objects/pack/pack-961be7703e9e13e3f39510335fb8200530a97e07.idx","hash":"1cc1b7224059fc6f63272e70e60e482171b96423","modified":1564672321435},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1564672322083},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1564672322083},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1564672322083},{"_id":"source/lib/reading_progress/.git/objects/00/4fa4280892c7d18f6151fac22daf51344c02ea","hash":"7a81ed1087c3792f37bd83137d4034179c911627","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/01/36e1990fcbef0586e0bd4b9d90b96900dcd575","hash":"37ac2f94a41384f4cb66cd74c8313099367a5603","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/01/9a385ce3e8b0232ee5edfa6b4e1dcd44cf142e","hash":"6894d6df0722077c5d21d116f33046625cd57ab8","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/03/f74f308aba6eaa459b8e5b1c7e7203aa9d06ef","hash":"fafadfedfbd5b6b7d49061ee85d3568c791e0f3a","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/08/4d73e711ab990007314dab66ac8da236a98212","hash":"aca52af21085b7a579b275a1e7bb5f1a8818e3d4","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/0f/1d02f84180d20e5abcaabc0c1bd312a873867b","hash":"192e0e348a38739f606fdef8bd5f710339067ff6","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/2b/c9c88e86c252b037a36df9a3d3df519b254bfc","hash":"e647f9721e4f2e1cd52bfff3c80683b787f76a11","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/2d/488e7ac12f9be4cba8a7a383e972449b4ecef7","hash":"e477cea6ada0896804b0e8dab23c9d56825a0ece","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/36/58085a9181df88f19f04603b28f6ea21d199cc","hash":"6a467dd51d39b28c1af9c25869e25c6821f6602a","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/48/1ebe947f06e440e41c1a971be0844e852c1d37","hash":"61fea90ca1824db58df6cfc662bc5b371db02224","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/71/4aebae4e17e00cdb0e82893d9fa39d35b20b59","hash":"d09daa7d244ee40035e6eb67f13867182fb8af86","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/72/14afbfc63460dc013ba6368e8c0886597db666","hash":"f67bc8964bd60f5f78fd2437ae946b4e4021a8d6","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/82/2aa7ea95e2f40a1c9808fcdba0353650781cf9","hash":"07db481043efdac756c39b1a1c9f11048787bb1a","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/83/d5a97b3daaa59cccb44af55f6723f431f2e94a","hash":"448c16fa4f53e5123838d4c3593dcfb15f309905","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/8e/0a48f30df2d542c8e86197067f80ce5f794583","hash":"02367707e47c2549ef585f3b2da72c864d6a8307","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/8f/ca1e70cfeea939105e31d7d17f7c3516120b30","hash":"312d55b1a7fbdcc14c54b3805f0827fc42ad94ed","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/98/a2041bc808f55bbcb9d8b53560e22558338bda","hash":"ebb53379aa2d77ea0832973fa3e44846df0f170f","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/a2/7bba2bf42630fc03150b64fc74f2a29c151a27","hash":"b1afe600ba94298a2905a2cf64c900f5954cc146","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/a5/3476a996e477ae4494a5b47aff4237b9859a73","hash":"cd32f255f625f6325f13df5acdef0df20c1a982a","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/a5/f44e93420f9699fc1098208f41870dde883800","hash":"bdb633a7512f31f9f3ce8c71d8cfcb6b12fb02db","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/a8/63332915ebfd107ca4418c25c80674875c422b","hash":"f12e708237bcf98c072e73e45f1542cfb5646839","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/ae/aa7a68a7131bd03e0bce06f45bfdfa1cd93587","hash":"d7d37380ba502a4050834df40227d612cf911595","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/b1/97881becc7883ad3d3e37cbc6b33f29ef89512","hash":"c044f51aeff15821889c1a2b036ee99b742a35db","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/b2/6b015c6a0aacd5fcbd3fd3a09b0b216855f35c","hash":"6924e4c4558366a76578a2497d2fca15ef39a9f8","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/b2/a5ab8715685d92c3dcef47eda3d50a6b6cd8d6","hash":"bb5b934846b6e900f28cdddae374f67b7879a7da","modified":1564624017042},{"_id":"source/lib/reading_progress/.git/objects/b6/eda56cb9647d239b26d86f579204cbccf745fe","hash":"12e479d3dfe08df6f9d4d56be2f0a17d9720d846","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/c0/018cb7262951a7eea4001bea16bf6c1db1de0e","hash":"b54299894dbbf00b3187ae3e16a480a91ca75e73","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/c7/8ceb135b768a369ded42f77d4db3f6363bde20","hash":"aa90e157f2a043dad6017bab2e4aa699f6236a63","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/d1/94060fce08431ebef4cb5f4c02739b913373cb","hash":"b9022b117b03703b5fa8af85fc076b692bde33cf","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/d4/fae8aef4e5c5f67c66bed49f498bda90b633ba","hash":"73c8866ae2b25b8891487999ea6e04020450fbd7","modified":1564624017042},{"_id":"source/lib/reading_progress/.git/objects/e5/dc795cdf7d9163cc736be938a9707f73869c9f","hash":"57163dfa4eebe09d57ede37ee259b7cbb2b1e643","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/f0/acd06a59665dabfb6eb0608f0a797fdcd44158","hash":"f85f3dbe326b8752f6e32c7169ed3b409f4167b7","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/f1/dcdfc585f60cb1614c480c3b06a1632b1b6d8e","hash":"606959b7d91b2ed28c670c607623ce36ab3a0c07","modified":1564624017034},{"_id":"source/lib/reading_progress/.git/objects/f4/5d8f110c3034162a1091dafe4b03d2e56b323e","hash":"963dad8248030a8d7b185f4726e40a65a0583c0e","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/f6/8184f97255dfd504e22775df6450edb9b51d70","hash":"b0a36dcf81780a9f82db6318daa065200e16efee","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/objects/fc/911ed1517240b7722c388cbb78810da207728c","hash":"63d9651501295514a7091729938eed86711dc134","modified":1564624017038},{"_id":"source/lib/reading_progress/.git/refs/heads/master","hash":"735557d7b92dc3ddc79409c77faa88ffc46b028a","modified":1564624017046},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"7e53bd3c297ea717c5bce079a4ce679d9226ea4f","modified":1564672322039},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"0442cccb1111eec0d38357fba810319d781b7ef9","modified":1564672322071},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"172a83db23cb3f8a95e7cd6046befbc841caa869","modified":1564672322071},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"4c7140804d1ca65396959a3e8f8b79b9c4d3233f","modified":1564672322071},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1564672322071},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"cf37dc0ef20a8423a28b056458e1fa609875789a","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"dada73ae88f01fab2ab4d2c83eddfc558de2110a","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"080f22922d89ca714a2463d6eaedfd4cb68e8aef","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/highlight/copy-code.styl","hash":"d42c19193bd6d398cd1196a2848659c2b63b17d7","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"d3592aeb40f0db28003aa9db51b0e9d8c6f5de22","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"e0a3ac2cfecc60736d4a97af743deeb67b10ef00","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"a67dc85f6d158dac20e951ab55988ff7e9e1739b","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"64f224aa8a57cb9c0788ef8ac99058b05ce84868","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"1f217159862b12a89350e11b5097a8f3031af28f","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"621dc55fe935afe68a19f67b7447524292bc7e56","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"0291a43444531f112d156b9ed4d039c3c7d40a77","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"7cee1dc30f323e9f46e1fd4cf61c1a3d4cebb8b0","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"f96b241dea210e494b9173be76cce65faee7157a","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"bb892e5934a3b525afd1e578db991b747ea4c1eb","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"8b0dde1df553a5a2f5e0765e4e4ce48e9ab2c90e","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"42ed5e8c6c50f68278de24fe3caeea38919deb55","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2e2a09dddd2a394a635bcefb6207b6cddcb784c7","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"c898a67edb271c26f81e98acab93299a99fe3b95","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"fdebe803d61e781883453d6301b7e2bcf5a8ec05","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"70d13702896e03013f694f89d5a68adbf0fff4af","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"81516d03154bf423667384e74b9ac2940e52ff64","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"6d379b38cab56666e24463a7a4d52006e232a8b1","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"dcf801bd2478e125dffc0e23c0e720d048cf580f","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"863906b9bbb54365feb798db4d44be4ee926b6a2","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2ef546b4cfa5038ebb050c592c5135bbeb51af41","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"9b3ff4aa24069eab0e9771437013f45e450d4217","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"cd7ab38366a73edf3e7576d2629339660080b6f6","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"1d9f17a59b030dd05732ccdc5b187705f0353130","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"8fc3facb9e9d4dae2578d0a271648d997a7f9bf3","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"c09f780d6900354a647f26fa9da78b46c108ddee","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"b2eca1259b9df8df81c5768bbb9b7ef65826e360","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"bfa93a958115ddd562cd10f74b2eb887b6d3f187","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"92381084e1aaf6798f058668aacef15bf1721739","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"02e5a998748a67fa885fb06fae242bcf3f2786fb","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"0527bc64708a9446dc7bbb2c7e39ab3a61251c26","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"067f4e24628b69c9ba63d9ac5b60652b0021f90a","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"5d63f7479ee0f645e7538c60e827036fad74766d","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"78d309e22206a4addda3c393282518dae02250ed","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"278c31ed96474cd8a2ba465ed4131327e9d598bd","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"108ca96248f07205b5d98d9b82fe29e1ac94eff5","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"605dd6cc489fae4c45ba9b6782355691ec0d3245","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"90edaf377646093a07ea4e26accb861be9ebbb2b","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"438f3f7209fa6b8ab092a6f200a8c8c009565291","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"c2fc1a5105d6691d680f7b77b9301db416ebac8b","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"85b8606763f4177d2f9a11c1909a21ab1ae2011c","modified":1564672322075},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"d048206fad5ace7f8df16cbc0b074b46ade16f81","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"dd55feb43312489b5ec5692cc9d83ad150d7b389","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/_sidebar.styl","hash":"1c3371551dadb86a4bf662c1adaa0dc2d2654ff7","modified":1564672322075},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"a29de6af7503a854e962eca8a3b8b911525ef2e5","modified":1564672322075},{"_id":"source/lib/reading_progress/.git/logs/refs/heads/master","hash":"01d3427e1dd28bdb24215bc45df113ffec83d291","modified":1564624017046},{"_id":"source/lib/reading_progress/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1564624017046},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1564672322083},{"_id":"source/lib/reading_progress/.git/logs/refs/remotes/origin/HEAD","hash":"01d3427e1dd28bdb24215bc45df113ffec83d291","modified":1564624017046},{"_id":"themes/next/.git/objects/pack/pack-961be7703e9e13e3f39510335fb8200530a97e07.pack","hash":"5e3d3229fcb46feb6d85ce7cdce8538cc40d23f6","modified":1564672321435},{"_id":"public/lib/reading_progress/package.json","hash":"cea012cedf515446619a7590529b2d3d30f109b9","modified":1564676496479},{"_id":"public/lib/reading_progress/reading_progress.js","hash":"ec68a79421cfba022ac53f46813d013dd48617c0","modified":1564676496480},{"_id":"public/lib/reading_progress/reading_progress.min.js","hash":"856147b2d2343badd35eb9502756b954b6afe1f1","modified":1564676496480},{"_id":"public/lib/reading_progress/renovate.json","hash":"94990e0ad04ce4a7c6f0ac3543318d9e02db1264","modified":1564676496482},{"_id":"public/lib/reading_progress/README.html","hash":"b2b5a1e74c9881d8e7d4025a2f09ebb62b8ba158","modified":1564676496501},{"_id":"public/categories/前端/index.html","hash":"43411efab8da26091b751728ce0a249ef18e3e30","modified":1564676496502},{"_id":"public/categories/javascript/index.html","hash":"63cd2c9c5dea64c495a8fa65deaeafbfeb2d6948","modified":1564676496512},{"_id":"public/tags/js/index.html","hash":"5e0eb4557ee31ab580bd244c820497d4fe975a55","modified":1564676496512},{"_id":"public/tags/js-vue/index.html","hash":"5f4633d864d5c062e59ea99ec374dface0368e39","modified":1564676496513},{"_id":"public/archives/index.html","hash":"1aa9aaaa5ca1dfa680e7ec4c762437497695d5a5","modified":1564676496513},{"_id":"public/archives/2016/index.html","hash":"951edbfea6118d2eeb382bd369add4ae769224fb","modified":1564676496513},{"_id":"public/archives/2016/05/index.html","hash":"a2844b0f9d5085a7505e7bb0628377589f698c56","modified":1564676496513},{"_id":"public/archives/2017/index.html","hash":"a526a3c37dfde783dda15c3f19ab30662fd86577","modified":1564676496513},{"_id":"public/archives/2017/07/index.html","hash":"351da0a1ff692447bc05fd5181f239f3f5470ba6","modified":1564676496513},{"_id":"public/2017/07/31/数据绑定/index.html","hash":"516619d04c2cf8d2c583d4b98a25ce32b96488e9","modified":1564676496513},{"_id":"public/2016/05/01/js深拷贝和浅拷贝/index.html","hash":"3dae9556f101be4f23e5c17baa81b2629241e88e","modified":1564676496513},{"_id":"public/index.html","hash":"bedff6dc464abf6a3db286c2492520a679437dc6","modified":1564676496516}],"Category":[{"name":"前端","_id":"cjystiu7q00011olyq6m64ddy"},{"name":"javascript","_id":"cjystiu9p00061olya8xjvruq"}],"Data":[],"Page":[{"_content":"<h1 align=\"center\">Reading Progress for <a href=\"https://github.com/theme-next\">NexT</a></h1>\n\n<h1 align=\"center\">Installation</h1>\n\n<h2 align=\"center\">Step 1 &rarr; Go to NexT dir</h2>\n\nChange dir to **NexT** directory. There must be `layout`, `source`, `languages` and other directories:\n\n```sh\n$ cd themes/next\n$ ls\nbower.json  _config.yml  docs  gulpfile.coffee  languages  layout  LICENSE.md  package.json  README.md  scripts  source  test\n```\n\n<h2 align=\"center\">Step 2 &rarr; Get module</h2>\n\nInstall module to `source/lib` directory:\n\n```sh\n$ git clone https://github.com/theme-next/theme-next-reading-progress source/lib/reading_progress\n```\n\n<h2 align=\"center\">Step 3 &rarr; Set it up</h2>\n\nEnable module in **NexT** `_config.yml` file:\n\n```yml\nreading_progress:\n  enable: true\n  color: \"#37c6c0\"\n  height: 2px\n```\n\n<h1 align=\"center\">Update</h1>\n\n```sh\n$ cd themes/next/source/lib/reading_progress\n$ git pull\n```\n","source":"lib/reading_progress/README.md","raw":"<h1 align=\"center\">Reading Progress for <a href=\"https://github.com/theme-next\">NexT</a></h1>\n\n<h1 align=\"center\">Installation</h1>\n\n<h2 align=\"center\">Step 1 &rarr; Go to NexT dir</h2>\n\nChange dir to **NexT** directory. There must be `layout`, `source`, `languages` and other directories:\n\n```sh\n$ cd themes/next\n$ ls\nbower.json  _config.yml  docs  gulpfile.coffee  languages  layout  LICENSE.md  package.json  README.md  scripts  source  test\n```\n\n<h2 align=\"center\">Step 2 &rarr; Get module</h2>\n\nInstall module to `source/lib` directory:\n\n```sh\n$ git clone https://github.com/theme-next/theme-next-reading-progress source/lib/reading_progress\n```\n\n<h2 align=\"center\">Step 3 &rarr; Set it up</h2>\n\nEnable module in **NexT** `_config.yml` file:\n\n```yml\nreading_progress:\n  enable: true\n  color: \"#37c6c0\"\n  height: 2px\n```\n\n<h1 align=\"center\">Update</h1>\n\n```sh\n$ cd themes/next/source/lib/reading_progress\n$ git pull\n```\n","date":"2019-08-01T01:46:57.066Z","updated":"2019-08-01T01:46:57.066Z","path":"lib/reading_progress/README.html","title":"","comments":1,"layout":"page","_id":"cjystiuc3000a1olyk5yyqyh7","content":"<h1 align=\"center\">Reading Progress for <a href=\"https://github.com/theme-next\" target=\"_blank\" rel=\"noopener\">NexT</a></h1>\n\n<h1 align=\"center\">Installation</h1>\n\n<h2 align=\"center\">Step 1 &rarr; Go to NexT dir</h2>\n\n<p>Change dir to <strong>NexT</strong> directory. There must be <code>layout</code>, <code>source</code>, <code>languages</code> and other directories:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> themes/next</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">bower.json  _config.yml  docs  gulpfile.coffee  languages  layout  LICENSE.md  package.json  README.md  scripts  <span class=\"built_in\">source</span>  <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n\n<h2 align=\"center\">Step 2 &rarr; Get module</h2>\n\n<p>Install module to <code>source/lib</code> directory:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/theme-next/theme-next-reading-progress <span class=\"built_in\">source</span>/lib/reading_progress</span><br></pre></td></tr></table></figure>\n\n<h2 align=\"center\">Step 3 &rarr; Set it up</h2>\n\n<p>Enable module in <strong>NexT</strong> <code>_config.yml</code> file:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">reading_progress:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  color:</span> <span class=\"string\">\"#37c6c0\"</span></span><br><span class=\"line\"><span class=\"attr\">  height:</span> <span class=\"number\">2</span><span class=\"string\">px</span></span><br></pre></td></tr></table></figure>\n\n<h1 align=\"center\">Update</h1>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> themes/next/<span class=\"built_in\">source</span>/lib/reading_progress</span><br><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 align=\"center\">Reading Progress for <a href=\"https://github.com/theme-next\" target=\"_blank\" rel=\"noopener\">NexT</a></h1>\n\n<h1 align=\"center\">Installation</h1>\n\n<h2 align=\"center\">Step 1 &rarr; Go to NexT dir</h2>\n\n<p>Change dir to <strong>NexT</strong> directory. There must be <code>layout</code>, <code>source</code>, <code>languages</code> and other directories:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> themes/next</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">bower.json  _config.yml  docs  gulpfile.coffee  languages  layout  LICENSE.md  package.json  README.md  scripts  <span class=\"built_in\">source</span>  <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n\n<h2 align=\"center\">Step 2 &rarr; Get module</h2>\n\n<p>Install module to <code>source/lib</code> directory:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/theme-next/theme-next-reading-progress <span class=\"built_in\">source</span>/lib/reading_progress</span><br></pre></td></tr></table></figure>\n\n<h2 align=\"center\">Step 3 &rarr; Set it up</h2>\n\n<p>Enable module in <strong>NexT</strong> <code>_config.yml</code> file:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">reading_progress:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  color:</span> <span class=\"string\">\"#37c6c0\"</span></span><br><span class=\"line\"><span class=\"attr\">  height:</span> <span class=\"number\">2</span><span class=\"string\">px</span></span><br></pre></td></tr></table></figure>\n\n<h1 align=\"center\">Update</h1>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> themes/next/<span class=\"built_in\">source</span>/lib/reading_progress</span><br><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n\n"},{"_content":"{\n  \"name\": \"theme-next-reading-progress\",\n  \"version\": \"1.2.0\",\n  \"description\": \"<h1 align=\\\"center\\\">Reading Progress for <a href=\\\"https://github.com/theme-next\\\">NexT</a></h1>\",\n  \"main\": \"reading_progress.js\",\n  \"scripts\": {\n    \"uglify\": \"uglifyjs --compress --mangle -o reading_progress.min.js -- reading_progress.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/theme-next/theme-next-reading-progress.git\"\n  },\n  \"author\": \"theme-next\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/theme-next/theme-next-reading-progress/issues\"\n  },\n  \"homepage\": \"https://github.com/theme-next/theme-next-reading-progress#readme\",\n  \"dependencies\": {\n    \"uglify-js\": \"^3.3.9\"\n  }\n}\n","source":"lib/reading_progress/package.json","raw":"{\n  \"name\": \"theme-next-reading-progress\",\n  \"version\": \"1.2.0\",\n  \"description\": \"<h1 align=\\\"center\\\">Reading Progress for <a href=\\\"https://github.com/theme-next\\\">NexT</a></h1>\",\n  \"main\": \"reading_progress.js\",\n  \"scripts\": {\n    \"uglify\": \"uglifyjs --compress --mangle -o reading_progress.min.js -- reading_progress.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/theme-next/theme-next-reading-progress.git\"\n  },\n  \"author\": \"theme-next\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/theme-next/theme-next-reading-progress/issues\"\n  },\n  \"homepage\": \"https://github.com/theme-next/theme-next-reading-progress#readme\",\n  \"dependencies\": {\n    \"uglify-js\": \"^3.3.9\"\n  }\n}\n","date":"2019-08-01T01:46:57.066Z","updated":"2019-08-01T01:46:57.066Z","path":"lib/reading_progress/package.json","layout":"false","title":"","comments":1,"_id":"cjystiuc9000b1oly24ctim0n","content":"{\"name\":\"theme-next-reading-progress\",\"version\":\"1.2.0\",\"description\":\"<h1 align=\"\\\"center\\\"\">Reading Progress for <a href=\"\\\"https://github.com/theme-next\\\"\">NexT</a></h1>\",\"main\":\"reading_progress.js\",\"scripts\":{\"uglify\":\"uglifyjs --compress --mangle -o reading_progress.min.js -- reading_progress.js\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/theme-next/theme-next-reading-progress.git\"},\"author\":\"theme-next\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/theme-next/theme-next-reading-progress/issues\"},\"homepage\":\"https://github.com/theme-next/theme-next-reading-progress#readme\",\"dependencies\":{\"uglify-js\":\"^3.3.9\"}}","site":{"data":{}},"excerpt":"","more":"{\"name\":\"theme-next-reading-progress\",\"version\":\"1.2.0\",\"description\":\"<h1 align=\"\\\"center\\\"\">Reading Progress for <a href=\"\\\"https://github.com/theme-next\\\"\">NexT</a></h1>\",\"main\":\"reading_progress.js\",\"scripts\":{\"uglify\":\"uglifyjs --compress --mangle -o reading_progress.min.js -- reading_progress.js\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/theme-next/theme-next-reading-progress.git\"},\"author\":\"theme-next\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/theme-next/theme-next-reading-progress/issues\"},\"homepage\":\"https://github.com/theme-next/theme-next-reading-progress#readme\",\"dependencies\":{\"uglify-js\":\"^3.3.9\"}}"},{"_content":";(function() {\n\tvar $bar = $('.reading-progress-bar')\n\tif (!$bar.length) return //no progress bar found\n\tvar supportsPassive = false\n\ttry {\n\t\tvar opts = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupportsPassive = true\n\t\t\t}\n\t\t})\n\t\twindow.addEventListener('test', $.noop, opts)\n\t\twindow.removeEventListener('test', $.noop)\n\t} catch (e) {}\n\tvar $w = $(window)\n\tvar $d = $(document)\n\t$d.ready(function() {\n\t\twindow.addEventListener(\n\t\t\t'scroll',\n\t\t\tfunction() {\n\t\t\t\tvar wh = $w.height()\n\t\t\t\tvar dh = $d.height()\n\t\t\t\tvar st = $w.scrollTop()\n\t\t\t\tvar percent = (st / (dh - wh)) * 100\n\t\t\t\tpercent = percent > 100 ? 100 : percent < 0 ? 0 : percent\n\t\t\t\t$bar.css('width', percent + '%')\n\t\t\t},\n\t\t\tsupportsPassive ? { passive: true } : false\n\t\t)\n\t})\n})()\n","source":"lib/reading_progress/reading_progress.js","raw":";(function() {\n\tvar $bar = $('.reading-progress-bar')\n\tif (!$bar.length) return //no progress bar found\n\tvar supportsPassive = false\n\ttry {\n\t\tvar opts = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupportsPassive = true\n\t\t\t}\n\t\t})\n\t\twindow.addEventListener('test', $.noop, opts)\n\t\twindow.removeEventListener('test', $.noop)\n\t} catch (e) {}\n\tvar $w = $(window)\n\tvar $d = $(document)\n\t$d.ready(function() {\n\t\twindow.addEventListener(\n\t\t\t'scroll',\n\t\t\tfunction() {\n\t\t\t\tvar wh = $w.height()\n\t\t\t\tvar dh = $d.height()\n\t\t\t\tvar st = $w.scrollTop()\n\t\t\t\tvar percent = (st / (dh - wh)) * 100\n\t\t\t\tpercent = percent > 100 ? 100 : percent < 0 ? 0 : percent\n\t\t\t\t$bar.css('width', percent + '%')\n\t\t\t},\n\t\t\tsupportsPassive ? { passive: true } : false\n\t\t)\n\t})\n})()\n","date":"2019-08-01T01:46:57.066Z","updated":"2019-08-01T01:46:57.066Z","path":"lib/reading_progress/reading_progress.js","layout":"false","title":"","comments":1,"_id":"cjystiuca000c1oly16yzkqp2","content":";(function() {\n\tvar $bar = $('.reading-progress-bar')\n\tif (!$bar.length) return //no progress bar found\n\tvar supportsPassive = false\n\ttry {\n\t\tvar opts = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupportsPassive = true\n\t\t\t}\n\t\t})\n\t\twindow.addEventListener('test', $.noop, opts)\n\t\twindow.removeEventListener('test', $.noop)\n\t} catch (e) {}\n\tvar $w = $(window)\n\tvar $d = $(document)\n\t$d.ready(function() {\n\t\twindow.addEventListener(\n\t\t\t'scroll',\n\t\t\tfunction() {\n\t\t\t\tvar wh = $w.height()\n\t\t\t\tvar dh = $d.height()\n\t\t\t\tvar st = $w.scrollTop()\n\t\t\t\tvar percent = (st / (dh - wh)) * 100\n\t\t\t\tpercent = percent > 100 ? 100 : percent < 0 ? 0 : percent\n\t\t\t\t$bar.css('width', percent + '%')\n\t\t\t},\n\t\t\tsupportsPassive ? { passive: true } : false\n\t\t)\n\t})\n})()\n","site":{"data":{}},"excerpt":"","more":";(function() {\n\tvar $bar = $('.reading-progress-bar')\n\tif (!$bar.length) return //no progress bar found\n\tvar supportsPassive = false\n\ttry {\n\t\tvar opts = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupportsPassive = true\n\t\t\t}\n\t\t})\n\t\twindow.addEventListener('test', $.noop, opts)\n\t\twindow.removeEventListener('test', $.noop)\n\t} catch (e) {}\n\tvar $w = $(window)\n\tvar $d = $(document)\n\t$d.ready(function() {\n\t\twindow.addEventListener(\n\t\t\t'scroll',\n\t\t\tfunction() {\n\t\t\t\tvar wh = $w.height()\n\t\t\t\tvar dh = $d.height()\n\t\t\t\tvar st = $w.scrollTop()\n\t\t\t\tvar percent = (st / (dh - wh)) * 100\n\t\t\t\tpercent = percent > 100 ? 100 : percent < 0 ? 0 : percent\n\t\t\t\t$bar.css('width', percent + '%')\n\t\t\t},\n\t\t\tsupportsPassive ? { passive: true } : false\n\t\t)\n\t})\n})()\n"},{"_content":"!function(){var e=$(\".reading-progress-bar\");if(e.length){var n=!1;try{var t=Object.defineProperty({},\"passive\",{get:function(){n=!0}});window.addEventListener(\"test\",$.noop,t),window.removeEventListener(\"test\",$.noop)}catch(e){}var i=$(window),o=$(document);o.ready(function(){window.addEventListener(\"scroll\",function(){var n=i.height(),t=o.height(),r=i.scrollTop()/(t-n)*100;r=r>100?100:r<0?0:r,e.css(\"width\",r+\"%\")},!!n&&{passive:!0})})}}();","source":"lib/reading_progress/reading_progress.min.js","raw":"!function(){var e=$(\".reading-progress-bar\");if(e.length){var n=!1;try{var t=Object.defineProperty({},\"passive\",{get:function(){n=!0}});window.addEventListener(\"test\",$.noop,t),window.removeEventListener(\"test\",$.noop)}catch(e){}var i=$(window),o=$(document);o.ready(function(){window.addEventListener(\"scroll\",function(){var n=i.height(),t=o.height(),r=i.scrollTop()/(t-n)*100;r=r>100?100:r<0?0:r,e.css(\"width\",r+\"%\")},!!n&&{passive:!0})})}}();","date":"2019-08-01T01:46:57.066Z","updated":"2019-08-01T01:46:57.066Z","path":"lib/reading_progress/reading_progress.min.js","layout":"false","title":"","comments":1,"_id":"cjystiucc000d1olylvwjxrtw","content":"!function(){var e=$(\".reading-progress-bar\");if(e.length){var n=!1;try{var t=Object.defineProperty({},\"passive\",{get:function(){n=!0}});window.addEventListener(\"test\",$.noop,t),window.removeEventListener(\"test\",$.noop)}catch(e){}var i=$(window),o=$(document);o.ready(function(){window.addEventListener(\"scroll\",function(){var n=i.height(),t=o.height(),r=i.scrollTop()/(t-n)*100;r=r>100?100:r","site":{"data":{}},"excerpt":"","more":"!function(){var e=$(\".reading-progress-bar\");if(e.length){var n=!1;try{var t=Object.defineProperty({},\"passive\",{get:function(){n=!0}});window.addEventListener(\"test\",$.noop,t),window.removeEventListener(\"test\",$.noop)}catch(e){}var i=$(window),o=$(document);o.ready(function(){window.addEventListener(\"scroll\",function(){var n=i.height(),t=o.height(),r=i.scrollTop()/(t-n)*100;r=r>100?100:r"},{"_content":"{\n  \"extends\": [\n    \"config:base\"\n  ]\n}\n","source":"lib/reading_progress/renovate.json","raw":"{\n  \"extends\": [\n    \"config:base\"\n  ]\n}\n","date":"2019-08-01T01:46:57.066Z","updated":"2019-08-01T01:46:57.066Z","path":"lib/reading_progress/renovate.json","layout":"false","title":"","comments":1,"_id":"cjystiucd000e1oly3y113zwz","content":"{\"extends\":[\"config:base\"]}","site":{"data":{}},"excerpt":"","more":"{\"extends\":[\"config:base\"]}"}],"Post":[{"title":"js深拷贝和浅拷贝","date":"2016-05-01T23:54:51.000Z","_content":"\n\n### 一、数组的深浅拷贝\n\n>在使用JavaScript对数组进行操作的时候，我们经常需要将数组进行备份，事实证明如果只是简单的将它赋予其他变量，那么我们只要更改其中的任何一个，然后其他的也会跟着改变，这就导致了问题的发生。\n\n    var arr = [\"One\",\"Two\",\"Three\"];\n    var arrto = arr;\n    arrto[1] = \"test\";\n    document.writeln(\"数组的原始值：\" + arr + \"<br />\");//Export:数组的原始值：One,test,Three\n    document.writeln(\"数组的新值：\" + arrto + \"<br />\");//Export:数组的新值：One,test,Three\n\n像上面的这种直接赋值的方式就是浅拷贝，很多时候，这样并不是我们想要得到的结果，其实我们想要的是arr的值不变，不是吗？ \n\n方法一：js的slice函数 \n    \n    对于array对象的slice函数，\n    返回一个数组的一段。（仍为数组）\n    arrayObj.slice(start, [end])\n    参数\n    arrayObj\n    必选项。一个 Array 对象。\n    start\n    必选项。arrayObj 中所指定的部分的开始元素是从零开始计算的下标。\n    end\n    可选项。arrayObj 中所指定的部分的结束元素是从零开始计算的下标。\n    说明\n    slice 方法返回一个 Array 对象，其中包含了 arrayObj 的指定部分。\n    slice 方法一直复制到 end 所指定的元素，但是不包括该元素。如果 start 为负，将它作为 length + start处理，此处 length 为数组的长度。如果 end 为负，就将它作为 length + end 处理，此处 length 为数组的长度。如果省略 end ，那么 slice 方法将一直复制到 arrayObj 的结尾。如果 end 出现在 start 之前，不复制任何元素到新数组中。\n```js\n    var arr = [\"One\",\"Two\",\"Three\"];\n    var arrtoo = arr.slice(0);\n    arrtoo[1] = \"set Map\";\n    document.writeln(\"数组的原始值：\" + arr + \"<br />\");//Export:数组的原始值：One,Two,Three\n    document.writeln(\"数组的新值：\" + arrtoo + \"<br />\");//Export:数组的新值：One,set Map,Three\n```\n\n方法二：js的concat方法 \n    concat() 方法用于连接两个或多个数组。\n    该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。\n    语法\n    arrayObject.concat(arrayX,arrayX,......,arrayX)\n    说明\n    返回一个新的数组。该数组是通过把所有 arrayX 参数添加到 arrayObject 中生成的。如果要进行 concat() 操作的参数是数组，那么添加的是数组中的元素，而不是数组。\n```js\nvar arr = [\"One\",\"Two\",\"Three\"];\n\nvar arrtooo = arr.concat();\narrtooo[1] = \"set Map To\";\ndocument.writeln(\"数组的原始值：\" + arr + \"<br />\");//Export:数组的原始值：One,Two,Three\ndocument.writeln(\"数组的新值：\" + arrtooo + \"<br />\");//Export:数组的新值：One,set Map To,Three\n```\n\n### 二、对象的深浅拷贝\n\n    var a={name:'yy',age:26};\n    var b=new Object();\n    b.name=a.name;\n    b.age=a.age;\n    a.name='xx';\n    console.log(b);//Object { name=\"yy\", age=26}\n    console.log(a);//Object { name=\"xx\", age=26}\n就是把对象的属性遍历一遍，赋给一个新的对象。\n```js\nvar deepCopy= function(source) { \n\n  \n    var result={};\n\n    for (var key in source) {\n  \n\n        result[key] = typeof source[key]===’object’? deepCoyp(source[key]): source[key];\n\n     } \n   return result; \n}\n```\n","source":"_posts/js深拷贝和浅拷贝.md","raw":"---\ntitle: js深拷贝和浅拷贝\ndate: 2016-05-1 23:54:51\ntags: js \ncategories: 前端\n---\n\n\n### 一、数组的深浅拷贝\n\n>在使用JavaScript对数组进行操作的时候，我们经常需要将数组进行备份，事实证明如果只是简单的将它赋予其他变量，那么我们只要更改其中的任何一个，然后其他的也会跟着改变，这就导致了问题的发生。\n\n    var arr = [\"One\",\"Two\",\"Three\"];\n    var arrto = arr;\n    arrto[1] = \"test\";\n    document.writeln(\"数组的原始值：\" + arr + \"<br />\");//Export:数组的原始值：One,test,Three\n    document.writeln(\"数组的新值：\" + arrto + \"<br />\");//Export:数组的新值：One,test,Three\n\n像上面的这种直接赋值的方式就是浅拷贝，很多时候，这样并不是我们想要得到的结果，其实我们想要的是arr的值不变，不是吗？ \n\n方法一：js的slice函数 \n    \n    对于array对象的slice函数，\n    返回一个数组的一段。（仍为数组）\n    arrayObj.slice(start, [end])\n    参数\n    arrayObj\n    必选项。一个 Array 对象。\n    start\n    必选项。arrayObj 中所指定的部分的开始元素是从零开始计算的下标。\n    end\n    可选项。arrayObj 中所指定的部分的结束元素是从零开始计算的下标。\n    说明\n    slice 方法返回一个 Array 对象，其中包含了 arrayObj 的指定部分。\n    slice 方法一直复制到 end 所指定的元素，但是不包括该元素。如果 start 为负，将它作为 length + start处理，此处 length 为数组的长度。如果 end 为负，就将它作为 length + end 处理，此处 length 为数组的长度。如果省略 end ，那么 slice 方法将一直复制到 arrayObj 的结尾。如果 end 出现在 start 之前，不复制任何元素到新数组中。\n```js\n    var arr = [\"One\",\"Two\",\"Three\"];\n    var arrtoo = arr.slice(0);\n    arrtoo[1] = \"set Map\";\n    document.writeln(\"数组的原始值：\" + arr + \"<br />\");//Export:数组的原始值：One,Two,Three\n    document.writeln(\"数组的新值：\" + arrtoo + \"<br />\");//Export:数组的新值：One,set Map,Three\n```\n\n方法二：js的concat方法 \n    concat() 方法用于连接两个或多个数组。\n    该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。\n    语法\n    arrayObject.concat(arrayX,arrayX,......,arrayX)\n    说明\n    返回一个新的数组。该数组是通过把所有 arrayX 参数添加到 arrayObject 中生成的。如果要进行 concat() 操作的参数是数组，那么添加的是数组中的元素，而不是数组。\n```js\nvar arr = [\"One\",\"Two\",\"Three\"];\n\nvar arrtooo = arr.concat();\narrtooo[1] = \"set Map To\";\ndocument.writeln(\"数组的原始值：\" + arr + \"<br />\");//Export:数组的原始值：One,Two,Three\ndocument.writeln(\"数组的新值：\" + arrtooo + \"<br />\");//Export:数组的新值：One,set Map To,Three\n```\n\n### 二、对象的深浅拷贝\n\n    var a={name:'yy',age:26};\n    var b=new Object();\n    b.name=a.name;\n    b.age=a.age;\n    a.name='xx';\n    console.log(b);//Object { name=\"yy\", age=26}\n    console.log(a);//Object { name=\"xx\", age=26}\n就是把对象的属性遍历一遍，赋给一个新的对象。\n```js\nvar deepCopy= function(source) { \n\n  \n    var result={};\n\n    for (var key in source) {\n  \n\n        result[key] = typeof source[key]===’object’? deepCoyp(source[key]): source[key];\n\n     } \n   return result; \n}\n```\n","slug":"js深拷贝和浅拷贝","published":1,"updated":"2019-08-01T13:36:30.740Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjystiu7h00001olygoe5ss55","content":"<h3 id=\"一、数组的深浅拷贝\"><a href=\"#一、数组的深浅拷贝\" class=\"headerlink\" title=\"一、数组的深浅拷贝\"></a>一、数组的深浅拷贝</h3><blockquote>\n<p>在使用JavaScript对数组进行操作的时候，我们经常需要将数组进行备份，事实证明如果只是简单的将它赋予其他变量，那么我们只要更改其中的任何一个，然后其他的也会跟着改变，这就导致了问题的发生。</p>\n</blockquote>\n<pre><code>var arr = [&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;];\nvar arrto = arr;\narrto[1] = &quot;test&quot;;\ndocument.writeln(&quot;数组的原始值：&quot; + arr + &quot;&lt;br /&gt;&quot;);//Export:数组的原始值：One,test,Three\ndocument.writeln(&quot;数组的新值：&quot; + arrto + &quot;&lt;br /&gt;&quot;);//Export:数组的新值：One,test,Three</code></pre><p>像上面的这种直接赋值的方式就是浅拷贝，很多时候，这样并不是我们想要得到的结果，其实我们想要的是arr的值不变，不是吗？ </p>\n<p>方法一：js的slice函数 </p>\n<pre><code>对于array对象的slice函数，\n返回一个数组的一段。（仍为数组）\narrayObj.slice(start, [end])\n参数\narrayObj\n必选项。一个 Array 对象。\nstart\n必选项。arrayObj 中所指定的部分的开始元素是从零开始计算的下标。\nend\n可选项。arrayObj 中所指定的部分的结束元素是从零开始计算的下标。\n说明\nslice 方法返回一个 Array 对象，其中包含了 arrayObj 的指定部分。\nslice 方法一直复制到 end 所指定的元素，但是不包括该元素。如果 start 为负，将它作为 length + start处理，此处 length 为数组的长度。如果 end 为负，就将它作为 length + end 处理，此处 length 为数组的长度。如果省略 end ，那么 slice 方法将一直复制到 arrayObj 的结尾。如果 end 出现在 start 之前，不复制任何元素到新数组中。</code></pre><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"One\"</span>,<span class=\"string\">\"Two\"</span>,<span class=\"string\">\"Three\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arrtoo = arr.slice(<span class=\"number\">0</span>);</span><br><span class=\"line\">arrtoo[<span class=\"number\">1</span>] = <span class=\"string\">\"set Map\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的原始值：\"</span> + arr + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的原始值：One,Two,Three</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的新值：\"</span> + arrtoo + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的新值：One,set Map,Three</span></span><br></pre></td></tr></table></figure>\n\n<p>方法二：js的concat方法<br>    concat() 方法用于连接两个或多个数组。<br>    该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。<br>    语法<br>    arrayObject.concat(arrayX,arrayX,……,arrayX)<br>    说明<br>    返回一个新的数组。该数组是通过把所有 arrayX 参数添加到 arrayObject 中生成的。如果要进行 concat() 操作的参数是数组，那么添加的是数组中的元素，而不是数组。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"One\"</span>,<span class=\"string\">\"Two\"</span>,<span class=\"string\">\"Three\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arrtooo = arr.concat();</span><br><span class=\"line\">arrtooo[<span class=\"number\">1</span>] = <span class=\"string\">\"set Map To\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的原始值：\"</span> + arr + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的原始值：One,Two,Three</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的新值：\"</span> + arrtooo + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的新值：One,set Map To,Three</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、对象的深浅拷贝\"><a href=\"#二、对象的深浅拷贝\" class=\"headerlink\" title=\"二、对象的深浅拷贝\"></a>二、对象的深浅拷贝</h3><pre><code>var a={name:&apos;yy&apos;,age:26};\nvar b=new Object();\nb.name=a.name;\nb.age=a.age;\na.name=&apos;xx&apos;;\nconsole.log(b);//Object { name=&quot;yy&quot;, age=26}\nconsole.log(a);//Object { name=&quot;xx&quot;, age=26}</code></pre><p>就是把对象的属性遍历一遍，赋给一个新的对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> deepCopy= <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">source</span>) </span>&#123; </span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> result=&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">        result[key] = <span class=\"keyword\">typeof</span> source[key]===’object’? deepCoyp(source[key]): source[key];</span><br><span class=\"line\"></span><br><span class=\"line\">     &#125; </span><br><span class=\"line\">   <span class=\"keyword\">return</span> result; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、数组的深浅拷贝\"><a href=\"#一、数组的深浅拷贝\" class=\"headerlink\" title=\"一、数组的深浅拷贝\"></a>一、数组的深浅拷贝</h3><blockquote>\n<p>在使用JavaScript对数组进行操作的时候，我们经常需要将数组进行备份，事实证明如果只是简单的将它赋予其他变量，那么我们只要更改其中的任何一个，然后其他的也会跟着改变，这就导致了问题的发生。</p>\n</blockquote>\n<pre><code>var arr = [&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;];\nvar arrto = arr;\narrto[1] = &quot;test&quot;;\ndocument.writeln(&quot;数组的原始值：&quot; + arr + &quot;&lt;br /&gt;&quot;);//Export:数组的原始值：One,test,Three\ndocument.writeln(&quot;数组的新值：&quot; + arrto + &quot;&lt;br /&gt;&quot;);//Export:数组的新值：One,test,Three</code></pre><p>像上面的这种直接赋值的方式就是浅拷贝，很多时候，这样并不是我们想要得到的结果，其实我们想要的是arr的值不变，不是吗？ </p>\n<p>方法一：js的slice函数 </p>\n<pre><code>对于array对象的slice函数，\n返回一个数组的一段。（仍为数组）\narrayObj.slice(start, [end])\n参数\narrayObj\n必选项。一个 Array 对象。\nstart\n必选项。arrayObj 中所指定的部分的开始元素是从零开始计算的下标。\nend\n可选项。arrayObj 中所指定的部分的结束元素是从零开始计算的下标。\n说明\nslice 方法返回一个 Array 对象，其中包含了 arrayObj 的指定部分。\nslice 方法一直复制到 end 所指定的元素，但是不包括该元素。如果 start 为负，将它作为 length + start处理，此处 length 为数组的长度。如果 end 为负，就将它作为 length + end 处理，此处 length 为数组的长度。如果省略 end ，那么 slice 方法将一直复制到 arrayObj 的结尾。如果 end 出现在 start 之前，不复制任何元素到新数组中。</code></pre><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"One\"</span>,<span class=\"string\">\"Two\"</span>,<span class=\"string\">\"Three\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arrtoo = arr.slice(<span class=\"number\">0</span>);</span><br><span class=\"line\">arrtoo[<span class=\"number\">1</span>] = <span class=\"string\">\"set Map\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的原始值：\"</span> + arr + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的原始值：One,Two,Three</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的新值：\"</span> + arrtoo + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的新值：One,set Map,Three</span></span><br></pre></td></tr></table></figure>\n\n<p>方法二：js的concat方法<br>    concat() 方法用于连接两个或多个数组。<br>    该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。<br>    语法<br>    arrayObject.concat(arrayX,arrayX,……,arrayX)<br>    说明<br>    返回一个新的数组。该数组是通过把所有 arrayX 参数添加到 arrayObject 中生成的。如果要进行 concat() 操作的参数是数组，那么添加的是数组中的元素，而不是数组。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"One\"</span>,<span class=\"string\">\"Two\"</span>,<span class=\"string\">\"Three\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arrtooo = arr.concat();</span><br><span class=\"line\">arrtooo[<span class=\"number\">1</span>] = <span class=\"string\">\"set Map To\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的原始值：\"</span> + arr + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的原始值：One,Two,Three</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.writeln(<span class=\"string\">\"数组的新值：\"</span> + arrtooo + <span class=\"string\">\"&lt;br /&gt;\"</span>);<span class=\"comment\">//Export:数组的新值：One,set Map To,Three</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、对象的深浅拷贝\"><a href=\"#二、对象的深浅拷贝\" class=\"headerlink\" title=\"二、对象的深浅拷贝\"></a>二、对象的深浅拷贝</h3><pre><code>var a={name:&apos;yy&apos;,age:26};\nvar b=new Object();\nb.name=a.name;\nb.age=a.age;\na.name=&apos;xx&apos;;\nconsole.log(b);//Object { name=&quot;yy&quot;, age=26}\nconsole.log(a);//Object { name=&quot;xx&quot;, age=26}</code></pre><p>就是把对象的属性遍历一遍，赋给一个新的对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> deepCopy= <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">source</span>) </span>&#123; </span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> result=&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> source) &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">        result[key] = <span class=\"keyword\">typeof</span> source[key]===’object’? deepCoyp(source[key]): source[key];</span><br><span class=\"line\"></span><br><span class=\"line\">     &#125; </span><br><span class=\"line\">   <span class=\"keyword\">return</span> result; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"四种方法实现数据双向绑定","date":"2017-07-31T23:54:51.000Z","_content":"\n## 双向数据绑定的4种实现方式。\n\n### 1.手动触发绑定\n\n手动触发绑定的主要思路是通过在数据对象定义 get 和 set 方法(可以使用其他的命名方法)，调用时手动去触发 get 和 set 方法去获取数据，修改数据，改变数据后会主动去触发 get 和 set 函数中视图层的重新渲染。\n\n简单的手动触发绑定代码如下：\n\n```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>手动双向绑定</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-value=\"value\">\n    <span id=\"el\" s-text=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let data = {\n            value: ''\n        }\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            set('value', e.target.value)\n        })\n        \n        function scan() {\n            for (let elem of elems) {\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('s-') !== -1) {\n                        // 调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])\n                    }\n                }\n            }\n        }\n        function set(key, value) {\n            data[key] = value;\n            scan();\n        }\n    </script>\n</body>\n</html>\n```\n\n### 2.数据劫持\n\n数据劫持的基本思路是使用 Object.defineProperty 对 ViewModel 数据对象进行 get 和 set 的监听，当有数据变动的时候扫描元素节点，然后去运行对应节点上的指令（directive）。\n\n代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据劫持</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-value=\"value\">\n    <span id=\"el\" s-text=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let data = {\n            value: ''\n        }\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        let value;\n        defineGetAndSet(data, 'value')\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            data.value = e.target.value;\n        })\n        function scan() {\n            for (let elem of elems) {\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('s-') !== -1) {\n                        // 调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])\n                    }\n                }\n            }\n        }\n        function defineGetAndSet(obj, attrName) {\n            Object.defineProperty(obj, attrName, {\n                get: function () {\n                    return value\n                },\n                set: function (newValue) {\n                    value = newValue;\n                    scan()\n                },\n                configurable: true,\n                enumerable: true\n            })\n        }\n    </script>\n</body>\n</html>\n```\n\n### 3.使用 es6的 Proxy\n\n利用Proxy ，它可以目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此可以对外界的访问进行过滤和改写，实现数据双向数据绑定和上一个类似。\n\n代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>使用 proxy 进行数据双向绑定</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-value=\"value\">\n    <span id=\"el\" s-text=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        // ------------- 看下面 -------------\n        let data = new Proxy({}, {\n            get: function (target, key, receiver) {\n                return target.value\n            },\n            set(target, key, value, receiver) {\n                target.value = value;\n                scan();\n            }\n        })\n        // ------------- 看上面 -------------\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            data.value = e.target.value;\n        })\n        function scan() {\n            for (let elem of elems) {\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('s-') !== -1) {\n                        // 调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])\n                    }\n                }\n            }\n        }\n    </script>\n</body>\n</html>\n```\n\n### 4. 脏检查\n\n脏检查的基本原理是在 ViewModel 对象的某个属性值发生变化的时候找到与这个属性值相关的所有元素，然后去比较数据变化，如果变化就用 directive 指令调用，对这个元素进行重新渲染。\n\n简单的脏检查代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>脏检查</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-bind=\"value\" s-event=\"value\">\n    <span id=\"el\" s-event=\"text\" s-bind=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let directives = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        let data = {\n            value: ''\n        }\n        // 扫描元素，使每个元素的 directive 数组为空\n        scan(elems)\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            data.value = e.target.value;\n            startDirtyCheck(e.target.getAttribute('s-bind'))\n        })\n        function scan() {\n            for (let elem of elems) {\n                elem.directive = []\n            }\n        }\n        // 开启脏检查\n        function startDirtyCheck(value) {\n            let list = document.querySelectorAll('[s-bind=' + value + ']')\n            dirtyCheck(list)\n        }\n        function dirtyCheck(elems) {\n            // 扫描带指令的节点属性\n            for (let i = 0, len = elems.length; i < len; i++) {\n                let elem = elems[i];\n                for (let j = 0, len1 = elem.attributes.length; j < len1; j++) {\n                    let attr = elem.attributes[j];\n                    if (attr.nodeName.indexOf('s-event') !== -1) {\n                        let dataKey = elem.getAttribute('s-bind')\n                        // 进行脏数据检查，如果数据改变，重新执行指令\n                        if (elem.directive[attr.nodeValue] !== data[dataKey]) {\n                            directives[attr.nodeValue].call(elem, data[dataKey])\n                            elem.directive[attr.nodeValue] = data[dataKey]\n                        }\n                    }\n                }\n            }\n        }\n    </script>\n</body>\n</html>\n```","source":"_posts/数据绑定.md","raw":"---\ntitle: 四种方法实现数据双向绑定\ndate: 2017-07-31 23:54:51\ntags: js vue \ncategories: javascript\n---\n\n## 双向数据绑定的4种实现方式。\n\n### 1.手动触发绑定\n\n手动触发绑定的主要思路是通过在数据对象定义 get 和 set 方法(可以使用其他的命名方法)，调用时手动去触发 get 和 set 方法去获取数据，修改数据，改变数据后会主动去触发 get 和 set 函数中视图层的重新渲染。\n\n简单的手动触发绑定代码如下：\n\n```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>手动双向绑定</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-value=\"value\">\n    <span id=\"el\" s-text=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let data = {\n            value: ''\n        }\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            set('value', e.target.value)\n        })\n        \n        function scan() {\n            for (let elem of elems) {\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('s-') !== -1) {\n                        // 调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])\n                    }\n                }\n            }\n        }\n        function set(key, value) {\n            data[key] = value;\n            scan();\n        }\n    </script>\n</body>\n</html>\n```\n\n### 2.数据劫持\n\n数据劫持的基本思路是使用 Object.defineProperty 对 ViewModel 数据对象进行 get 和 set 的监听，当有数据变动的时候扫描元素节点，然后去运行对应节点上的指令（directive）。\n\n代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据劫持</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-value=\"value\">\n    <span id=\"el\" s-text=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let data = {\n            value: ''\n        }\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        let value;\n        defineGetAndSet(data, 'value')\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            data.value = e.target.value;\n        })\n        function scan() {\n            for (let elem of elems) {\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('s-') !== -1) {\n                        // 调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])\n                    }\n                }\n            }\n        }\n        function defineGetAndSet(obj, attrName) {\n            Object.defineProperty(obj, attrName, {\n                get: function () {\n                    return value\n                },\n                set: function (newValue) {\n                    value = newValue;\n                    scan()\n                },\n                configurable: true,\n                enumerable: true\n            })\n        }\n    </script>\n</body>\n</html>\n```\n\n### 3.使用 es6的 Proxy\n\n利用Proxy ，它可以目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此可以对外界的访问进行过滤和改写，实现数据双向数据绑定和上一个类似。\n\n代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>使用 proxy 进行数据双向绑定</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-value=\"value\">\n    <span id=\"el\" s-text=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        // ------------- 看下面 -------------\n        let data = new Proxy({}, {\n            get: function (target, key, receiver) {\n                return target.value\n            },\n            set(target, key, value, receiver) {\n                target.value = value;\n                scan();\n            }\n        })\n        // ------------- 看上面 -------------\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            data.value = e.target.value;\n        })\n        function scan() {\n            for (let elem of elems) {\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('s-') !== -1) {\n                        // 调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])\n                    }\n                }\n            }\n        }\n    </script>\n</body>\n</html>\n```\n\n### 4. 脏检查\n\n脏检查的基本原理是在 ViewModel 对象的某个属性值发生变化的时候找到与这个属性值相关的所有元素，然后去比较数据变化，如果变化就用 directive 指令调用，对这个元素进行重新渲染。\n\n简单的脏检查代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>脏检查</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" s-bind=\"value\" s-event=\"value\">\n    <span id=\"el\" s-event=\"text\" s-bind=\"value\"></span>\n    <script>\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let directives = {\n            text: function (text) {\n                this.innerHTML = text\n            },\n            value: function (value) {\n                this.setAttribute('value', value)\n            }\n        }\n        let data = {\n            value: ''\n        }\n        // 扫描元素，使每个元素的 directive 数组为空\n        scan(elems)\n        // 监听 input 的 keyup 事件\n        elems[1].addEventListener('keyup', function (e) {\n            data.value = e.target.value;\n            startDirtyCheck(e.target.getAttribute('s-bind'))\n        })\n        function scan() {\n            for (let elem of elems) {\n                elem.directive = []\n            }\n        }\n        // 开启脏检查\n        function startDirtyCheck(value) {\n            let list = document.querySelectorAll('[s-bind=' + value + ']')\n            dirtyCheck(list)\n        }\n        function dirtyCheck(elems) {\n            // 扫描带指令的节点属性\n            for (let i = 0, len = elems.length; i < len; i++) {\n                let elem = elems[i];\n                for (let j = 0, len1 = elem.attributes.length; j < len1; j++) {\n                    let attr = elem.attributes[j];\n                    if (attr.nodeName.indexOf('s-event') !== -1) {\n                        let dataKey = elem.getAttribute('s-bind')\n                        // 进行脏数据检查，如果数据改变，重新执行指令\n                        if (elem.directive[attr.nodeValue] !== data[dataKey]) {\n                            directives[attr.nodeValue].call(elem, data[dataKey])\n                            elem.directive[attr.nodeValue] = data[dataKey]\n                        }\n                    }\n                }\n            }\n        }\n    </script>\n</body>\n</html>\n```","slug":"数据绑定","published":1,"updated":"2019-08-01T13:06:11.243Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjystiu9n00051olyzb1glvn5","content":"<h2 id=\"双向数据绑定的4种实现方式。\"><a href=\"#双向数据绑定的4种实现方式。\" class=\"headerlink\" title=\"双向数据绑定的4种实现方式。\"></a>双向数据绑定的4种实现方式。</h2><h3 id=\"1-手动触发绑定\"><a href=\"#1-手动触发绑定\" class=\"headerlink\" title=\"1.手动触发绑定\"></a>1.手动触发绑定</h3><p>手动触发绑定的主要思路是通过在数据对象定义 get 和 set 方法(可以使用其他的命名方法)，调用时手动去触发 get 和 set 方法去获取数据，修改数据，改变数据后会主动去触发 get 和 set 函数中视图层的重新渲染。</p>\n<p>简单的手动触发绑定代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">    &lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=<span class=\"string\">\"X-UA-Compatible\"</span> content=<span class=\"string\">\"ie=edge\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;手动双向绑定&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">\"text\"</span> id=<span class=\"string\">\"input\"</span> s-value=<span class=\"string\">\"value\"</span>&gt;</span><br><span class=\"line\">    &lt;span id=<span class=\"string\">\"el\"</span> s-text=<span class=\"string\">\"value\"</span>&gt;&lt;/span&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">            value: <span class=\"string\">''</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> directive = &#123;</span><br><span class=\"line\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.innerHTML = text</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span><br><span class=\"line\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">set</span>('value', e.target.value)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        </span><br><span class=\"line\">        function scan() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-'</span>) !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 调用属性指令</span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(<span class=\"number\">2</span>)].call(elem, data[attr.nodeValue])</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set</span>(<span class=\"params\">key, value</span>) </span>&#123;</span><br><span class=\"line\">            data[key] = value;</span><br><span class=\"line\">            scan();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>body&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/html&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-数据劫持\"><a href=\"#2-数据劫持\" class=\"headerlink\" title=\"2.数据劫持\"></a>2.数据劫持</h3><p>数据劫持的基本思路是使用 Object.defineProperty 对 ViewModel 数据对象进行 get 和 set 的监听，当有数据变动的时候扫描元素节点，然后去运行对应节点上的指令（directive）。</p>\n<p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据劫持<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">s-value</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">s-text</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"string\">''</span></span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.innerHTML = text</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> value;</span></span><br><span class=\"line\"><span class=\"javascript\">        defineGetAndSet(data, <span class=\"string\">'value'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-'</span>) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"comment\">// 调用属性指令</span></span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">defineGetAndSet</span>(<span class=\"params\">obj, attrName</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">Object</span>.defineProperty(obj, attrName, &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">get</span>: function () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span> value</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">set</span>: function (newValue) &#123;</span></span><br><span class=\"line\">                    value = newValue;</span><br><span class=\"line\">                    scan()</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\"><span class=\"javascript\">                configurable: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                enumerable: <span class=\"literal\">true</span></span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-使用-es6的-Proxy\"><a href=\"#3-使用-es6的-Proxy\" class=\"headerlink\" title=\"3.使用 es6的 Proxy\"></a>3.使用 es6的 Proxy</h3><p>利用Proxy ，它可以目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此可以对外界的访问进行过滤和改写，实现数据双向数据绑定和上一个类似。</p>\n<p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>使用 proxy 进行数据双向绑定<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">s-value</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">s-text</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.innerHTML = text</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// ------------- 看下面 -------------</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = <span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(&#123;&#125;, &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">get</span>: function (target, key, receiver) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> target.value</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">set</span>(target, key, value, receiver) &#123;</span></span><br><span class=\"line\">                target.value = value;</span><br><span class=\"line\">                scan();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// ------------- 看上面 -------------</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-'</span>) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"comment\">// 调用属性指令</span></span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-脏检查\"><a href=\"#4-脏检查\" class=\"headerlink\" title=\"4. 脏检查\"></a>4. 脏检查</h3><p>脏检查的基本原理是在 ViewModel 对象的某个属性值发生变化的时候找到与这个属性值相关的所有元素，然后去比较数据变化，如果变化就用 directive 指令调用，对这个元素进行重新渲染。</p>\n<p>简单的脏检查代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>脏检查<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">s-bind</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">s-event</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">s-event</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">s-bind</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> directives = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.innerHTML = text</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"string\">''</span></span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 扫描元素，使每个元素的 directive 数组为空</span></span></span><br><span class=\"line\">        scan(elems)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\"><span class=\"javascript\">            startDirtyCheck(e.target.getAttribute(<span class=\"string\">'s-bind'</span>))</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\">                elem.directive = []</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 开启脏检查</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startDirtyCheck</span>(<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> list = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'[s-bind='</span> + value + <span class=\"string\">']'</span>)</span></span><br><span class=\"line\">            dirtyCheck(list)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dirtyCheck</span>(<span class=\"params\">elems</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 扫描带指令的节点属性</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, len = elems.length; i &lt; len; i++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">let</span> elem = elems[i];</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>, len1 = elem.attributes.length; j &lt; len1; j++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">let</span> attr = elem.attributes[j];</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-event'</span>) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"keyword\">let</span> dataKey = elem.getAttribute(<span class=\"string\">'s-bind'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"comment\">// 进行脏数据检查，如果数据改变，重新执行指令</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"keyword\">if</span> (elem.directive[attr.nodeValue] !== data[dataKey]) &#123;</span></span><br><span class=\"line\">                            directives[attr.nodeValue].call(elem, data[dataKey])</span><br><span class=\"line\">                            elem.directive[attr.nodeValue] = data[dataKey]</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"双向数据绑定的4种实现方式。\"><a href=\"#双向数据绑定的4种实现方式。\" class=\"headerlink\" title=\"双向数据绑定的4种实现方式。\"></a>双向数据绑定的4种实现方式。</h2><h3 id=\"1-手动触发绑定\"><a href=\"#1-手动触发绑定\" class=\"headerlink\" title=\"1.手动触发绑定\"></a>1.手动触发绑定</h3><p>手动触发绑定的主要思路是通过在数据对象定义 get 和 set 方法(可以使用其他的命名方法)，调用时手动去触发 get 和 set 方法去获取数据，修改数据，改变数据后会主动去触发 get 和 set 函数中视图层的重新渲染。</p>\n<p>简单的手动触发绑定代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">    &lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=<span class=\"string\">\"X-UA-Compatible\"</span> content=<span class=\"string\">\"ie=edge\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;手动双向绑定&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">\"text\"</span> id=<span class=\"string\">\"input\"</span> s-value=<span class=\"string\">\"value\"</span>&gt;</span><br><span class=\"line\">    &lt;span id=<span class=\"string\">\"el\"</span> s-text=<span class=\"string\">\"value\"</span>&gt;&lt;/span&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">            value: <span class=\"string\">''</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> directive = &#123;</span><br><span class=\"line\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.innerHTML = text</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span><br><span class=\"line\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">set</span>('value', e.target.value)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        </span><br><span class=\"line\">        function scan() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-'</span>) !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 调用属性指令</span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(<span class=\"number\">2</span>)].call(elem, data[attr.nodeValue])</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set</span>(<span class=\"params\">key, value</span>) </span>&#123;</span><br><span class=\"line\">            data[key] = value;</span><br><span class=\"line\">            scan();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>body&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/html&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-数据劫持\"><a href=\"#2-数据劫持\" class=\"headerlink\" title=\"2.数据劫持\"></a>2.数据劫持</h3><p>数据劫持的基本思路是使用 Object.defineProperty 对 ViewModel 数据对象进行 get 和 set 的监听，当有数据变动的时候扫描元素节点，然后去运行对应节点上的指令（directive）。</p>\n<p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据劫持<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">s-value</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">s-text</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"string\">''</span></span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.innerHTML = text</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> value;</span></span><br><span class=\"line\"><span class=\"javascript\">        defineGetAndSet(data, <span class=\"string\">'value'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-'</span>) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"comment\">// 调用属性指令</span></span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">defineGetAndSet</span>(<span class=\"params\">obj, attrName</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">Object</span>.defineProperty(obj, attrName, &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">get</span>: function () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span> value</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">set</span>: function (newValue) &#123;</span></span><br><span class=\"line\">                    value = newValue;</span><br><span class=\"line\">                    scan()</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\"><span class=\"javascript\">                configurable: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                enumerable: <span class=\"literal\">true</span></span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-使用-es6的-Proxy\"><a href=\"#3-使用-es6的-Proxy\" class=\"headerlink\" title=\"3.使用 es6的 Proxy\"></a>3.使用 es6的 Proxy</h3><p>利用Proxy ，它可以目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此可以对外界的访问进行过滤和改写，实现数据双向数据绑定和上一个类似。</p>\n<p>代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>使用 proxy 进行数据双向绑定<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">s-value</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">s-text</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.innerHTML = text</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// ------------- 看下面 -------------</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = <span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(&#123;&#125;, &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">get</span>: function (target, key, receiver) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> target.value</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">set</span>(target, key, value, receiver) &#123;</span></span><br><span class=\"line\">                target.value = value;</span><br><span class=\"line\">                scan();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// ------------- 看上面 -------------</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-'</span>) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"comment\">// 调用属性指令</span></span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-脏检查\"><a href=\"#4-脏检查\" class=\"headerlink\" title=\"4. 脏检查\"></a>4. 脏检查</h3><p>脏检查的基本原理是在 ViewModel 对象的某个属性值发生变化的时候找到与这个属性值相关的所有元素，然后去比较数据变化，如果变化就用 directive 指令调用，对这个元素进行重新渲染。</p>\n<p>简单的脏检查代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>脏检查<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">s-bind</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">s-event</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">s-event</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">s-bind</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> directives = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.innerHTML = text</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, value)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            value: <span class=\"string\">''</span></span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 扫描元素，使每个元素的 directive 数组为空</span></span></span><br><span class=\"line\">        scan(elems)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 监听 input 的 keyup 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\"><span class=\"javascript\">            startDirtyCheck(e.target.getAttribute(<span class=\"string\">'s-bind'</span>))</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\">                elem.directive = []</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 开启脏检查</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startDirtyCheck</span>(<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">let</span> list = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'[s-bind='</span> + value + <span class=\"string\">']'</span>)</span></span><br><span class=\"line\">            dirtyCheck(list)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dirtyCheck</span>(<span class=\"params\">elems</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 扫描带指令的节点属性</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, len = elems.length; i &lt; len; i++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">let</span> elem = elems[i];</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>, len1 = elem.attributes.length; j &lt; len1; j++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">let</span> attr = elem.attributes[j];</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'s-event'</span>) !== <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"keyword\">let</span> dataKey = elem.getAttribute(<span class=\"string\">'s-bind'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"comment\">// 进行脏数据检查，如果数据改变，重新执行指令</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"keyword\">if</span> (elem.directive[attr.nodeValue] !== data[dataKey]) &#123;</span></span><br><span class=\"line\">                            directives[attr.nodeValue].call(elem, data[dataKey])</span><br><span class=\"line\">                            elem.directive[attr.nodeValue] = data[dataKey]</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjystiu7h00001olygoe5ss55","category_id":"cjystiu7q00011olyq6m64ddy","_id":"cjystiu7u00041olyzhc551oh"},{"post_id":"cjystiu9n00051olyzb1glvn5","category_id":"cjystiu9p00061olya8xjvruq","_id":"cjystiu9q00091olyev6flu5s"}],"PostTag":[{"post_id":"cjystiu7h00001olygoe5ss55","tag_id":"cjystiu7s00021olyiwpv5bkk","_id":"cjystiu7u00031oly9ip0kcbm"},{"post_id":"cjystiu9n00051olyzb1glvn5","tag_id":"cjystiu9p00071oly793vov77","_id":"cjystiu9q00081olyyna97m3k"}],"Tag":[{"name":"js","_id":"cjystiu7s00021olyiwpv5bkk"},{"name":"js vue","_id":"cjystiu9p00071oly793vov77"}]}}